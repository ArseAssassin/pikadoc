[
    {
        "comment": "/**\n * Module dependencies.\n * @private\n */",
        "meta": {
            "range": [
                230,
                268
            ],
            "filename": "application.js",
            "lineno": 16,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000005",
                "name": "finalhandler",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "Module dependencies.",
        "access": "private",
        "name": "finalhandler",
        "longname": "finalhandler",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                274,
                302
            ],
            "filename": "application.js",
            "lineno": 17,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000011",
                "name": "Router",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "Router",
        "longname": "Router",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                308,
                336
            ],
            "filename": "application.js",
            "lineno": 18,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000017",
                "name": "methods",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "methods",
        "longname": "methods",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                342,
                383
            ],
            "filename": "application.js",
            "lineno": 19,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000023",
                "name": "middleware",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "middleware",
        "longname": "middleware",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                389,
                426
            ],
            "filename": "application.js",
            "lineno": 20,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000029",
                "name": "query",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "query",
        "longname": "query",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                432,
                479
            ],
            "filename": "application.js",
            "lineno": 21,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000035",
                "name": "debug",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "debug",
        "longname": "debug",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                485,
                509
            ],
            "filename": "application.js",
            "lineno": 22,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000043",
                "name": "View",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "View",
        "longname": "View",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                515,
                537
            ],
            "filename": "application.js",
            "lineno": 23,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000049",
                "name": "http",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "http",
        "longname": "http",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                543,
                587
            ],
            "filename": "application.js",
            "lineno": 24,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000055",
                "name": "compileETag",
                "type": "MemberExpression",
                "value": ".compileETag"
            }
        },
        "undocumented": true,
        "name": "compileETag",
        "longname": "compileETag",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                593,
                651
            ],
            "filename": "application.js",
            "lineno": 25,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000063",
                "name": "compileQueryParser",
                "type": "MemberExpression",
                "value": ".compileQueryParser"
            }
        },
        "undocumented": true,
        "name": "compileQueryParser",
        "longname": "compileQueryParser",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                657,
                703
            ],
            "filename": "application.js",
            "lineno": 26,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000071",
                "name": "compileTrust",
                "type": "MemberExpression",
                "value": ".compileTrust"
            }
        },
        "undocumented": true,
        "name": "compileTrust",
        "longname": "compileTrust",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                709,
                747
            ],
            "filename": "application.js",
            "lineno": 27,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000079",
                "name": "deprecate",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "deprecate",
        "longname": "deprecate",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                753,
                787
            ],
            "filename": "application.js",
            "lineno": 28,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000087",
                "name": "flatten",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "flatten",
        "longname": "flatten",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                793,
                823
            ],
            "filename": "application.js",
            "lineno": 29,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000093",
                "name": "merge",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "merge",
        "longname": "merge",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                829,
                862
            ],
            "filename": "application.js",
            "lineno": 30,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000099",
                "name": "resolve",
                "type": "MemberExpression",
                "value": ".resolve"
            }
        },
        "undocumented": true,
        "name": "resolve",
        "longname": "resolve",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                868,
                910
            ],
            "filename": "application.js",
            "lineno": 31,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000107",
                "name": "setPrototypeOf",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "setPrototypeOf",
        "longname": "setPrototypeOf",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Module variables.\n * @private\n */",
        "meta": {
            "range": [
                958,
                1006
            ],
            "filename": "application.js",
            "lineno": 38,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000113",
                "name": "hasOwnProperty",
                "type": "MemberExpression",
                "value": "Object.prototype.hasOwnProperty"
            }
        },
        "description": "Module variables.",
        "access": "private",
        "name": "hasOwnProperty",
        "longname": "hasOwnProperty",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1011,
                1040
            ],
            "filename": "application.js",
            "lineno": 39,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000121",
                "name": "slice",
                "type": "MemberExpression",
                "value": "Array.prototype.slice"
            }
        },
        "undocumented": true,
        "name": "slice",
        "longname": "slice",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Application prototype.\n */",
        "meta": {
            "range": [
                1082,
                1117
            ],
            "filename": "application.js",
            "lineno": 45,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000129",
                "name": "app",
                "type": "AssignmentExpression",
                "value": "exports"
            }
        },
        "description": "Application prototype.",
        "name": "app",
        "longname": "app",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1088,
                1117
            ],
            "filename": "application.js",
            "lineno": 45,
            "columnno": 10,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000131",
                "name": "exports",
                "type": "AssignmentExpression",
                "value": "module.exports",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "",
        "longname": "",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1098,
                1117
            ],
            "filename": "application.js",
            "lineno": 45,
            "columnno": 20,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000133",
                "name": "module.exports",
                "type": "ObjectExpression",
                "value": "{}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "app#module.exports",
        "kind": "member",
        "memberof": "app#module",
        "scope": "static"
    },
    {
        "comment": "/**\n * Variable for trust proxy inheritance back-compat\n * @private\n */",
        "meta": {
            "range": [
                1197,
                1253
            ],
            "filename": "application.js",
            "lineno": 52,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000139",
                "name": "trustProxyDefaultSymbol",
                "type": "Literal",
                "value": "@@symbol:trust_proxy_default"
            }
        },
        "description": "Variable for trust proxy inheritance back-compat",
        "access": "private",
        "name": "trustProxyDefaultSymbol",
        "longname": "trustProxyDefaultSymbol",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Initialize the server.\n *\n *   - setup default configuration\n *   - setup default middleware\n *   - setup route reflection methods\n *\n * @private\n */",
        "meta": {
            "range": [
                1414,
                1538
            ],
            "filename": "application.js",
            "lineno": 64,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000143",
                "name": "app.init",
                "type": "FunctionExpression",
                "value": "init",
                "paramnames": []
            },
            "vars": {
                "this.cache": "app.init#cache",
                "this.engines": "app.init#engines",
                "this.settings": "app.init#settings"
            }
        },
        "description": "Initialize the server.\n\n  - setup default configuration\n  - setup default middleware\n  - setup route reflection methods",
        "access": "private",
        "name": "init",
        "longname": "app.init",
        "kind": "function",
        "memberof": "app",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1445,
                1460
            ],
            "filename": "application.js",
            "lineno": 65,
            "columnno": 2,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000151",
                "name": "this.cache",
                "type": "ObjectExpression",
                "value": "{}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "cache",
        "longname": "app.init#cache",
        "kind": "member",
        "memberof": "app.init",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1464,
                1481
            ],
            "filename": "application.js",
            "lineno": 66,
            "columnno": 2,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000157",
                "name": "this.engines",
                "type": "ObjectExpression",
                "value": "{}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "engines",
        "longname": "app.init#engines",
        "kind": "member",
        "memberof": "app.init",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1485,
                1503
            ],
            "filename": "application.js",
            "lineno": 67,
            "columnno": 2,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000163",
                "name": "this.settings",
                "type": "ObjectExpression",
                "value": "{}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "settings",
        "longname": "app.init#settings",
        "kind": "member",
        "memberof": "app.init",
        "scope": "instance"
    },
    {
        "comment": "/**\n * Initialize application configuration.\n * @private\n */",
        "meta": {
            "range": [
                1603,
                3237
            ],
            "filename": "application.js",
            "lineno": 77,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000174",
                "name": "app.defaultConfiguration",
                "type": "FunctionExpression",
                "value": "defaultConfiguration",
                "paramnames": []
            },
            "vars": {
                "env": "app.defaultConfiguration~env",
                "": null,
                "this.locals": "app.defaultConfiguration#locals",
                "this.mountpath": "app.defaultConfiguration#mountpath",
                "this.locals.settings": "app.defaultConfiguration#locals.settings"
            }
        },
        "description": "Initialize application configuration.",
        "access": "private",
        "name": "defaultConfiguration",
        "longname": "app.defaultConfiguration",
        "kind": "function",
        "memberof": "app",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1670,
                1713
            ],
            "filename": "application.js",
            "lineno": 78,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000182",
                "name": "env",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "env",
        "longname": "app.defaultConfiguration~env",
        "kind": "member",
        "memberof": "app.defaultConfiguration",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2038,
                2056
            ],
            "filename": "application.js",
            "lineno": 90,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000242",
                "name": "configurable",
                "type": "Literal",
                "value": true
            }
        },
        "undocumented": true,
        "name": "configurable",
        "longname": "configurable",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2062,
                2073
            ],
            "filename": "application.js",
            "lineno": 91,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000244",
                "name": "value",
                "type": "Literal",
                "value": true
            }
        },
        "undocumented": true,
        "name": "value",
        "longname": "value",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2660,
                2693
            ],
            "filename": "application.js",
            "lineno": 112,
            "columnno": 2,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000330",
                "name": "this.locals",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "locals",
        "longname": "app.defaultConfiguration#locals",
        "kind": "member",
        "memberof": "app.defaultConfiguration",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2732,
                2752
            ],
            "filename": "application.js",
            "lineno": 115,
            "columnno": 2,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000340",
                "name": "this.mountpath",
                "type": "Literal",
                "value": "/",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "mountpath",
        "longname": "app.defaultConfiguration#mountpath",
        "kind": "member",
        "memberof": "app.defaultConfiguration",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2777,
                2813
            ],
            "filename": "application.js",
            "lineno": 118,
            "columnno": 2,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000346",
                "name": "this.locals.settings",
                "type": "MemberExpression",
                "value": "this.settings",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "settings",
        "longname": "app.defaultConfiguration#locals.settings",
        "kind": "member",
        "memberof": "app.defaultConfiguration#locals",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3068,
                3229
            ],
            "filename": "application.js",
            "lineno": 130,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000397",
                "name": "get",
                "type": "FunctionExpression"
            }
        },
        "undocumented": true,
        "name": "get",
        "longname": "get",
        "kind": "function",
        "scope": "global"
    },
    {
        "comment": "/**\n * lazily adds the base router if it has not yet been added.\n *\n * We cannot add the base router in the defaultConfiguration because\n * it reads app settings which might be set after that has run.\n *\n * @private\n */",
        "meta": {
            "range": [
                3460,
                3779
            ],
            "filename": "application.js",
            "lineno": 144,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000405",
                "name": "app.lazyrouter",
                "type": "FunctionExpression",
                "value": "lazyrouter",
                "paramnames": []
            },
            "vars": {
                "this._router": "app.lazyrouter#_router"
            }
        },
        "description": "lazily adds the base router if it has not yet been added.\n\nWe cannot add the base router in the defaultConfiguration because\nit reads app settings which might be set after that has run.",
        "access": "private",
        "name": "lazyrouter",
        "longname": "app.lazyrouter",
        "kind": "function",
        "memberof": "app",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3528,
                3668
            ],
            "filename": "application.js",
            "lineno": 146,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000419",
                "name": "this._router",
                "type": "NewExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_router",
        "longname": "app.lazyrouter#_router",
        "kind": "member",
        "memberof": "app.lazyrouter",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3562,
                3615
            ],
            "filename": "application.js",
            "lineno": 147,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000426",
                "name": "caseSensitive",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "caseSensitive",
        "longname": "caseSensitive",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3623,
                3661
            ],
            "filename": "application.js",
            "lineno": 148,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000432",
                "name": "strict",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "strict",
        "longname": "strict",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "/**\n * Dispatch a req, res pair into the application. Starts pipeline processing.\n *\n * If no callback is provided, then default error handlers will respond\n * in the event of an error bubbling through the stack.\n *\n * @private\n */",
        "meta": {
            "range": [
                4015,
                4365
            ],
            "filename": "application.js",
            "lineno": 165,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000465",
                "name": "app.handle",
                "type": "FunctionExpression",
                "value": "handle",
                "paramnames": [
                    "req",
                    "res",
                    "callback"
                ]
            },
            "vars": {
                "router": "app.handle~router",
                "done": "app.handle~done"
            }
        },
        "description": "Dispatch a req, res pair into the application. Starts pipeline processing.\n\nIf no callback is provided, then default error handlers will respond\nin the event of an error bubbling through the stack.",
        "access": "private",
        "name": "handle",
        "longname": "app.handle",
        "kind": "function",
        "memberof": "app",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4072,
                4093
            ],
            "filename": "application.js",
            "lineno": 166,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000476",
                "name": "router",
                "type": "MemberExpression",
                "value": "this._router"
            }
        },
        "undocumented": true,
        "name": "router",
        "longname": "app.handle~router",
        "kind": "member",
        "memberof": "app.handle",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4121,
                4228
            ],
            "filename": "application.js",
            "lineno": 169,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000482",
                "name": "done",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "done",
        "longname": "app.handle~done",
        "kind": "member",
        "memberof": "app.handle",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4169,
                4189
            ],
            "filename": "application.js",
            "lineno": 170,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000491",
                "name": "env",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "env",
        "longname": "env",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4195,
                4223
            ],
            "filename": "application.js",
            "lineno": 171,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000497",
                "name": "onerror",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "onerror",
        "longname": "onerror",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "/**\n * Proxy `Router#use()` to add middleware to the app router.\n * See Router#use() documentation for details.\n *\n * If the _fn_ parameter is an express app, then it will be\n * mounted at the _route_ specified.\n *\n * @public\n */",
        "meta": {
            "range": [
                4599,
                5784
            ],
            "filename": "application.js",
            "lineno": 194,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000524",
                "name": "app.use",
                "type": "FunctionExpression",
                "value": "use",
                "paramnames": [
                    "fn"
                ]
            },
            "vars": {
                "offset": "app.use~offset",
                "path": "app.use~path",
                "arg": "app.use~arg",
                "fns": "app.use~fns",
                "router": "app.use~router",
                "": null
            }
        },
        "description": "Proxy `Router#use()` to add middleware to the app router.\nSee Router#use() documentation for details.\n\nIf the _fn_ parameter is an express app, then it will be\nmounted at the _route_ specified.",
        "access": "public",
        "name": "use",
        "longname": "app.use",
        "kind": "function",
        "memberof": "app",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4634,
                4644
            ],
            "filename": "application.js",
            "lineno": 195,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000533",
                "name": "offset",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "offset",
        "longname": "app.use~offset",
        "kind": "member",
        "memberof": "app.use",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4652,
                4662
            ],
            "filename": "application.js",
            "lineno": 196,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000537",
                "name": "path",
                "type": "Literal",
                "value": "/"
            }
        },
        "undocumented": true,
        "name": "path",
        "longname": "app.use~path",
        "kind": "member",
        "memberof": "app.use",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4764,
                4772
            ],
            "filename": "application.js",
            "lineno": 201,
            "columnno": 8,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000547",
                "name": "arg",
                "type": "Identifier",
                "value": "fn"
            }
        },
        "undocumented": true,
        "name": "arg",
        "longname": "app.use~arg",
        "kind": "member",
        "memberof": "app.use",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4834,
                4846
            ],
            "filename": "application.js",
            "lineno": 204,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000564",
                "name": "arg",
                "type": "MemberExpression",
                "funcscope": "app.use",
                "value": "arg[0]",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "arg",
        "longname": "app.use~arg",
        "kind": "member",
        "memberof": "app.use",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4927,
                4937
            ],
            "filename": "application.js",
            "lineno": 209,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000576",
                "name": "offset",
                "type": "Literal",
                "funcscope": "app.use",
                "value": 1,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "offset",
        "longname": "app.use~offset",
        "kind": "member",
        "memberof": "app.use",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4945,
                4954
            ],
            "filename": "application.js",
            "lineno": 210,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000580",
                "name": "path",
                "type": "Identifier",
                "funcscope": "app.use",
                "value": "fn",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "path",
        "longname": "app.use~path",
        "kind": "member",
        "memberof": "app.use",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4973,
                5017
            ],
            "filename": "application.js",
            "lineno": 214,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000584",
                "name": "fns",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "fns",
        "longname": "app.use~fns",
        "kind": "member",
        "memberof": "app.use",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5164,
                5185
            ],
            "filename": "application.js",
            "lineno": 222,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000611",
                "name": "router",
                "type": "MemberExpression",
                "value": "this._router"
            }
        },
        "undocumented": true,
        "name": "router",
        "longname": "app.use~router",
        "kind": "member",
        "memberof": "app.use",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5365,
                5384
            ],
            "filename": "application.js",
            "lineno": 231,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000651",
                "name": "fn.mountpath",
                "type": "Identifier",
                "value": "path",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "mountpath",
        "longname": "fn.mountpath",
        "kind": "member",
        "memberof": "fn",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5390,
                5406
            ],
            "filename": "application.js",
            "lineno": 232,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000657",
                "name": "fn.parent",
                "type": "ThisExpression",
                "value": "this",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "parent",
        "longname": "fn.parent",
        "kind": "member",
        "memberof": "fn",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5523,
                5537
            ],
            "filename": "application.js",
            "lineno": 236,
            "columnno": 10,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000675",
                "name": "orig",
                "type": "MemberExpression",
                "value": "req.app"
            }
        },
        "undocumented": true,
        "name": "orig",
        "longname": "<anonymous>~orig",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n * Proxy to the app `Router#route()`\n * Returns a new `Route` instance for the _path_.\n *\n * Routes are isolated middleware stacks for specific paths.\n * See the Route api docs for details.\n *\n * @public\n */",
        "meta": {
            "range": [
                6000,
                6092
            ],
            "filename": "application.js",
            "lineno": 261,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000719",
                "name": "app.route",
                "type": "FunctionExpression",
                "value": "route",
                "paramnames": [
                    "path"
                ]
            }
        },
        "description": "Proxy to the app `Router#route()`\nReturns a new `Route` instance for the _path_.\n\nRoutes are isolated middleware stacks for specific paths.\nSee the Route api docs for details.",
        "access": "public",
        "name": "route",
        "longname": "app.route",
        "kind": "function",
        "memberof": "app",
        "scope": "static"
    },
    {
        "comment": "/**\n * Register the given template engine callback `fn`\n * as `ext`.\n *\n * By default will `require()` the engine based on the\n * file extension. For example if you try to render\n * a \"foo.ejs\" file Express will invoke the following internally:\n *\n *     app.engine('ejs', require('ejs').__express);\n *\n * For engines that do not provide `.__express` out of the box,\n * or if you wish to \"map\" a different extension to the template engine\n * you may use this method. For example mapping the EJS template engine to\n * \".html\" files:\n *\n *     app.engine('html', require('ejs').renderFile);\n *\n * In this case EJS provides a `.renderFile()` method with\n * the same signature that Express expects: `(path, options, callback)`,\n * though note that it aliases this method as `ejs.__express` internally\n * so if you're using \".ejs\" extensions you don't need to do anything.\n *\n * Some template engines do not follow this convention, the\n * [Consolidate.js](https://github.com/tj/consolidate.js)\n * library was created to map all of node's popular template\n * engines to follow this convention, thus allowing them to\n * work seamlessly within Express.\n *\n * @param {String} ext\n * @param {Function} fn\n * @return {app} for chaining\n * @public\n */",
        "meta": {
            "range": [
                7336,
                7618
            ],
            "filename": "application.js",
            "lineno": 300,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000741",
                "name": "app.engine",
                "type": "FunctionExpression",
                "value": "engine",
                "paramnames": [
                    "ext",
                    "fn"
                ]
            },
            "vars": {
                "extension": "app.engine~extension",
                "this.engines[undefined]": "app.engine#engines[undefined]"
            }
        },
        "description": "Register the given template engine callback `fn`\nas `ext`.\n\nBy default will `require()` the engine based on the\nfile extension. For example if you try to render\na \"foo.ejs\" file Express will invoke the following internally:\n\n    app.engine('ejs', require('ejs').__express);\n\nFor engines that do not provide `.__express` out of the box,\nor if you wish to \"map\" a different extension to the template engine\nyou may use this method. For example mapping the EJS template engine to\n\".html\" files:\n\n    app.engine('html', require('ejs').renderFile);\n\nIn this case EJS provides a `.renderFile()` method with\nthe same signature that Express expects: `(path, options, callback)`,\nthough note that it aliases this method as `ejs.__express` internally\nso if you're using \".ejs\" extensions you don't need to do anything.\n\nSome template engines do not follow this convention, the\n[Consolidate.js](https://github.com/tj/consolidate.js)\nlibrary was created to map all of node's popular template\nengines to follow this convention, thus allowing them to\nwork seamlessly within Express.",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "name": "ext"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "name": "fn"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "app"
                    ]
                },
                "description": "for chaining"
            }
        ],
        "access": "public",
        "name": "engine",
        "longname": "app.engine",
        "kind": "function",
        "memberof": "app",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7496,
                7548
            ],
            "filename": "application.js",
            "lineno": 306,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000761",
                "name": "extension",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "extension",
        "longname": "app.engine~extension",
        "kind": "member",
        "memberof": "app.engine",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7571,
                7599
            ],
            "filename": "application.js",
            "lineno": 311,
            "columnno": 2,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000774",
                "name": "this.engines[undefined]",
                "type": "Identifier",
                "value": "fn",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "engines[undefined]",
        "longname": "app.engine#engines[undefined]",
        "kind": "member",
        "memberof": "app.engine",
        "scope": "instance"
    },
    {
        "comment": "/**\n * Proxy to `Router#param()` with one added api feature. The _name_ parameter\n * can be an array of names.\n *\n * See the Router#param() docs for more details.\n *\n * @param {String|Array} name\n * @param {Function} fn\n * @return {app} for chaining\n * @public\n */",
        "meta": {
            "range": [
                7887,
                8130
            ],
            "filename": "application.js",
            "lineno": 328,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000784",
                "name": "app.param",
                "type": "FunctionExpression",
                "value": "param",
                "paramnames": [
                    "name",
                    "fn"
                ]
            },
            "vars": {
                "i": "app.param~i"
            }
        },
        "description": "Proxy to `Router#param()` with one added api feature. The _name_ parameter\ncan be an array of names.\n\nSee the Router#param() docs for more details.",
        "params": [
            {
                "type": {
                    "names": [
                        "String",
                        "Array"
                    ]
                },
                "name": "name"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "name": "fn"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "app"
                    ]
                },
                "description": "for chaining"
            }
        ],
        "access": "public",
        "name": "param",
        "longname": "app.param",
        "kind": "function",
        "memberof": "app",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7990,
                7995
            ],
            "filename": "application.js",
            "lineno": 332,
            "columnno": 13,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000807",
                "name": "i",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "i",
        "longname": "app.param~i",
        "kind": "member",
        "memberof": "app.param",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n * Assign `setting` to `val`, or return `setting`'s value.\n *\n *    app.set('foo', 'bar');\n *    app.set('foo');\n *    // => \"bar\"\n *\n * Mounted servers inherit their parent server's settings.\n *\n * @param {String} setting\n * @param {*} [val]\n * @return {Server} for chaining\n * @public\n */",
        "meta": {
            "range": [
                8429,
                9387
            ],
            "filename": "application.js",
            "lineno": 359,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000841",
                "name": "app.set",
                "type": "FunctionExpression",
                "value": "set",
                "paramnames": [
                    "setting",
                    "val"
                ]
            },
            "vars": {
                "settings": "app.set~settings",
                "this.settings[undefined]": "app.set#settings[undefined]"
            }
        },
        "description": "Assign `setting` to `val`, or return `setting`'s value.\n\n   app.set('foo', 'bar');\n   app.set('foo');\n   // => \"bar\"\n\nMounted servers inherit their parent server's settings.",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "name": "setting"
            },
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "optional": true,
                "name": "val"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Server"
                    ]
                },
                "description": "for chaining"
            }
        ],
        "access": "public",
        "name": "set",
        "longname": "app.set",
        "kind": "function",
        "memberof": "app",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8532,
                8556
            ],
            "filename": "application.js",
            "lineno": 362,
            "columnno": 8,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000858",
                "name": "settings",
                "type": "MemberExpression",
                "value": "this.settings"
            }
        },
        "undocumented": true,
        "name": "settings",
        "longname": "app.set~settings",
        "kind": "member",
        "memberof": "app.set",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8714,
                8756
            ],
            "filename": "application.js",
            "lineno": 369,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000885",
                "name": "settings",
                "type": "CallExpression",
                "funcscope": "app.set",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "settings",
        "longname": "app.set~settings",
        "kind": "member",
        "memberof": "app.set",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8849,
                8877
            ],
            "filename": "application.js",
            "lineno": 378,
            "columnno": 2,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000901",
                "name": "this.settings[undefined]",
                "type": "Identifier",
                "value": "val",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "settings[undefined]",
        "longname": "app.set#settings[undefined]",
        "kind": "member",
        "memberof": "app.set",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9301,
                9319
            ],
            "filename": "application.js",
            "lineno": 393,
            "columnno": 8,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000955",
                "name": "configurable",
                "type": "Literal",
                "value": true
            }
        },
        "undocumented": true,
        "name": "configurable",
        "longname": "configurable",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9329,
                9341
            ],
            "filename": "application.js",
            "lineno": 394,
            "columnno": 8,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000957",
                "name": "value",
                "type": "Literal",
                "value": false
            }
        },
        "undocumented": true,
        "name": "value",
        "longname": "value",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "/**\n * Return the app's absolute pathname\n * based on the parent(s) that have\n * mounted it.\n *\n * For example if the application was\n * mounted as \"/admin\", which itself\n * was mounted as \"/blog\" then the\n * return value would be \"/blog/admin\".\n *\n * @return {String}\n * @private\n */",
        "meta": {
            "range": [
                9676,
                9779
            ],
            "filename": "application.js",
            "lineno": 417,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000963",
                "name": "app.path",
                "type": "FunctionExpression",
                "value": "path",
                "paramnames": []
            }
        },
        "description": "Return the app's absolute pathname\nbased on the parent(s) that have\nmounted it.\n\nFor example if the application was\nmounted as \"/admin\", which itself\nwas mounted as \"/blog\" then the\nreturn value would be \"/blog/admin\".",
        "returns": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                }
            }
        ],
        "access": "private",
        "name": "path",
        "longname": "app.path",
        "kind": "function",
        "memberof": "app",
        "scope": "static"
    },
    {
        "comment": "/**\n * Check if `setting` is enabled (truthy).\n *\n *    app.enabled('foo')\n *    // => false\n *\n *    app.enable('foo')\n *    app.enabled('foo')\n *    // => true\n *\n * @param {String} setting\n * @return {Boolean}\n * @public\n */",
        "meta": {
            "range": [
                10011,
                10091
            ],
            "filename": "application.js",
            "lineno": 438,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100000987",
                "name": "app.enabled",
                "type": "FunctionExpression",
                "value": "enabled",
                "paramnames": [
                    "setting"
                ]
            }
        },
        "description": "Check if `setting` is enabled (truthy).\n\n   app.enabled('foo')\n   // => false\n\n   app.enable('foo')\n   app.enabled('foo')\n   // => true",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "name": "setting"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                }
            }
        ],
        "access": "public",
        "name": "enabled",
        "longname": "app.enabled",
        "kind": "function",
        "memberof": "app",
        "scope": "static"
    },
    {
        "comment": "/**\n * Check if `setting` is disabled.\n *\n *    app.disabled('foo')\n *    // => true\n *\n *    app.enable('foo')\n *    app.disabled('foo')\n *    // => false\n *\n * @param {String} setting\n * @return {Boolean}\n * @public\n */",
        "meta": {
            "range": [
                10317,
                10391
            ],
            "filename": "application.js",
            "lineno": 457,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001004",
                "name": "app.disabled",
                "type": "FunctionExpression",
                "value": "disabled",
                "paramnames": [
                    "setting"
                ]
            }
        },
        "description": "Check if `setting` is disabled.\n\n   app.disabled('foo')\n   // => true\n\n   app.enable('foo')\n   app.disabled('foo')\n   // => false",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "name": "setting"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                }
            }
        ],
        "access": "public",
        "name": "disabled",
        "longname": "app.disabled",
        "kind": "function",
        "memberof": "app",
        "scope": "static"
    },
    {
        "comment": "/**\n * Enable `setting`.\n *\n * @param {String} setting\n * @return {app} for chaining\n * @public\n */",
        "meta": {
            "range": [
                10495,
                10570
            ],
            "filename": "application.js",
            "lineno": 469,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001020",
                "name": "app.enable",
                "type": "FunctionExpression",
                "value": "enable",
                "paramnames": [
                    "setting"
                ]
            }
        },
        "description": "Enable `setting`.",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "name": "setting"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "app"
                    ]
                },
                "description": "for chaining"
            }
        ],
        "access": "public",
        "name": "enable",
        "longname": "app.enable",
        "kind": "function",
        "memberof": "app",
        "scope": "static"
    },
    {
        "comment": "/**\n * Disable `setting`.\n *\n * @param {String} setting\n * @return {app} for chaining\n * @public\n */",
        "meta": {
            "range": [
                10675,
                10753
            ],
            "filename": "application.js",
            "lineno": 481,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001036",
                "name": "app.disable",
                "type": "FunctionExpression",
                "value": "disable",
                "paramnames": [
                    "setting"
                ]
            }
        },
        "description": "Disable `setting`.",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "name": "setting"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "app"
                    ]
                },
                "description": "for chaining"
            }
        ],
        "access": "public",
        "name": "disable",
        "longname": "app.disable",
        "kind": "function",
        "memberof": "app",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10855,
                11145
            ],
            "filename": "application.js",
            "lineno": 490,
            "columnno": 2,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001060",
                "name": "app[undefined]",
                "type": "FunctionExpression",
                "paramnames": [
                    "path"
                ]
            },
            "vars": {
                "route": "app[undefined]~route"
            }
        },
        "undocumented": true,
        "name": "app[undefined]",
        "longname": "app[undefined]",
        "kind": "function",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11033,
                11065
            ],
            "filename": "application.js",
            "lineno": 498,
            "columnno": 8,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001090",
                "name": "route",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "route",
        "longname": "app[undefined]~route",
        "kind": "member",
        "memberof": "app[undefined]",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n * Special-cased \"all\" method, applying the given route `path`,\n * middleware, and callback to _every_ HTTP method.\n *\n * @param {String} path\n * @param {Function} ...\n * @return {app} for chaining\n * @public\n */",
        "meta": {
            "range": [
                11370,
                11611
            ],
            "filename": "application.js",
            "lineno": 514,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001116",
                "name": "app.all",
                "type": "FunctionExpression",
                "value": "all",
                "paramnames": [
                    "path"
                ]
            },
            "vars": {
                "route": "app.all~route",
                "args": "app.all~args",
                "i": "app.all~i"
            }
        },
        "description": "Special-cased \"all\" method, applying the given route `path`,\nmiddleware, and callback to _every_ HTTP method.",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "name": "path"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "name": "..."
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "app"
                    ]
                },
                "description": "for chaining"
            }
        ],
        "access": "public",
        "name": "all",
        "longname": "app.all",
        "kind": "function",
        "memberof": "app",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11429,
                11461
            ],
            "filename": "application.js",
            "lineno": 517,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001130",
                "name": "route",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "route",
        "longname": "app.all~route",
        "kind": "member",
        "memberof": "app.all",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11469,
                11500
            ],
            "filename": "application.js",
            "lineno": 518,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001140",
                "name": "args",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "args",
        "longname": "app.all~args",
        "kind": "member",
        "memberof": "app.all",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11514,
                11519
            ],
            "filename": "application.js",
            "lineno": 520,
            "columnno": 11,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001150",
                "name": "i",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "i",
        "longname": "app.all~i",
        "kind": "member",
        "memberof": "app.all",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11638,
                11713
            ],
            "filename": "application.js",
            "lineno": 529,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001175",
                "name": "app.del",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "del",
        "longname": "app.del",
        "kind": "member",
        "memberof": "app",
        "scope": "static"
    },
    {
        "comment": "/**\n * Render the given view `name` name with `options`\n * and a callback accepting an error and the\n * rendered template string.\n *\n * Example:\n *\n *    app.render('email', { name: 'Tobi' }, function(err, html){\n *      // ...\n *    })\n *\n * @param {String} name\n * @param {Object|Function} options or fn\n * @param {Function} callback\n * @public\n */",
        "meta": {
            "range": [
                12068,
                13530
            ],
            "filename": "application.js",
            "lineno": 548,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001188",
                "name": "app.render",
                "type": "FunctionExpression",
                "value": "render",
                "paramnames": [
                    "name",
                    "options",
                    "callback"
                ]
            },
            "vars": {
                "cache": "app.render~cache",
                "done": "app.render~done",
                "engines": "app.render~engines",
                "opts": "app.render~opts",
                "renderOptions": "app.render~renderOptions",
                "view": "app.render~view",
                "renderOptions.cache": "app.render~renderOptions.cache",
                "View": "app.render~View",
                "dirs": "app.render~dirs",
                "err": "app.render~err",
                "err.view": "app.render~err.view",
                "cache[undefined]": "app.render~cache.undefined]"
            }
        },
        "description": "Render the given view `name` name with `options`\nand a callback accepting an error and the\nrendered template string.\n\nExample:\n\n   app.render('email', { name: 'Tobi' }, function(err, html){\n     // ...\n   })",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "name": "name"
            },
            {
                "type": {
                    "names": [
                        "Object",
                        "function"
                    ]
                },
                "description": "or fn",
                "name": "options"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "name": "callback"
            }
        ],
        "access": "public",
        "name": "render",
        "longname": "app.render",
        "kind": "function",
        "memberof": "app",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12130,
                12148
            ],
            "filename": "application.js",
            "lineno": 549,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001199",
                "name": "cache",
                "type": "MemberExpression",
                "value": "this.cache"
            }
        },
        "undocumented": true,
        "name": "cache",
        "longname": "app.render~cache",
        "kind": "member",
        "memberof": "app.render",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12156,
                12171
            ],
            "filename": "application.js",
            "lineno": 550,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001205",
                "name": "done",
                "type": "Identifier",
                "value": "callback"
            }
        },
        "undocumented": true,
        "name": "done",
        "longname": "app.render~done",
        "kind": "member",
        "memberof": "app.render",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12179,
                12201
            ],
            "filename": "application.js",
            "lineno": 551,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001209",
                "name": "engines",
                "type": "MemberExpression",
                "value": "this.engines"
            }
        },
        "undocumented": true,
        "name": "engines",
        "longname": "app.render~engines",
        "kind": "member",
        "memberof": "app.render",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12209,
                12223
            ],
            "filename": "application.js",
            "lineno": 552,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001215",
                "name": "opts",
                "type": "Identifier",
                "value": "options"
            }
        },
        "undocumented": true,
        "name": "opts",
        "longname": "app.render~opts",
        "kind": "member",
        "memberof": "app.render",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12231,
                12249
            ],
            "filename": "application.js",
            "lineno": 553,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001219",
                "name": "renderOptions",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "undocumented": true,
        "name": "renderOptions",
        "longname": "app.render~renderOptions",
        "kind": "member",
        "memberof": "app.render",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12257,
                12261
            ],
            "filename": "application.js",
            "lineno": 554,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001223",
                "name": "view"
            }
        },
        "undocumented": true,
        "name": "view",
        "longname": "app.render~view",
        "kind": "member",
        "memberof": "app.render",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12352,
                12366
            ],
            "filename": "application.js",
            "lineno": 558,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001232",
                "name": "done",
                "type": "Identifier",
                "funcscope": "app.render",
                "value": "options",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "done",
        "longname": "app.render~done",
        "kind": "member",
        "memberof": "app.render",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12372,
                12381
            ],
            "filename": "application.js",
            "lineno": 559,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001236",
                "name": "opts",
                "type": "ObjectExpression",
                "funcscope": "app.render",
                "value": "{}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "opts",
        "longname": "app.render~opts",
        "kind": "member",
        "memberof": "app.render",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12676,
                12724
            ],
            "filename": "application.js",
            "lineno": 575,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001271",
                "name": "renderOptions.cache",
                "type": "CallExpression",
                "funcscope": "app.render",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "cache",
        "longname": "app.render~renderOptions.cache",
        "kind": "member",
        "memberof": "app.render~renderOptions",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12782,
                12800
            ],
            "filename": "application.js",
            "lineno": 580,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001286",
                "name": "view",
                "type": "MemberExpression",
                "funcscope": "app.render",
                "value": "cache[undefined]",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "view",
        "longname": "app.render~view",
        "kind": "member",
        "memberof": "app.render",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12840,
                12863
            ],
            "filename": "application.js",
            "lineno": 585,
            "columnno": 8,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001296",
                "name": "View",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "View",
        "longname": "app.render~View",
        "kind": "member",
        "memberof": "app.render",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12870,
                13000
            ],
            "filename": "application.js",
            "lineno": 587,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001304",
                "name": "view",
                "type": "NewExpression",
                "funcscope": "app.render",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "view",
        "longname": "app.render~view",
        "kind": "member",
        "memberof": "app.render",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12900,
                12938
            ],
            "filename": "application.js",
            "lineno": 588,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001310",
                "name": "defaultEngine",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "defaultEngine",
        "longname": "defaultEngine",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12946,
                12969
            ],
            "filename": "application.js",
            "lineno": 589,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001316",
                "name": "root",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "root",
        "longname": "root",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12977,
                12993
            ],
            "filename": "application.js",
            "lineno": 590,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001322",
                "name": "engines",
                "type": "Identifier",
                "value": "engines"
            }
        },
        "undocumented": true,
        "name": "engines",
        "longname": "engines",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13035,
                13247
            ],
            "filename": "application.js",
            "lineno": 594,
            "columnno": 10,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001331",
                "name": "dirs",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "dirs",
        "longname": "app.render~dirs",
        "kind": "member",
        "memberof": "app.render",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13258,
                13330
            ],
            "filename": "application.js",
            "lineno": 597,
            "columnno": 10,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001388",
                "name": "err",
                "type": "NewExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "err",
        "longname": "app.render~err",
        "kind": "member",
        "memberof": "app.render",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13338,
                13353
            ],
            "filename": "application.js",
            "lineno": 598,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001400",
                "name": "err.view",
                "type": "Identifier",
                "funcscope": "app.render",
                "value": "view",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "view",
        "longname": "app.render~err.view",
        "kind": "member",
        "memberof": "app.render~err",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13446,
                13464
            ],
            "filename": "application.js",
            "lineno": 604,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001415",
                "name": "cache[undefined]",
                "type": "Identifier",
                "funcscope": "app.render",
                "value": "view",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "app.render~cache.undefined]",
        "kind": "member",
        "memberof": "app.render~cache",
        "scope": "static"
    },
    {
        "comment": "/**\n * Listen for connections.\n *\n * A node `http.Server` is returned, with this\n * application (which is a `Function`) as its\n * callback. If you wish to create both an HTTP\n * and HTTPS server you may do so with the \"http\"\n * and \"https\" modules as shown here:\n *\n *    var http = require('http')\n *      , https = require('https')\n *      , express = require('express')\n *      , app = express();\n *\n *    http.createServer(app).listen(80);\n *    https.createServer({ ... }, app).listen(443);\n *\n * @return {http.Server}\n * @public\n */",
        "meta": {
            "range": [
                14073,
                14196
            ],
            "filename": "application.js",
            "lineno": 633,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001427",
                "name": "app.listen",
                "type": "FunctionExpression",
                "value": "listen",
                "paramnames": []
            },
            "vars": {
                "server": "app.listen~server"
            }
        },
        "description": "Listen for connections.\n\nA node `http.Server` is returned, with this\napplication (which is a `Function`) as its\ncallback. If you wish to create both an HTTP\nand HTTPS server you may do so with the \"http\"\nand \"https\" modules as shown here:\n\n   var http = require('http')\n     , https = require('https')\n     , express = require('express')\n     , app = express();\n\n   http.createServer(app).listen(80);\n   https.createServer({ ... }, app).listen(443);",
        "returns": [
            {
                "type": {
                    "names": [
                        "http.Server"
                    ]
                }
            }
        ],
        "access": "public",
        "name": "listen",
        "longname": "app.listen",
        "kind": "function",
        "memberof": "app",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                14112,
                14144
            ],
            "filename": "application.js",
            "lineno": 634,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001435",
                "name": "server",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "server",
        "longname": "app.listen~server",
        "kind": "member",
        "memberof": "app.listen",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n * Log error using console.error.\n *\n * @param {Error} err\n * @private\n */",
        "meta": {
            "range": [
                14279,
                14412
            ],
            "filename": "application.js",
            "lineno": 645,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001451",
                "name": "logerror",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "err"
                ]
            }
        },
        "description": "Log error using console.error.",
        "params": [
            {
                "type": {
                    "names": [
                        "Error"
                    ]
                },
                "name": "err"
            }
        ],
        "access": "private",
        "name": "logerror",
        "longname": "logerror",
        "kind": "function",
        "scope": "global"
    },
    {
        "comment": "/**\n * Try rendering a view.\n * @private\n */",
        "meta": {
            "range": [
                14460,
                14592
            ],
            "filename": "application.js",
            "lineno": 655,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001476",
                "name": "tryRender",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "view",
                    "options",
                    "callback"
                ]
            }
        },
        "description": "Try rendering a view.",
        "access": "private",
        "name": "tryRender",
        "longname": "tryRender",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Module dependencies.\n */",
        "meta": {
            "range": [
                218,
                253
            ],
            "filename": "express.js",
            "lineno": 15,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001501",
                "name": "bodyParser",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "Module dependencies.",
        "name": "bodyParser",
        "longname": "bodyParser",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                258,
                303
            ],
            "filename": "express.js",
            "lineno": 16,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001507",
                "name": "EventEmitter",
                "type": "MemberExpression",
                "value": ".EventEmitter"
            }
        },
        "undocumented": true,
        "name": "EventEmitter",
        "longname": "EventEmitter",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                309,
                345
            ],
            "filename": "express.js",
            "lineno": 17,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001515",
                "name": "mixin",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "mixin",
        "longname": "mixin",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                351,
                383
            ],
            "filename": "express.js",
            "lineno": 18,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001521",
                "name": "proto",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "proto",
        "longname": "proto",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                389,
                422
            ],
            "filename": "express.js",
            "lineno": 19,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001527",
                "name": "Route",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "Route",
        "longname": "Route",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                428,
                456
            ],
            "filename": "express.js",
            "lineno": 20,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001533",
                "name": "Router",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "Router",
        "longname": "Router",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                462,
                488
            ],
            "filename": "express.js",
            "lineno": 21,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001539",
                "name": "req",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "req",
        "longname": "req",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                494,
                521
            ],
            "filename": "express.js",
            "lineno": 22,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001545",
                "name": "res",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "res",
        "longname": "res",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Expose `createApplication()`.\n */",
        "meta": {
            "range": [
                566,
                610
            ],
            "filename": "express.js",
            "lineno": 28,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001551",
                "name": "exports",
                "type": "AssignmentExpression",
                "value": "module.exports",
                "paramnames": []
            }
        },
        "description": "Expose `createApplication()`.",
        "name": "",
        "longname": "",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                576,
                610
            ],
            "filename": "express.js",
            "lineno": 28,
            "columnno": 10,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001553",
                "name": "module.exports",
                "type": "Identifier",
                "value": "createApplication",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * Create an express application.\n *\n * @return {Function}\n * @api public\n */",
        "meta": {
            "range": [
                696,
                1263
            ],
            "filename": "express.js",
            "lineno": 37,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001558",
                "name": "createApplication",
                "type": "FunctionDeclaration",
                "paramnames": []
            },
            "vars": {
                "app": "createApplication~app",
                "": null,
                "app.request": "createApplication~app.request",
                "app.response": "createApplication~app.response"
            }
        },
        "description": "Create an express application.",
        "returns": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                }
            }
        ],
        "tags": [
            {
                "originalTitle": "api",
                "title": "api",
                "text": "public",
                "value": "public"
            }
        ],
        "name": "createApplication",
        "longname": "createApplication",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                733,
                801
            ],
            "filename": "express.js",
            "lineno": 38,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001562",
                "name": "app",
                "type": "FunctionExpression"
            }
        },
        "undocumented": true,
        "name": "app",
        "longname": "createApplication~app",
        "kind": "function",
        "memberof": "createApplication",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                936,
                1053
            ],
            "filename": "express.js",
            "lineno": 46,
            "columnno": 2,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001592",
                "name": "app.request",
                "type": "CallExpression",
                "funcscope": "createApplication",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "request",
        "longname": "createApplication~app.request",
        "kind": "member",
        "memberof": "createApplication~app",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                975,
                1048
            ],
            "filename": "express.js",
            "lineno": 47,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001602",
                "name": "app",
                "type": "ObjectExpression",
                "value": "{\"configurable\":true,\"enumerable\":true,\"writable\":true,\"value\":\"\"}"
            }
        },
        "undocumented": true,
        "name": "app",
        "longname": "app",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                982,
                1000
            ],
            "filename": "express.js",
            "lineno": 47,
            "columnno": 11,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001604",
                "name": "configurable",
                "type": "Literal",
                "value": true
            }
        },
        "undocumented": true,
        "name": "configurable",
        "longname": "app.configurable",
        "kind": "member",
        "memberof": "app",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1002,
                1018
            ],
            "filename": "express.js",
            "lineno": 47,
            "columnno": 31,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001606",
                "name": "enumerable",
                "type": "Literal",
                "value": true
            }
        },
        "undocumented": true,
        "name": "enumerable",
        "longname": "app.enumerable",
        "kind": "member",
        "memberof": "app",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1020,
                1034
            ],
            "filename": "express.js",
            "lineno": 47,
            "columnno": 49,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001608",
                "name": "writable",
                "type": "Literal",
                "value": true
            }
        },
        "undocumented": true,
        "name": "writable",
        "longname": "app.writable",
        "kind": "member",
        "memberof": "app",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1036,
                1046
            ],
            "filename": "express.js",
            "lineno": 47,
            "columnno": 65,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001610",
                "name": "value",
                "type": "Identifier",
                "value": "app"
            }
        },
        "undocumented": true,
        "name": "value",
        "longname": "app.value",
        "kind": "member",
        "memberof": "app",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1114,
                1232
            ],
            "filename": "express.js",
            "lineno": 51,
            "columnno": 2,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001613",
                "name": "app.response",
                "type": "CallExpression",
                "funcscope": "createApplication",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "response",
        "longname": "createApplication~app.response",
        "kind": "member",
        "memberof": "createApplication~app",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1154,
                1227
            ],
            "filename": "express.js",
            "lineno": 52,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001623",
                "name": "app",
                "type": "ObjectExpression",
                "value": "{\"configurable\":true,\"enumerable\":true,\"writable\":true,\"value\":\"\"}"
            }
        },
        "undocumented": true,
        "name": "app",
        "longname": "app",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1161,
                1179
            ],
            "filename": "express.js",
            "lineno": 52,
            "columnno": 11,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001625",
                "name": "configurable",
                "type": "Literal",
                "value": true
            }
        },
        "undocumented": true,
        "name": "configurable",
        "longname": "app.configurable",
        "kind": "member",
        "memberof": "app",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1181,
                1197
            ],
            "filename": "express.js",
            "lineno": 52,
            "columnno": 31,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001627",
                "name": "enumerable",
                "type": "Literal",
                "value": true
            }
        },
        "undocumented": true,
        "name": "enumerable",
        "longname": "app.enumerable",
        "kind": "member",
        "memberof": "app",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1199,
                1213
            ],
            "filename": "express.js",
            "lineno": 52,
            "columnno": 49,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001629",
                "name": "writable",
                "type": "Literal",
                "value": true
            }
        },
        "undocumented": true,
        "name": "writable",
        "longname": "app.writable",
        "kind": "member",
        "memberof": "app",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1215,
                1225
            ],
            "filename": "express.js",
            "lineno": 52,
            "columnno": 65,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001631",
                "name": "value",
                "type": "Identifier",
                "value": "app"
            }
        },
        "undocumented": true,
        "name": "value",
        "longname": "app.value",
        "kind": "member",
        "memberof": "app",
        "scope": "static"
    },
    {
        "comment": "/**\n * Expose the prototypes.\n */",
        "meta": {
            "range": [
                1300,
                1327
            ],
            "filename": "express.js",
            "lineno": 63,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001641",
                "name": "exports.application",
                "type": "Identifier",
                "value": "proto",
                "paramnames": []
            }
        },
        "description": "Expose the prototypes.",
        "name": "application",
        "longname": "application",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1329,
                1350
            ],
            "filename": "express.js",
            "lineno": 64,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001647",
                "name": "exports.request",
                "type": "Identifier",
                "value": "req",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "request",
        "longname": "request",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1352,
                1374
            ],
            "filename": "express.js",
            "lineno": 65,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001653",
                "name": "exports.response",
                "type": "Identifier",
                "value": "res",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "response",
        "longname": "response",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "/**\n * Expose constructors.\n */",
        "meta": {
            "range": [
                1410,
                1431
            ],
            "filename": "express.js",
            "lineno": 71,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001659",
                "name": "exports.Route",
                "type": "Identifier",
                "value": "Route",
                "paramnames": []
            }
        },
        "description": "Expose constructors.",
        "name": "Route",
        "longname": "Route",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1433,
                1456
            ],
            "filename": "express.js",
            "lineno": 72,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001665",
                "name": "exports.Router",
                "type": "Identifier",
                "value": "Router",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "Router",
        "longname": "Router",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "/**\n * Expose middleware\n */",
        "meta": {
            "range": [
                1489,
                1519
            ],
            "filename": "express.js",
            "lineno": 78,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001671",
                "name": "exports.json",
                "type": "MemberExpression",
                "value": "bodyParser.json",
                "paramnames": []
            }
        },
        "description": "Expose middleware",
        "name": "json",
        "longname": "json",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1520,
                1565
            ],
            "filename": "express.js",
            "lineno": 79,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001679",
                "name": "exports.query",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "query",
        "longname": "query",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1567,
                1595
            ],
            "filename": "express.js",
            "lineno": 80,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001687",
                "name": "exports.raw",
                "type": "MemberExpression",
                "value": "bodyParser.raw",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "raw",
        "longname": "raw",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1596,
                1636
            ],
            "filename": "express.js",
            "lineno": 81,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001695",
                "name": "exports.static",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "static",
        "longname": "static",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1638,
                1668
            ],
            "filename": "express.js",
            "lineno": 82,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001703",
                "name": "exports.text",
                "type": "MemberExpression",
                "value": "bodyParser.text",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "text",
        "longname": "text",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1669,
                1711
            ],
            "filename": "express.js",
            "lineno": 83,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001711",
                "name": "exports.urlencoded",
                "type": "MemberExpression",
                "value": "bodyParser.urlencoded",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "urlencoded",
        "longname": "urlencoded",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "/**\n * Replace removed middleware with an appropriate error message.\n */",
        "meta": {
            "range": [
                1791,
                2067
            ],
            "filename": "express.js",
            "lineno": 89,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001719",
                "name": "removedMiddlewares",
                "type": "ArrayExpression",
                "value": "[\"bodyParser\",\"compress\",\"cookieSession\",\"session\",\"logger\",\"cookieParser\",\"favicon\",\"responseTime\",\"errorHandler\",\"timeout\",\"methodOverride\",\"vhost\",\"csrf\",\"directory\",\"limit\",\"multipart\",\"staticCache\"]"
            }
        },
        "description": "Replace removed middleware with an appropriate error message.",
        "name": "removedMiddlewares",
        "longname": "removedMiddlewares",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2159,
                2374
            ],
            "filename": "express.js",
            "lineno": 111,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001755",
                "name": "get",
                "type": "FunctionExpression"
            }
        },
        "undocumented": true,
        "name": "get",
        "longname": "get",
        "kind": "function",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2380,
                2398
            ],
            "filename": "express.js",
            "lineno": 114,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001766",
                "name": "configurable",
                "type": "Literal",
                "value": true
            }
        },
        "undocumented": true,
        "name": "configurable",
        "longname": "configurable",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "/**\n * Module dependencies.\n * @private\n */",
        "meta": {
            "range": [
                230,
                258
            ],
            "filename": "request.js",
            "lineno": 16,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001773",
                "name": "accepts",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "Module dependencies.",
        "access": "private",
        "name": "accepts",
        "longname": "accepts",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                264,
                302
            ],
            "filename": "request.js",
            "lineno": 17,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001779",
                "name": "deprecate",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "deprecate",
        "longname": "deprecate",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                308,
                334
            ],
            "filename": "request.js",
            "lineno": 18,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001787",
                "name": "isIP",
                "type": "MemberExpression",
                "value": ".isIP"
            }
        },
        "undocumented": true,
        "name": "isIP",
        "longname": "isIP",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                340,
                367
            ],
            "filename": "request.js",
            "lineno": 19,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001795",
                "name": "typeis",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "typeis",
        "longname": "typeis",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                373,
                395
            ],
            "filename": "request.js",
            "lineno": 20,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001801",
                "name": "http",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "http",
        "longname": "http",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                401,
                425
            ],
            "filename": "request.js",
            "lineno": 21,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001807",
                "name": "fresh",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "fresh",
        "longname": "fresh",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                431,
                467
            ],
            "filename": "request.js",
            "lineno": 22,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001813",
                "name": "parseRange",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "parseRange",
        "longname": "parseRange",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                473,
                500
            ],
            "filename": "request.js",
            "lineno": 23,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001819",
                "name": "parse",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "parse",
        "longname": "parse",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                506,
                539
            ],
            "filename": "request.js",
            "lineno": 24,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001825",
                "name": "proxyaddr",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "proxyaddr",
        "longname": "proxyaddr",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Request prototype.\n * @public\n */",
        "meta": {
            "range": [
                588,
                639
            ],
            "filename": "request.js",
            "lineno": 31,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001831",
                "name": "req",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "Request prototype.",
        "access": "public",
        "name": "req",
        "longname": "req",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Module exports.\n * @public\n */",
        "meta": {
            "range": [
                680,
                700
            ],
            "filename": "request.js",
            "lineno": 38,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001843",
                "name": "module.exports",
                "type": "Identifier",
                "value": "req",
                "paramnames": []
            }
        },
        "description": "Module exports.",
        "access": "public",
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * Return request header.\n *\n * The `Referrer` header field is special-cased,\n * both `Referrer` and `Referer` are interchangeable.\n *\n * Examples:\n *\n *     req.get('Content-Type');\n *     // => \"text/plain\"\n *\n *     req.get('content-type');\n *     // => \"text/plain\"\n *\n *     req.get('Something');\n *     // => undefined\n *\n * Aliased as `req.header()`.\n *\n * @param {String} name\n * @return {String}\n * @public\n */",
        "meta": {
            "range": [
                1127,
                1565
            ],
            "filename": "request.js",
            "lineno": 64,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001849",
                "name": "req.get",
                "type": "AssignmentExpression",
                "value": "req.header",
                "paramnames": []
            }
        },
        "description": "Return request header.\n\nThe `Referrer` header field is special-cased,\nboth `Referrer` and `Referer` are interchangeable.\n\nExamples:\n\n    req.get('Content-Type');\n    // => \"text/plain\"\n\n    req.get('content-type');\n    // => \"text/plain\"\n\n    req.get('Something');\n    // => undefined\n\nAliased as `req.header()`.",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "name": "name"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                }
            }
        ],
        "access": "public",
        "name": "get",
        "longname": "req.get",
        "kind": "member",
        "memberof": "req",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1137,
                1565
            ],
            "filename": "request.js",
            "lineno": 65,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001853",
                "name": "req.header",
                "type": "FunctionExpression",
                "value": "header",
                "paramnames": [
                    "name"
                ]
            },
            "vars": {
                "lc": "req.header~lc"
            }
        },
        "undocumented": true,
        "name": "header",
        "longname": "req.header",
        "kind": "function",
        "memberof": "req",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1365,
                1388
            ],
            "filename": "request.js",
            "lineno": 74,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001880",
                "name": "lc",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "lc",
        "longname": "req.header~lc",
        "kind": "member",
        "memberof": "req.header",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n * To do: update docs.\n *\n * Check if the given `type(s)` is acceptable, returning\n * the best match when true, otherwise `undefined`, in which\n * case you should respond with 406 \"Not Acceptable\".\n *\n * The `type` value may be a single MIME type string\n * such as \"application/json\", an extension name\n * such as \"json\", a comma-delimited list such as \"json, html, text/plain\",\n * an argument list such as `\"json\", \"html\", \"text/plain\"`,\n * or an array `[\"json\", \"html\", \"text/plain\"]`. When a list\n * or array is given, the _best_ match, if any is returned.\n *\n * Examples:\n *\n *     // Accept: text/html\n *     req.accepts('html');\n *     // => \"html\"\n *\n *     // Accept: text/*, application/json\n *     req.accepts('html');\n *     // => \"html\"\n *     req.accepts('text/html');\n *     // => \"text/html\"\n *     req.accepts('json, text');\n *     // => \"json\"\n *     req.accepts('application/json');\n *     // => \"application/json\"\n *\n *     // Accept: text/*, application/json\n *     req.accepts('image/png');\n *     req.accepts('png');\n *     // => undefined\n *\n *     // Accept: text/*;q=.5, application/json\n *     req.accepts(['html', 'json']);\n *     req.accepts('html', 'json');\n *     req.accepts('html, json');\n *     // => \"json\"\n *\n * @param {String|Array} type(s)\n * @return {String|Array|Boolean}\n * @public\n */",
        "meta": {
            "range": [
                2899,
                3004
            ],
            "filename": "request.js",
            "lineno": 132,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001912",
                "name": "req.accepts",
                "type": "FunctionExpression",
                "paramnames": []
            },
            "vars": {
                "accept": "req.accepts~accept"
            }
        },
        "description": "To do: update docs.\n\nCheck if the given `type(s)` is acceptable, returning\nthe best match when true, otherwise `undefined`, in which\ncase you should respond with 406 \"Not Acceptable\".\n\nThe `type` value may be a single MIME type string\nsuch as \"application/json\", an extension name\nsuch as \"json\", a comma-delimited list such as \"json, html, text/plain\",\nan argument list such as `\"json\", \"html\", \"text/plain\"`,\nor an array `[\"json\", \"html\", \"text/plain\"]`. When a list\nor array is given, the _best_ match, if any is returned.\n\nExamples:\n\n    // Accept: text/html\n    req.accepts('html');\n    // => \"html\"\n\n    // Accept: text/*, application/json\n    req.accepts('html');\n    // => \"html\"\n    req.accepts('text/html');\n    // => \"text/html\"\n    req.accepts('json, text');\n    // => \"json\"\n    req.accepts('application/json');\n    // => \"application/json\"\n\n    // Accept: text/*, application/json\n    req.accepts('image/png');\n    req.accepts('png');\n    // => undefined\n\n    // Accept: text/*;q=.5, application/json\n    req.accepts(['html', 'json']);\n    req.accepts('html', 'json');\n    req.accepts('html, json');\n    // => \"json\"",
        "params": [
            {
                "type": {
                    "names": [
                        "String",
                        "Array"
                    ]
                },
                "name": "type(s)"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "String",
                        "Array",
                        "Boolean"
                    ]
                }
            }
        ],
        "access": "public",
        "name": "accepts",
        "longname": "req.accepts",
        "kind": "function",
        "memberof": "req",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2931,
                2953
            ],
            "filename": "request.js",
            "lineno": 133,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001919",
                "name": "accept",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "accept",
        "longname": "req.accepts~accept",
        "kind": "member",
        "memberof": "req.accepts",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n * Check if the given `encoding`s are accepted.\n *\n * @param {String} ...encoding\n * @return {String|Array}\n * @public\n */",
        "meta": {
            "range": [
                3135,
                3253
            ],
            "filename": "request.js",
            "lineno": 145,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001934",
                "name": "req.acceptsEncodings",
                "type": "FunctionExpression",
                "paramnames": []
            },
            "vars": {
                "accept": "req.acceptsEncodings~accept"
            }
        },
        "description": "Check if the given `encoding`s are accepted.",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "name": "...encoding"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "String",
                        "Array"
                    ]
                }
            }
        ],
        "access": "public",
        "name": "acceptsEncodings",
        "longname": "req.acceptsEncodings",
        "kind": "function",
        "memberof": "req",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3176,
                3198
            ],
            "filename": "request.js",
            "lineno": 146,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001941",
                "name": "accept",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "accept",
        "longname": "req.acceptsEncodings~accept",
        "kind": "member",
        "memberof": "req.acceptsEncodings",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3256,
                3373
            ],
            "filename": "request.js",
            "lineno": 150,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001956",
                "name": "req.acceptsEncoding",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "acceptsEncoding",
        "longname": "req.acceptsEncoding",
        "kind": "member",
        "memberof": "req",
        "scope": "static"
    },
    {
        "comment": "/**\n * Check if the given `charset`s are acceptable,\n * otherwise you should respond with 406 \"Not Acceptable\".\n *\n * @param {String} ...charset\n * @return {String|Array}\n * @public\n */",
        "meta": {
            "range": [
                3563,
                3679
            ],
            "filename": "request.js",
            "lineno": 162,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001969",
                "name": "req.acceptsCharsets",
                "type": "FunctionExpression",
                "paramnames": []
            },
            "vars": {
                "accept": "req.acceptsCharsets~accept"
            }
        },
        "description": "Check if the given `charset`s are acceptable,\notherwise you should respond with 406 \"Not Acceptable\".",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "name": "...charset"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "String",
                        "Array"
                    ]
                }
            }
        ],
        "access": "public",
        "name": "acceptsCharsets",
        "longname": "req.acceptsCharsets",
        "kind": "function",
        "memberof": "req",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3603,
                3625
            ],
            "filename": "request.js",
            "lineno": 163,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001976",
                "name": "accept",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "accept",
        "longname": "req.acceptsCharsets~accept",
        "kind": "member",
        "memberof": "req.acceptsCharsets",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3682,
                3795
            ],
            "filename": "request.js",
            "lineno": 167,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100001991",
                "name": "req.acceptsCharset",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "acceptsCharset",
        "longname": "req.acceptsCharset",
        "kind": "member",
        "memberof": "req",
        "scope": "static"
    },
    {
        "comment": "/**\n * Check if the given `lang`s are acceptable,\n * otherwise you should respond with 406 \"Not Acceptable\".\n *\n * @param {String} ...lang\n * @return {String|Array}\n * @public\n */",
        "meta": {
            "range": [
                3979,
                4097
            ],
            "filename": "request.js",
            "lineno": 179,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002004",
                "name": "req.acceptsLanguages",
                "type": "FunctionExpression",
                "paramnames": []
            },
            "vars": {
                "accept": "req.acceptsLanguages~accept"
            }
        },
        "description": "Check if the given `lang`s are acceptable,\notherwise you should respond with 406 \"Not Acceptable\".",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "name": "...lang"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "String",
                        "Array"
                    ]
                }
            }
        ],
        "access": "public",
        "name": "acceptsLanguages",
        "longname": "req.acceptsLanguages",
        "kind": "function",
        "memberof": "req",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4020,
                4042
            ],
            "filename": "request.js",
            "lineno": 180,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002011",
                "name": "accept",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "accept",
        "longname": "req.acceptsLanguages~accept",
        "kind": "member",
        "memberof": "req.acceptsLanguages",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4100,
                4217
            ],
            "filename": "request.js",
            "lineno": 184,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002026",
                "name": "req.acceptsLanguage",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "acceptsLanguage",
        "longname": "req.acceptsLanguage",
        "kind": "member",
        "memberof": "req",
        "scope": "static"
    },
    {
        "comment": "/**\n * Parse Range header field, capping to the given `size`.\n *\n * Unspecified ranges such as \"0-\" require knowledge of your resource length. In\n * the case of a byte range this is of course the total number of bytes. If the\n * Range header field is not given `undefined` is returned, `-1` when unsatisfiable,\n * and `-2` when syntactically invalid.\n *\n * When ranges are returned, the array has a \"type\" property which is the type of\n * range that is required (most commonly, \"bytes\"). Each array element is an object\n * with a \"start\" and \"end\" property for the portion of the range.\n *\n * The \"combine\" option can be set to `true` and overlapping & adjacent ranges\n * will be combined into a single range.\n *\n * NOTE: remember that ranges are inclusive, so for example \"Range: users=0-3\"\n * should respond with 4 users when available, not 3.\n *\n * @param {number} size\n * @param {object} [options]\n * @param {boolean} [options.combine=false]\n * @return {number|array}\n * @public\n */",
        "meta": {
            "range": [
                5208,
                5351
            ],
            "filename": "request.js",
            "lineno": 212,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002039",
                "name": "req.range",
                "type": "FunctionExpression",
                "value": "range",
                "paramnames": [
                    "size",
                    "options"
                ]
            },
            "vars": {
                "range": "req.range~range"
            }
        },
        "description": "Parse Range header field, capping to the given `size`.\n\nUnspecified ranges such as \"0-\" require knowledge of your resource length. In\nthe case of a byte range this is of course the total number of bytes. If the\nRange header field is not given `undefined` is returned, `-1` when unsatisfiable,\nand `-2` when syntactically invalid.\n\nWhen ranges are returned, the array has a \"type\" property which is the type of\nrange that is required (most commonly, \"bytes\"). Each array element is an object\nwith a \"start\" and \"end\" property for the portion of the range.\n\nThe \"combine\" option can be set to `true` and overlapping & adjacent ranges\nwill be combined into a single range.\n\nNOTE: remember that ranges are inclusive, so for example \"Range: users=0-3\"\nshould respond with 4 users when available, not 3.",
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "name": "size"
            },
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "optional": true,
                "name": "options"
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "optional": true,
                "defaultvalue": false,
                "name": "options.combine"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "number",
                        "array"
                    ]
                }
            }
        ],
        "access": "public",
        "name": "range",
        "longname": "req.range",
        "kind": "function",
        "memberof": "req",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5258,
                5283
            ],
            "filename": "request.js",
            "lineno": 213,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002049",
                "name": "range",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "range",
        "longname": "req.range~range",
        "kind": "member",
        "memberof": "req.range",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n * Return the value of param `name` when present or `defaultValue`.\n *\n *  - Checks route placeholders, ex: _/user/:id_\n *  - Checks body params, ex: id=12, {\"id\":12}\n *  - Checks query string params, ex: ?id=12\n *\n * To utilize request bodies, `req.body`\n * should be an object. This can be done by using\n * the `bodyParser()` middleware.\n *\n * @param {String} name\n * @param {Mixed} [defaultValue]\n * @return {String}\n * @public\n */",
        "meta": {
            "range": [
                5794,
                6298
            ],
            "filename": "request.js",
            "lineno": 235,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002067",
                "name": "req.param",
                "type": "FunctionExpression",
                "value": "param",
                "paramnames": [
                    "name",
                    "defaultValue"
                ]
            },
            "vars": {
                "params": "req.param~params",
                "body": "req.param~body",
                "query": "req.param~query",
                "args": "req.param~args"
            }
        },
        "description": "Return the value of param `name` when present or `defaultValue`.\n\n - Checks route placeholders, ex: _/user/:id_\n - Checks body params, ex: id=12, {\"id\":12}\n - Checks query string params, ex: ?id=12\n\nTo utilize request bodies, `req.body`\nshould be an object. This can be done by using\nthe `bodyParser()` middleware.",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "name": "name"
            },
            {
                "type": {
                    "names": [
                        "Mixed"
                    ]
                },
                "optional": true,
                "name": "defaultValue"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                }
            }
        ],
        "access": "public",
        "name": "param",
        "longname": "req.param",
        "kind": "function",
        "memberof": "req",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5849,
                5875
            ],
            "filename": "request.js",
            "lineno": 236,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002077",
                "name": "params",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "params",
        "longname": "req.param~params",
        "kind": "member",
        "memberof": "req.param",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5883,
                5905
            ],
            "filename": "request.js",
            "lineno": 237,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002085",
                "name": "body",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "body",
        "longname": "req.param~body",
        "kind": "member",
        "memberof": "req.param",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5913,
                5937
            ],
            "filename": "request.js",
            "lineno": 238,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002093",
                "name": "query",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "query",
        "longname": "req.param~query",
        "kind": "member",
        "memberof": "req.param",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5946,
                6010
            ],
            "filename": "request.js",
            "lineno": 240,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002101",
                "name": "args",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "args",
        "longname": "req.param~args",
        "kind": "member",
        "memberof": "req.param",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n * Check if the incoming request contains the \"Content-Type\"\n * header field, and it contains the given mime `type`.\n *\n * Examples:\n *\n *      // With Content-Type: text/html; charset=utf-8\n *      req.is('html');\n *      req.is('text/html');\n *      req.is('text/*');\n *      // => true\n *\n *      // When Content-Type is application/json\n *      req.is('json');\n *      req.is('application/json');\n *      req.is('application/*');\n *      // => true\n *\n *      req.is('html');\n *      // => false\n *\n * @param {String|Array} types...\n * @return {String|false|null}\n * @public\n */",
        "meta": {
            "range": [
                6889,
                7154
            ],
            "filename": "request.js",
            "lineno": 278,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002158",
                "name": "req.is",
                "type": "FunctionExpression",
                "value": "is",
                "paramnames": [
                    "types"
                ]
            },
            "vars": {
                "arr": "req.is~arr",
                "i": "req.is~i",
                "arr[undefined]": "req.is~arr.undefined]"
            }
        },
        "description": "Check if the incoming request contains the \"Content-Type\"\nheader field, and it contains the given mime `type`.\n\nExamples:\n\n     // With Content-Type: text/html; charset=utf-8\n     req.is('html');\n     req.is('text/html');\n     req.is('text/*');\n     // => true\n\n     // When Content-Type is application/json\n     req.is('json');\n     req.is('application/json');\n     req.is('application/*');\n     // => true\n\n     req.is('html');\n     // => false",
        "params": [
            {
                "type": {
                    "names": [
                        "String",
                        "Array"
                    ]
                },
                "name": "types..."
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "String",
                        "false",
                        "null"
                    ]
                }
            }
        ],
        "access": "public",
        "name": "is",
        "longname": "req.is",
        "kind": "function",
        "memberof": "req",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6925,
                6936
            ],
            "filename": "request.js",
            "lineno": 279,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002167",
                "name": "arr",
                "type": "Identifier",
                "value": "types"
            }
        },
        "undocumented": true,
        "name": "arr",
        "longname": "req.is~arr",
        "kind": "member",
        "memberof": "req.is",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7007,
                7040
            ],
            "filename": "request.js",
            "lineno": 283,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002179",
                "name": "arr",
                "type": "NewExpression",
                "funcscope": "req.is",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "arr",
        "longname": "req.is~arr",
        "kind": "member",
        "memberof": "req.is",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7055,
                7060
            ],
            "filename": "request.js",
            "lineno": 284,
            "columnno": 13,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002188",
                "name": "i",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "i",
        "longname": "req.is~i",
        "kind": "member",
        "memberof": "req.is",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7091,
                7112
            ],
            "filename": "request.js",
            "lineno": 285,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002200",
                "name": "arr[undefined]",
                "type": "MemberExpression",
                "funcscope": "req.is",
                "value": "arguments[undefined]",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "req.is~arr.undefined]",
        "kind": "member",
        "memberof": "req.is~arr",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7573,
                7633
            ],
            "filename": "request.js",
            "lineno": 307,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002221",
                "name": "proto",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "proto",
        "longname": "<anonymous>~proto",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7641,
                7679
            ],
            "filename": "request.js",
            "lineno": 310,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002232",
                "name": "trust",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "trust",
        "longname": "<anonymous>~trust",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7863,
                7910
            ],
            "filename": "request.js",
            "lineno": 318,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002255",
                "name": "header",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "header",
        "longname": "<anonymous>~header",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7917,
                7944
            ],
            "filename": "request.js",
            "lineno": 319,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002265",
                "name": "index",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "index",
        "longname": "<anonymous>~index",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8437,
                8475
            ],
            "filename": "request.js",
            "lineno": 350,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002314",
                "name": "trust",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "trust",
        "longname": "<anonymous>~trust",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8883,
                8921
            ],
            "filename": "request.js",
            "lineno": 367,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002337",
                "name": "trust",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "trust",
        "longname": "<anonymous>~trust",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8929,
                8963
            ],
            "filename": "request.js",
            "lineno": 368,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002347",
                "name": "addrs",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "addrs",
        "longname": "<anonymous>~addrs",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9663,
                9687
            ],
            "filename": "request.js",
            "lineno": 393,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002374",
                "name": "hostname",
                "type": "MemberExpression",
                "value": "this.hostname"
            }
        },
        "undocumented": true,
        "name": "hostname",
        "longname": "<anonymous>~hostname",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9725,
                9766
            ],
            "filename": "request.js",
            "lineno": 397,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002385",
                "name": "offset",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "offset",
        "longname": "<anonymous>~offset",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9774,
                9855
            ],
            "filename": "request.js",
            "lineno": 398,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002395",
                "name": "subdomains",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "subdomains",
        "longname": "<anonymous>~subdomains",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10341,
                10379
            ],
            "filename": "request.js",
            "lineno": 428,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002441",
                "name": "trust",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "trust",
        "longname": "<anonymous>~trust",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10387,
                10422
            ],
            "filename": "request.js",
            "lineno": 429,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002451",
                "name": "host",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "host",
        "longname": "<anonymous>~host",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10488,
                10511
            ],
            "filename": "request.js",
            "lineno": 432,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002473",
                "name": "host",
                "type": "CallExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "host",
        "longname": "<anonymous>~host",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10663,
                10718
            ],
            "filename": "request.js",
            "lineno": 436,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002491",
                "name": "host",
                "type": "CallExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "host",
        "longname": "<anonymous>~host",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10778,
                10838
            ],
            "filename": "request.js",
            "lineno": 442,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002511",
                "name": "offset",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "offset",
        "longname": "<anonymous>~offset",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10846,
                10879
            ],
            "filename": "request.js",
            "lineno": 445,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002528",
                "name": "index",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "index",
        "longname": "<anonymous>~index",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11313,
                11333
            ],
            "filename": "request.js",
            "lineno": 468,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002574",
                "name": "method",
                "type": "MemberExpression",
                "value": "this.method"
            }
        },
        "undocumented": true,
        "name": "method",
        "longname": "<anonymous>~method",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11341,
                11355
            ],
            "filename": "request.js",
            "lineno": 469,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002580",
                "name": "res",
                "type": "MemberExpression",
                "value": "this.res"
            }
        },
        "undocumented": true,
        "name": "res",
        "longname": "<anonymous>~res",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11362,
                11385
            ],
            "filename": "request.js",
            "lineno": 470,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002586",
                "name": "status",
                "type": "MemberExpression",
                "value": "res.statusCode"
            }
        },
        "undocumented": true,
        "name": "status",
        "longname": "<anonymous>~status",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11634,
                11657
            ],
            "filename": "request.js",
            "lineno": 478,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002621",
                "name": "etag",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "etag",
        "longname": "etag",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11665,
                11706
            ],
            "filename": "request.js",
            "lineno": 479,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002627",
                "name": "\"last-modified\"",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "\"last-modified\"",
        "longname": "\"last-modified\"",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12106,
                12146
            ],
            "filename": "request.js",
            "lineno": 507,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002657",
                "name": "val",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "val",
        "longname": "<anonymous>~val",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n * Helper function for creating a getter on an object.\n *\n * @param {Object} obj\n * @param {String} name\n * @param {Function} getter\n * @private\n */",
        "meta": {
            "range": [
                12355,
                12504
            ],
            "filename": "request.js",
            "lineno": 519,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002673",
                "name": "defineGetter",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "obj",
                    "name",
                    "getter"
                ]
            }
        },
        "description": "Helper function for creating a getter on an object.",
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "name": "obj"
            },
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "name": "name"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "name": "getter"
            }
        ],
        "access": "private",
        "name": "defineGetter",
        "longname": "defineGetter",
        "kind": "function",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12439,
                12457
            ],
            "filename": "request.js",
            "lineno": 521,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002687",
                "name": "configurable",
                "type": "Literal",
                "value": true
            }
        },
        "undocumented": true,
        "name": "configurable",
        "longname": "configurable",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12463,
                12479
            ],
            "filename": "request.js",
            "lineno": 522,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002689",
                "name": "enumerable",
                "type": "Literal",
                "value": true
            }
        },
        "undocumented": true,
        "name": "enumerable",
        "longname": "enumerable",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12485,
                12496
            ],
            "filename": "request.js",
            "lineno": 523,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002691",
                "name": "get",
                "type": "Identifier",
                "value": "getter"
            }
        },
        "undocumented": true,
        "name": "get",
        "longname": "get",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "/**\n * Module dependencies.\n * @private\n */",
        "meta": {
            "range": [
                194,
                232
            ],
            "filename": "response.js",
            "lineno": 15,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002698",
                "name": "Buffer",
                "type": "MemberExpression",
                "value": ".Buffer"
            }
        },
        "description": "Module dependencies.",
        "access": "private",
        "name": "Buffer",
        "longname": "Buffer",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                237,
                288
            ],
            "filename": "response.js",
            "lineno": 16,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002706",
                "name": "contentDisposition",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "contentDisposition",
        "longname": "contentDisposition",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                294,
                330
            ],
            "filename": "response.js",
            "lineno": 17,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002712",
                "name": "createError",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "createError",
        "longname": "createError",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                335,
                373
            ],
            "filename": "response.js",
            "lineno": 18,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002718",
                "name": "deprecate",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "deprecate",
        "longname": "deprecate",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                379,
                411
            ],
            "filename": "response.js",
            "lineno": 19,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002726",
                "name": "encodeUrl",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "encodeUrl",
        "longname": "encodeUrl",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                417,
                452
            ],
            "filename": "response.js",
            "lineno": 20,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002732",
                "name": "escapeHtml",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "escapeHtml",
        "longname": "escapeHtml",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                458,
                480
            ],
            "filename": "response.js",
            "lineno": 21,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002738",
                "name": "http",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "http",
        "longname": "http",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                486,
                528
            ],
            "filename": "response.js",
            "lineno": 22,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002744",
                "name": "isAbsolute",
                "type": "MemberExpression",
                "value": ".isAbsolute"
            }
        },
        "undocumented": true,
        "name": "isAbsolute",
        "longname": "isAbsolute",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                534,
                569
            ],
            "filename": "response.js",
            "lineno": 23,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002752",
                "name": "onFinished",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "onFinished",
        "longname": "onFinished",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                575,
                597
            ],
            "filename": "response.js",
            "lineno": 24,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002758",
                "name": "path",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "path",
        "longname": "path",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                603,
                633
            ],
            "filename": "response.js",
            "lineno": 25,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002764",
                "name": "statuses",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "statuses",
        "longname": "statuses",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                638,
                668
            ],
            "filename": "response.js",
            "lineno": 26,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002770",
                "name": "merge",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "merge",
        "longname": "merge",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                674,
                713
            ],
            "filename": "response.js",
            "lineno": 27,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002776",
                "name": "sign",
                "type": "MemberExpression",
                "value": ".sign"
            }
        },
        "undocumented": true,
        "name": "sign",
        "longname": "sign",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                719,
                767
            ],
            "filename": "response.js",
            "lineno": 28,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002784",
                "name": "normalizeType",
                "type": "MemberExpression",
                "value": ".normalizeType"
            }
        },
        "undocumented": true,
        "name": "normalizeType",
        "longname": "normalizeType",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                773,
                823
            ],
            "filename": "response.js",
            "lineno": 29,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002792",
                "name": "normalizeTypes",
                "type": "MemberExpression",
                "value": ".normalizeTypes"
            }
        },
        "undocumented": true,
        "name": "normalizeTypes",
        "longname": "normalizeTypes",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                829,
                871
            ],
            "filename": "response.js",
            "lineno": 30,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002800",
                "name": "setCharset",
                "type": "MemberExpression",
                "value": ".setCharset"
            }
        },
        "undocumented": true,
        "name": "setCharset",
        "longname": "setCharset",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                877,
                903
            ],
            "filename": "response.js",
            "lineno": 31,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002808",
                "name": "cookie",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "cookie",
        "longname": "cookie",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                909,
                931
            ],
            "filename": "response.js",
            "lineno": 32,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002814",
                "name": "send",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "send",
        "longname": "send",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                937,
                959
            ],
            "filename": "response.js",
            "lineno": 33,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002820",
                "name": "extname",
                "type": "MemberExpression",
                "value": "path.extname"
            }
        },
        "undocumented": true,
        "name": "extname",
        "longname": "extname",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                965,
                981
            ],
            "filename": "response.js",
            "lineno": 34,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002826",
                "name": "mime",
                "type": "MemberExpression",
                "value": "send.mime"
            }
        },
        "undocumented": true,
        "name": "mime",
        "longname": "mime",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                987,
                1009
            ],
            "filename": "response.js",
            "lineno": 35,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002832",
                "name": "resolve",
                "type": "MemberExpression",
                "value": "path.resolve"
            }
        },
        "undocumented": true,
        "name": "resolve",
        "longname": "resolve",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1015,
                1037
            ],
            "filename": "response.js",
            "lineno": 36,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002838",
                "name": "vary",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "vary",
        "longname": "vary",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Response prototype.\n * @public\n */",
        "meta": {
            "range": [
                1087,
                1137
            ],
            "filename": "response.js",
            "lineno": 43,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002844",
                "name": "res",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "Response prototype.",
        "access": "public",
        "name": "res",
        "longname": "res",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Module exports.\n * @public\n */",
        "meta": {
            "range": [
                1178,
                1198
            ],
            "filename": "response.js",
            "lineno": 50,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002856",
                "name": "module.exports",
                "type": "Identifier",
                "value": "res",
                "paramnames": []
            }
        },
        "description": "Module exports.",
        "access": "public",
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * Module variables.\n * @private\n */",
        "meta": {
            "range": [
                1246,
                1279
            ],
            "filename": "response.js",
            "lineno": 57,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002862",
                "name": "charsetRegExp",
                "type": "Literal",
                "value": "<RegExp /;\\s*charset\\s*=/>"
            }
        },
        "description": "Module variables.",
        "access": "private",
        "name": "charsetRegExp",
        "longname": "charsetRegExp",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Set status `code`.\n *\n * @param {Number} code\n * @return {ServerResponse}\n * @public\n */",
        "meta": {
            "range": [
                1379,
                1663
            ],
            "filename": "response.js",
            "lineno": 67,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002866",
                "name": "res.status",
                "type": "FunctionExpression",
                "value": "status",
                "paramnames": [
                    "code"
                ]
            },
            "vars": {
                "this.statusCode": "res.status#statusCode"
            }
        },
        "description": "Set status `code`.",
        "params": [
            {
                "type": {
                    "names": [
                        "Number"
                    ]
                },
                "name": "code"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ServerResponse"
                    ]
                }
            }
        ],
        "access": "public",
        "name": "status",
        "longname": "res.status",
        "kind": "function",
        "memberof": "res",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1623,
                1645
            ],
            "filename": "response.js",
            "lineno": 71,
            "columnno": 2,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002917",
                "name": "this.statusCode",
                "type": "Identifier",
                "value": "code",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "statusCode",
        "longname": "res.status#statusCode",
        "kind": "member",
        "memberof": "res.status",
        "scope": "instance"
    },
    {
        "comment": "/**\n * Set Link header field with the given `links`.\n *\n * Examples:\n *\n *    res.links({\n *      next: 'http://api.example.com/users?page=2',\n *      last: 'http://api.example.com/users?page=5'\n *    });\n *\n * @param {Object} links\n * @return {ServerResponse}\n * @public\n */",
        "meta": {
            "range": [
                1943,
                2179
            ],
            "filename": "response.js",
            "lineno": 90,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002925",
                "name": "res.links",
                "type": "FunctionExpression",
                "paramnames": [
                    "links"
                ]
            },
            "vars": {
                "link": "res.links~link",
                "": null
            }
        },
        "description": "Set Link header field with the given `links`.\n\nExamples:\n\n   res.links({\n     next: 'http://api.example.com/users?page=2',\n     last: 'http://api.example.com/users?page=5'\n   });",
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "name": "links"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ServerResponse"
                    ]
                }
            }
        ],
        "access": "public",
        "name": "links",
        "longname": "res.links",
        "kind": "function",
        "memberof": "res",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1978,
                2007
            ],
            "filename": "response.js",
            "lineno": 91,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002933",
                "name": "link",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "link",
        "longname": "res.links~link",
        "kind": "member",
        "memberof": "res.links",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2021,
                2033
            ],
            "filename": "response.js",
            "lineno": 92,
            "columnno": 12,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002945",
                "name": "link",
                "type": "Literal",
                "funcscope": "res.links",
                "value": ", ",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "link",
        "longname": "res.links~link",
        "kind": "member",
        "memberof": "res.links",
        "scope": "inner"
    },
    {
        "comment": "/**\n * Send a response.\n *\n * Examples:\n *\n *     res.send(Buffer.from('wahoo'));\n *     res.send({ some: 'json' });\n *     res.send('<p>some html</p>');\n *\n * @param {string|number|boolean|object|Buffer} body\n * @public\n */",
        "meta": {
            "range": [
                2408,
                5591
            ],
            "filename": "response.js",
            "lineno": 111,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002984",
                "name": "res.send",
                "type": "FunctionExpression",
                "value": "send",
                "paramnames": [
                    "body"
                ]
            },
            "vars": {
                "chunk": "res.send~chunk",
                "encoding": "res.send~encoding",
                "req": "res.send~req",
                "type": "res.send~type",
                "app": "res.send~app",
                "this.statusCode": "res.send#statusCode",
                "etagFn": "res.send~etagFn",
                "generateETag": "res.send~generateETag",
                "len": "res.send~len",
                "etag": "res.send~etag"
            }
        },
        "description": "Send a response.\n\nExamples:\n\n    res.send(Buffer.from('wahoo'));\n    res.send({ some: 'json' });\n    res.send('<p>some html</p>');",
        "params": [
            {
                "type": {
                    "names": [
                        "string",
                        "number",
                        "boolean",
                        "object",
                        "Buffer"
                    ]
                },
                "name": "body"
            }
        ],
        "access": "public",
        "name": "send",
        "longname": "res.send",
        "kind": "function",
        "memberof": "res",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2447,
                2459
            ],
            "filename": "response.js",
            "lineno": 112,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002993",
                "name": "chunk",
                "type": "Identifier",
                "value": "body"
            }
        },
        "undocumented": true,
        "name": "chunk",
        "longname": "res.send~chunk",
        "kind": "member",
        "memberof": "res.send",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2467,
                2475
            ],
            "filename": "response.js",
            "lineno": 113,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100002997",
                "name": "encoding"
            }
        },
        "undocumented": true,
        "name": "encoding",
        "longname": "res.send~encoding",
        "kind": "member",
        "memberof": "res.send",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2483,
                2497
            ],
            "filename": "response.js",
            "lineno": 114,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003000",
                "name": "req",
                "type": "MemberExpression",
                "value": "this.req"
            }
        },
        "undocumented": true,
        "name": "req",
        "longname": "res.send~req",
        "kind": "member",
        "memberof": "res.send",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2505,
                2509
            ],
            "filename": "response.js",
            "lineno": 115,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003006",
                "name": "type"
            }
        },
        "undocumented": true,
        "name": "type",
        "longname": "res.send~type",
        "kind": "member",
        "memberof": "res.send",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2532,
                2546
            ],
            "filename": "response.js",
            "lineno": 118,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003009",
                "name": "app",
                "type": "MemberExpression",
                "value": "this.app"
            }
        },
        "undocumented": true,
        "name": "app",
        "longname": "res.send~app",
        "kind": "member",
        "memberof": "res.send",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2825,
                2855
            ],
            "filename": "response.js",
            "lineno": 125,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003041",
                "name": "this.statusCode",
                "type": "MemberExpression",
                "value": "arguments[1]",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "statusCode",
        "longname": "res.send#statusCode",
        "kind": "member",
        "memberof": "res.send",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2962,
                2992
            ],
            "filename": "response.js",
            "lineno": 128,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003054",
                "name": "this.statusCode",
                "type": "MemberExpression",
                "value": "arguments[0]",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "statusCode",
        "longname": "res.send#statusCode",
        "kind": "member",
        "memberof": "res.send",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3000,
                3020
            ],
            "filename": "response.js",
            "lineno": 129,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003062",
                "name": "chunk",
                "type": "MemberExpression",
                "funcscope": "res.send",
                "value": "arguments[1]",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "chunk",
        "longname": "res.send~chunk",
        "kind": "member",
        "memberof": "res.send",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3361,
                3384
            ],
            "filename": "response.js",
            "lineno": 141,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003098",
                "name": "this.statusCode",
                "type": "Identifier",
                "value": "chunk",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "statusCode",
        "longname": "res.send#statusCode",
        "kind": "member",
        "memberof": "res.send",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3390,
                3421
            ],
            "filename": "response.js",
            "lineno": 142,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003104",
                "name": "chunk",
                "type": "MemberExpression",
                "funcscope": "res.send",
                "value": "statuses.message[undefined]",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "chunk",
        "longname": "res.send~chunk",
        "kind": "member",
        "memberof": "res.send",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3686,
                3696
            ],
            "filename": "response.js",
            "lineno": 156,
            "columnno": 8,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003143",
                "name": "chunk",
                "type": "Literal",
                "funcscope": "res.send",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "chunk",
        "longname": "res.send~chunk",
        "kind": "member",
        "memberof": "res.send",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3961,
                3978
            ],
            "filename": "response.js",
            "lineno": 169,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003182",
                "name": "encoding",
                "type": "Literal",
                "funcscope": "res.send",
                "value": "utf8",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "encoding",
        "longname": "res.send~encoding",
        "kind": "member",
        "memberof": "res.send",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3984,
                4015
            ],
            "filename": "response.js",
            "lineno": 170,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003186",
                "name": "type",
                "type": "CallExpression",
                "funcscope": "res.send",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "type",
        "longname": "res.send~type",
        "kind": "member",
        "memberof": "res.send",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4209,
                4236
            ],
            "filename": "response.js",
            "lineno": 179,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003210",
                "name": "etagFn",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "etagFn",
        "longname": "res.send~etagFn",
        "kind": "member",
        "memberof": "res.send",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4243,
                4307
            ],
            "filename": "response.js",
            "lineno": 180,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003218",
                "name": "generateETag",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "generateETag",
        "longname": "res.send~generateETag",
        "kind": "member",
        "memberof": "res.send",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4344,
                4347
            ],
            "filename": "response.js",
            "lineno": 183,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003232",
                "name": "len"
            }
        },
        "undocumented": true,
        "name": "len",
        "longname": "res.send~len",
        "kind": "member",
        "memberof": "res.send",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4447,
                4465
            ],
            "filename": "response.js",
            "lineno": 187,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003247",
                "name": "len",
                "type": "MemberExpression",
                "funcscope": "res.send",
                "value": "chunk.length",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "len",
        "longname": "res.send~len",
        "kind": "member",
        "memberof": "res.send",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4585,
                4625
            ],
            "filename": "response.js",
            "lineno": 190,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003263",
                "name": "len",
                "type": "CallExpression",
                "funcscope": "res.send",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "len",
        "longname": "res.send~len",
        "kind": "member",
        "memberof": "res.send",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4692,
                4728
            ],
            "filename": "response.js",
            "lineno": 193,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003273",
                "name": "chunk",
                "type": "CallExpression",
                "funcscope": "res.send",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "chunk",
        "longname": "res.send~chunk",
        "kind": "member",
        "memberof": "res.send",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4735,
                4755
            ],
            "filename": "response.js",
            "lineno": 194,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003282",
                "name": "encoding",
                "type": "Identifier",
                "funcscope": "res.send",
                "value": "undefined",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "encoding",
        "longname": "res.send~encoding",
        "kind": "member",
        "memberof": "res.send",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4763,
                4781
            ],
            "filename": "response.js",
            "lineno": 195,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003286",
                "name": "len",
                "type": "MemberExpression",
                "funcscope": "res.send",
                "value": "chunk.length",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "len",
        "longname": "res.send~len",
        "kind": "member",
        "memberof": "res.send",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4856,
                4860
            ],
            "filename": "response.js",
            "lineno": 202,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003299",
                "name": "etag"
            }
        },
        "undocumented": true,
        "name": "etag",
        "longname": "res.send~etag",
        "kind": "member",
        "memberof": "res.send",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4914,
                4944
            ],
            "filename": "response.js",
            "lineno": 204,
            "columnno": 9,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003309",
                "name": "etag",
                "type": "CallExpression",
                "funcscope": "res.send",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "etag",
        "longname": "res.send~etag",
        "kind": "member",
        "memberof": "res.send",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5022,
                5043
            ],
            "filename": "response.js",
            "lineno": 210,
            "columnno": 17,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003328",
                "name": "this.statusCode",
                "type": "Literal",
                "value": 304,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "statusCode",
        "longname": "res.send#statusCode",
        "kind": "member",
        "memberof": "res.send",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5264,
                5274
            ],
            "filename": "response.js",
            "lineno": 217,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003365",
                "name": "chunk",
                "type": "Literal",
                "funcscope": "res.send",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "chunk",
        "longname": "res.send~chunk",
        "kind": "member",
        "memberof": "res.send",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5424,
                5434
            ],
            "filename": "response.js",
            "lineno": 224,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003389",
                "name": "chunk",
                "type": "Literal",
                "funcscope": "res.send",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "chunk",
        "longname": "res.send~chunk",
        "kind": "member",
        "memberof": "res.send",
        "scope": "inner"
    },
    {
        "comment": "/**\n * Send JSON response.\n *\n * Examples:\n *\n *     res.json(null);\n *     res.json({ user: 'tj' });\n *\n * @param {string|number|boolean|object} obj\n * @public\n */",
        "meta": {
            "range": [
                5760,
                6598
            ],
            "filename": "response.js",
            "lineno": 250,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003415",
                "name": "res.json",
                "type": "FunctionExpression",
                "value": "json",
                "paramnames": [
                    "obj"
                ]
            },
            "vars": {
                "val": "res.json~val",
                "this.statusCode": "res.json#statusCode",
                "app": "res.json~app",
                "escape": "res.json~escape",
                "replacer": "res.json~replacer",
                "spaces": "res.json~spaces",
                "body": "res.json~body"
            }
        },
        "description": "Send JSON response.\n\nExamples:\n\n    res.json(null);\n    res.json({ user: 'tj' });",
        "params": [
            {
                "type": {
                    "names": [
                        "string",
                        "number",
                        "boolean",
                        "object"
                    ]
                },
                "name": "obj"
            }
        ],
        "access": "public",
        "name": "json",
        "longname": "res.json",
        "kind": "function",
        "memberof": "res",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5798,
                5807
            ],
            "filename": "response.js",
            "lineno": 251,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003424",
                "name": "val",
                "type": "Identifier",
                "value": "obj"
            }
        },
        "undocumented": true,
        "name": "val",
        "longname": "res.json~val",
        "kind": "member",
        "memberof": "res.json",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6048,
                6078
            ],
            "filename": "response.js",
            "lineno": 258,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003447",
                "name": "this.statusCode",
                "type": "MemberExpression",
                "value": "arguments[1]",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "statusCode",
        "longname": "res.json#statusCode",
        "kind": "member",
        "memberof": "res.json",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6183,
                6213
            ],
            "filename": "response.js",
            "lineno": 261,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003460",
                "name": "this.statusCode",
                "type": "MemberExpression",
                "value": "arguments[0]",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "statusCode",
        "longname": "res.json#statusCode",
        "kind": "member",
        "memberof": "res.json",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6221,
                6239
            ],
            "filename": "response.js",
            "lineno": 262,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003468",
                "name": "val",
                "type": "MemberExpression",
                "funcscope": "res.json",
                "value": "arguments[1]",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "val",
        "longname": "res.json~val",
        "kind": "member",
        "memberof": "res.json",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6272,
                6286
            ],
            "filename": "response.js",
            "lineno": 267,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003474",
                "name": "app",
                "type": "MemberExpression",
                "value": "this.app"
            }
        },
        "undocumented": true,
        "name": "app",
        "longname": "res.json~app",
        "kind": "member",
        "memberof": "res.json",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6294,
                6325
            ],
            "filename": "response.js",
            "lineno": 268,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003480",
                "name": "escape",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "escape",
        "longname": "res.json~escape",
        "kind": "member",
        "memberof": "res.json",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6332,
                6367
            ],
            "filename": "response.js",
            "lineno": 269,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003488",
                "name": "replacer",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "replacer",
        "longname": "res.json~replacer",
        "kind": "member",
        "memberof": "res.json",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6375,
                6406
            ],
            "filename": "response.js",
            "lineno": 270,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003496",
                "name": "spaces",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "spaces",
        "longname": "res.json~spaces",
        "kind": "member",
        "memberof": "res.json",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6414,
                6461
            ],
            "filename": "response.js",
            "lineno": 271,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003504",
                "name": "body",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "body",
        "longname": "res.json~body",
        "kind": "member",
        "memberof": "res.json",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n * Send JSON response with JSONP callback support.\n *\n * Examples:\n *\n *     res.jsonp(null);\n *     res.jsonp({ user: 'tj' });\n *\n * @param {string|number|boolean|object} obj\n * @public\n */",
        "meta": {
            "range": [
                6797,
                8631
            ],
            "filename": "response.js",
            "lineno": 293,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003534",
                "name": "res.jsonp",
                "type": "FunctionExpression",
                "value": "jsonp",
                "paramnames": [
                    "obj"
                ]
            },
            "vars": {
                "val": "res.jsonp~val",
                "this.statusCode": "res.jsonp#statusCode",
                "app": "res.jsonp~app",
                "escape": "res.jsonp~escape",
                "replacer": "res.jsonp~replacer",
                "spaces": "res.jsonp~spaces",
                "body": "res.jsonp~body",
                "callback": "res.jsonp~callback"
            }
        },
        "description": "Send JSON response with JSONP callback support.\n\nExamples:\n\n    res.jsonp(null);\n    res.jsonp({ user: 'tj' });",
        "params": [
            {
                "type": {
                    "names": [
                        "string",
                        "number",
                        "boolean",
                        "object"
                    ]
                },
                "name": "obj"
            }
        ],
        "access": "public",
        "name": "jsonp",
        "longname": "res.jsonp",
        "kind": "function",
        "memberof": "res",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6837,
                6846
            ],
            "filename": "response.js",
            "lineno": 294,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003543",
                "name": "val",
                "type": "Identifier",
                "value": "obj"
            }
        },
        "undocumented": true,
        "name": "val",
        "longname": "res.jsonp~val",
        "kind": "member",
        "memberof": "res.jsonp",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7090,
                7120
            ],
            "filename": "response.js",
            "lineno": 301,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003566",
                "name": "this.statusCode",
                "type": "MemberExpression",
                "value": "arguments[1]",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "statusCode",
        "longname": "res.jsonp#statusCode",
        "kind": "member",
        "memberof": "res.jsonp",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7227,
                7257
            ],
            "filename": "response.js",
            "lineno": 304,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003579",
                "name": "this.statusCode",
                "type": "MemberExpression",
                "value": "arguments[0]",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "statusCode",
        "longname": "res.jsonp#statusCode",
        "kind": "member",
        "memberof": "res.jsonp",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7265,
                7283
            ],
            "filename": "response.js",
            "lineno": 305,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003587",
                "name": "val",
                "type": "MemberExpression",
                "funcscope": "res.jsonp",
                "value": "arguments[1]",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "val",
        "longname": "res.jsonp~val",
        "kind": "member",
        "memberof": "res.jsonp",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7316,
                7330
            ],
            "filename": "response.js",
            "lineno": 310,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003593",
                "name": "app",
                "type": "MemberExpression",
                "value": "this.app"
            }
        },
        "undocumented": true,
        "name": "app",
        "longname": "res.jsonp~app",
        "kind": "member",
        "memberof": "res.jsonp",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7338,
                7369
            ],
            "filename": "response.js",
            "lineno": 311,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003599",
                "name": "escape",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "escape",
        "longname": "res.jsonp~escape",
        "kind": "member",
        "memberof": "res.jsonp",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7376,
                7411
            ],
            "filename": "response.js",
            "lineno": 312,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003607",
                "name": "replacer",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "replacer",
        "longname": "res.jsonp~replacer",
        "kind": "member",
        "memberof": "res.jsonp",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7419,
                7450
            ],
            "filename": "response.js",
            "lineno": 313,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003615",
                "name": "spaces",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "spaces",
        "longname": "res.jsonp~spaces",
        "kind": "member",
        "memberof": "res.jsonp",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7458,
                7505
            ],
            "filename": "response.js",
            "lineno": 314,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003623",
                "name": "body",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "body",
        "longname": "res.jsonp~body",
        "kind": "member",
        "memberof": "res.jsonp",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7512,
                7569
            ],
            "filename": "response.js",
            "lineno": 315,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003632",
                "name": "callback",
                "type": "MemberExpression",
                "value": "this.req.query[undefined]"
            }
        },
        "undocumented": true,
        "name": "callback",
        "longname": "res.jsonp~callback",
        "kind": "member",
        "memberof": "res.jsonp",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7788,
                7810
            ],
            "filename": "response.js",
            "lineno": 325,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003675",
                "name": "callback",
                "type": "MemberExpression",
                "funcscope": "res.jsonp",
                "value": "callback[0]",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "callback",
        "longname": "res.jsonp~callback",
        "kind": "member",
        "memberof": "res.jsonp",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8029,
                8076
            ],
            "filename": "response.js",
            "lineno": 334,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003707",
                "name": "callback",
                "type": "CallExpression",
                "funcscope": "res.jsonp",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "callback",
        "longname": "res.jsonp~callback",
        "kind": "member",
        "memberof": "res.jsonp",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8139,
                8148
            ],
            "filename": "response.js",
            "lineno": 338,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003721",
                "name": "body",
                "type": "Literal",
                "funcscope": "res.jsonp",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "body",
        "longname": "res.jsonp~body",
        "kind": "member",
        "memberof": "res.jsonp",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8264,
                8353
            ],
            "filename": "response.js",
            "lineno": 341,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003731",
                "name": "body",
                "type": "CallExpression",
                "funcscope": "res.jsonp",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "body",
        "longname": "res.jsonp~body",
        "kind": "member",
        "memberof": "res.jsonp",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8508,
                8597
            ],
            "filename": "response.js",
            "lineno": 348,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003745",
                "name": "body",
                "type": "BinaryExpression",
                "funcscope": "res.jsonp",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "body",
        "longname": "res.jsonp~body",
        "kind": "member",
        "memberof": "res.jsonp",
        "scope": "inner"
    },
    {
        "comment": "/**\n * Send given HTTP status code.\n *\n * Sets the response status to `statusCode` and the body of the\n * response to the standard description from node's http.STATUS_CODES\n * or the statusCode number if no description.\n *\n * Examples:\n *\n *     res.sendStatus(200);\n *\n * @param {number} statusCode\n * @public\n */",
        "meta": {
            "range": [
                8950,
                9146
            ],
            "filename": "response.js",
            "lineno": 369,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003767",
                "name": "res.sendStatus",
                "type": "FunctionExpression",
                "value": "sendStatus",
                "paramnames": [
                    "statusCode"
                ]
            },
            "vars": {
                "body": "res.sendStatus~body",
                "this.statusCode": "res.sendStatus#statusCode"
            }
        },
        "description": "Send given HTTP status code.\n\nSets the response status to `statusCode` and the body of the\nresponse to the standard description from node's http.STATUS_CODES\nor the statusCode number if no description.\n\nExamples:\n\n    res.sendStatus(200);",
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "name": "statusCode"
            }
        ],
        "access": "public",
        "name": "sendStatus",
        "longname": "res.sendStatus",
        "kind": "function",
        "memberof": "res",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9007,
                9064
            ],
            "filename": "response.js",
            "lineno": 370,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003776",
                "name": "body",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "body",
        "longname": "res.sendStatus~body",
        "kind": "member",
        "memberof": "res.sendStatus",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9068,
                9096
            ],
            "filename": "response.js",
            "lineno": 372,
            "columnno": 2,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003788",
                "name": "this.statusCode",
                "type": "Identifier",
                "value": "statusCode",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "statusCode",
        "longname": "res.sendStatus#statusCode",
        "kind": "member",
        "memberof": "res.sendStatus",
        "scope": "instance"
    },
    {
        "comment": "/**\n * Transfer the file at the given `path`.\n *\n * Automatically sets the _Content-Type_ response header field.\n * The callback `callback(err)` is invoked when the transfer is complete\n * or when an error occurs. Be sure to check `res.headersSent`\n * if you wish to attempt responding, as the header and some data\n * may have already been transferred.\n *\n * Options:\n *\n *   - `maxAge`   defaulting to 0 (can be string converted by `ms`)\n *   - `root`     root directory for relative filenames\n *   - `headers`  object of headers to serve with file\n *   - `dotfiles` serve dotfiles, defaulting to false; can be `\"allow\"` to send them\n *\n * Other options are passed along to `send`.\n *\n * Examples:\n *\n *  The following example illustrates how `res.sendFile()` may\n *  be used as an alternative for the `static()` middleware for\n *  dynamic situations. The code backing `res.sendFile()` is actually\n *  the same code, so HTTP cache support etc is identical.\n *\n *     app.get('/user/:uid/photos/:file', function(req, res){\n *       var uid = req.params.uid\n *         , file = req.params.file;\n *\n *       req.user.mayViewFilesFrom(uid, function(yes){\n *         if (yes) {\n *           res.sendFile('/uploads/' + uid + '/' + file);\n *         } else {\n *           res.send(403, 'Sorry! you cant see that.');\n *         }\n *       });\n *     });\n *\n * @public\n */",
        "meta": {
            "range": [
                10515,
                11509
            ],
            "filename": "response.js",
            "lineno": 419,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003806",
                "name": "res.sendFile",
                "type": "FunctionExpression",
                "value": "sendFile",
                "paramnames": [
                    "path",
                    "options",
                    "callback"
                ]
            },
            "vars": {
                "done": "res.sendFile~done",
                "req": "res.sendFile~req",
                "res": "res.sendFile~res",
                "next": "res.sendFile~next",
                "opts": "res.sendFile~opts",
                "pathname": "res.sendFile~pathname",
                "file": "res.sendFile~file",
                "": null
            }
        },
        "description": "Transfer the file at the given `path`.\n\nAutomatically sets the _Content-Type_ response header field.\nThe callback `callback(err)` is invoked when the transfer is complete\nor when an error occurs. Be sure to check `res.headersSent`\nif you wish to attempt responding, as the header and some data\nmay have already been transferred.\n\nOptions:\n\n  - `maxAge`   defaulting to 0 (can be string converted by `ms`)\n  - `root`     root directory for relative filenames\n  - `headers`  object of headers to serve with file\n  - `dotfiles` serve dotfiles, defaulting to false; can be `\"allow\"` to send them\n\nOther options are passed along to `send`.\n\nExamples:\n\n The following example illustrates how `res.sendFile()` may\n be used as an alternative for the `static()` middleware for\n dynamic situations. The code backing `res.sendFile()` is actually\n the same code, so HTTP cache support etc is identical.\n\n    app.get('/user/:uid/photos/:file', function(req, res){\n      var uid = req.params.uid\n        , file = req.params.file;\n\n      req.user.mayViewFilesFrom(uid, function(yes){\n        if (yes) {\n          res.sendFile('/uploads/' + uid + '/' + file);\n        } else {\n          res.send(403, 'Sorry! you cant see that.');\n        }\n      });\n    });",
        "access": "public",
        "name": "sendFile",
        "longname": "res.sendFile",
        "kind": "function",
        "memberof": "res",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10581,
                10596
            ],
            "filename": "response.js",
            "lineno": 420,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003817",
                "name": "done",
                "type": "Identifier",
                "value": "callback"
            }
        },
        "undocumented": true,
        "name": "done",
        "longname": "res.sendFile~done",
        "kind": "member",
        "memberof": "res.sendFile",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10604,
                10618
            ],
            "filename": "response.js",
            "lineno": 421,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003821",
                "name": "req",
                "type": "MemberExpression",
                "value": "this.req"
            }
        },
        "undocumented": true,
        "name": "req",
        "longname": "res.sendFile~req",
        "kind": "member",
        "memberof": "res.sendFile",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10626,
                10636
            ],
            "filename": "response.js",
            "lineno": 422,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003827",
                "name": "res",
                "type": "ThisExpression",
                "value": "this"
            }
        },
        "undocumented": true,
        "name": "res",
        "longname": "res.sendFile~res",
        "kind": "member",
        "memberof": "res.sendFile",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10644,
                10659
            ],
            "filename": "response.js",
            "lineno": 423,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003831",
                "name": "next",
                "type": "MemberExpression",
                "value": "req.next"
            }
        },
        "undocumented": true,
        "name": "next",
        "longname": "res.sendFile~next",
        "kind": "member",
        "memberof": "res.sendFile",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10667,
                10687
            ],
            "filename": "response.js",
            "lineno": 424,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003837",
                "name": "opts",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "opts",
        "longname": "res.sendFile~opts",
        "kind": "member",
        "memberof": "res.sendFile",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10963,
                10977
            ],
            "filename": "response.js",
            "lineno": 436,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003867",
                "name": "done",
                "type": "Identifier",
                "funcscope": "res.sendFile",
                "value": "options",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "done",
        "longname": "res.sendFile~done",
        "kind": "member",
        "memberof": "res.sendFile",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10983,
                10992
            ],
            "filename": "response.js",
            "lineno": 437,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003871",
                "name": "opts",
                "type": "ObjectExpression",
                "funcscope": "res.sendFile",
                "value": "{}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "opts",
        "longname": "res.sendFile~opts",
        "kind": "member",
        "memberof": "res.sendFile",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11157,
                11183
            ],
            "filename": "response.js",
            "lineno": 445,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003890",
                "name": "pathname",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "pathname",
        "longname": "res.sendFile~pathname",
        "kind": "member",
        "memberof": "res.sendFile",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11191,
                11223
            ],
            "filename": "response.js",
            "lineno": 446,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003896",
                "name": "file",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "file",
        "longname": "res.sendFile~file",
        "kind": "member",
        "memberof": "res.sendFile",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n * Transfer the file at the given `path`.\n *\n * Automatically sets the _Content-Type_ response header field.\n * The callback `callback(err)` is invoked when the transfer is complete\n * or when an error occurs. Be sure to check `res.headersSent`\n * if you wish to attempt responding, as the header and some data\n * may have already been transferred.\n *\n * Options:\n *\n *   - `maxAge`   defaulting to 0 (can be string converted by `ms`)\n *   - `root`     root directory for relative filenames\n *   - `headers`  object of headers to serve with file\n *   - `dotfiles` serve dotfiles, defaulting to false; can be `\"allow\"` to send them\n *\n * Other options are passed along to `send`.\n *\n * Examples:\n *\n *  The following example illustrates how `res.sendfile()` may\n *  be used as an alternative for the `static()` middleware for\n *  dynamic situations. The code backing `res.sendfile()` is actually\n *  the same code, so HTTP cache support etc is identical.\n *\n *     app.get('/user/:uid/photos/:file', function(req, res){\n *       var uid = req.params.uid\n *         , file = req.params.file;\n *\n *       req.user.mayViewFilesFrom(uid, function(yes){\n *         if (yes) {\n *           res.sendfile('/uploads/' + uid + '/' + file);\n *         } else {\n *           res.send(403, 'Sorry! you cant see that.');\n *         }\n *       });\n *     });\n *\n * @public\n */",
        "meta": {
            "range": [
                12878,
                13504
            ],
            "filename": "response.js",
            "lineno": 501,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003949",
                "name": "res.sendfile",
                "type": "FunctionExpression",
                "paramnames": [
                    "path",
                    "options",
                    "callback"
                ]
            },
            "vars": {
                "done": "res.sendfile~done",
                "req": "res.sendfile~req",
                "res": "res.sendfile~res",
                "next": "res.sendfile~next",
                "opts": "res.sendfile~opts",
                "file": "res.sendfile~file",
                "": null
            }
        },
        "description": "Transfer the file at the given `path`.\n\nAutomatically sets the _Content-Type_ response header field.\nThe callback `callback(err)` is invoked when the transfer is complete\nor when an error occurs. Be sure to check `res.headersSent`\nif you wish to attempt responding, as the header and some data\nmay have already been transferred.\n\nOptions:\n\n  - `maxAge`   defaulting to 0 (can be string converted by `ms`)\n  - `root`     root directory for relative filenames\n  - `headers`  object of headers to serve with file\n  - `dotfiles` serve dotfiles, defaulting to false; can be `\"allow\"` to send them\n\nOther options are passed along to `send`.\n\nExamples:\n\n The following example illustrates how `res.sendfile()` may\n be used as an alternative for the `static()` middleware for\n dynamic situations. The code backing `res.sendfile()` is actually\n the same code, so HTTP cache support etc is identical.\n\n    app.get('/user/:uid/photos/:file', function(req, res){\n      var uid = req.params.uid\n        , file = req.params.file;\n\n      req.user.mayViewFilesFrom(uid, function(yes){\n        if (yes) {\n          res.sendfile('/uploads/' + uid + '/' + file);\n        } else {\n          res.send(403, 'Sorry! you cant see that.');\n        }\n      });\n    });",
        "access": "public",
        "name": "sendfile",
        "longname": "res.sendfile",
        "kind": "function",
        "memberof": "res",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12936,
                12951
            ],
            "filename": "response.js",
            "lineno": 502,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003959",
                "name": "done",
                "type": "Identifier",
                "value": "callback"
            }
        },
        "undocumented": true,
        "name": "done",
        "longname": "res.sendfile~done",
        "kind": "member",
        "memberof": "res.sendfile",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12959,
                12973
            ],
            "filename": "response.js",
            "lineno": 503,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003963",
                "name": "req",
                "type": "MemberExpression",
                "value": "this.req"
            }
        },
        "undocumented": true,
        "name": "req",
        "longname": "res.sendfile~req",
        "kind": "member",
        "memberof": "res.sendfile",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12981,
                12991
            ],
            "filename": "response.js",
            "lineno": 504,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003969",
                "name": "res",
                "type": "ThisExpression",
                "value": "this"
            }
        },
        "undocumented": true,
        "name": "res",
        "longname": "res.sendfile~res",
        "kind": "member",
        "memberof": "res.sendfile",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12999,
                13014
            ],
            "filename": "response.js",
            "lineno": 505,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003973",
                "name": "next",
                "type": "MemberExpression",
                "value": "req.next"
            }
        },
        "undocumented": true,
        "name": "next",
        "longname": "res.sendfile~next",
        "kind": "member",
        "memberof": "res.sendfile",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13022,
                13042
            ],
            "filename": "response.js",
            "lineno": 506,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003979",
                "name": "opts",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "opts",
        "longname": "res.sendfile~opts",
        "kind": "member",
        "memberof": "res.sendfile",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13124,
                13138
            ],
            "filename": "response.js",
            "lineno": 510,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003991",
                "name": "done",
                "type": "Identifier",
                "funcscope": "res.sendfile",
                "value": "options",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "done",
        "longname": "res.sendfile~done",
        "kind": "member",
        "memberof": "res.sendfile",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13144,
                13153
            ],
            "filename": "response.js",
            "lineno": 511,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003995",
                "name": "opts",
                "type": "ObjectExpression",
                "funcscope": "res.sendfile",
                "value": "{}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "opts",
        "longname": "res.sendfile~opts",
        "kind": "member",
        "memberof": "res.sendfile",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13190,
                13218
            ],
            "filename": "response.js",
            "lineno": 515,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100003999",
                "name": "file",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "file",
        "longname": "res.sendfile~file",
        "kind": "member",
        "memberof": "res.sendfile",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13507,
                13598
            ],
            "filename": "response.js",
            "lineno": 529,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004052",
                "name": "res.sendfile",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "sendfile",
        "longname": "res.sendfile",
        "kind": "member",
        "memberof": "res",
        "scope": "static"
    },
    {
        "comment": "/**\n * Transfer the file at the given `path` as an attachment.\n *\n * Optionally providing an alternate attachment `filename`,\n * and optional callback `callback(err)`. The callback is invoked\n * when the data transfer is complete, or when an error has\n * occurred. Be sure to check `res.headersSent` if you plan to respond.\n *\n * Optionally providing an `options` object to use with `res.sendFile()`.\n * This function will set the `Content-Disposition` header, overriding\n * any `Content-Disposition` header passed as header options in order\n * to set the attachment and filename.\n *\n * This method uses `res.sendFile()`.\n *\n * @public\n */",
        "meta": {
            "range": [
                14242,
                15493
            ],
            "filename": "response.js",
            "lineno": 550,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004065",
                "name": "res.download",
                "type": "FunctionExpression",
                "value": "download",
                "paramnames": [
                    "path",
                    "filename",
                    "options",
                    "callback"
                ]
            },
            "vars": {
                "done": "res.download~done",
                "name": "res.download~name",
                "opts": "res.download~opts",
                "headers": "res.download~headers",
                "keys": "res.download~keys",
                "i": "res.download~i",
                "key": "res.download~key",
                "headers[undefined]": "res.download~headers.undefined]",
                "opts.headers": "res.download~opts.headers",
                "fullPath": "res.download~fullPath"
            }
        },
        "description": "Transfer the file at the given `path` as an attachment.\n\nOptionally providing an alternate attachment `filename`,\nand optional callback `callback(err)`. The callback is invoked\nwhen the data transfer is complete, or when an error has\noccurred. Be sure to check `res.headersSent` if you plan to respond.\n\nOptionally providing an `options` object to use with `res.sendFile()`.\nThis function will set the `Content-Disposition` header, overriding\nany `Content-Disposition` header passed as header options in order\nto set the attachment and filename.\n\nThis method uses `res.sendFile()`.",
        "access": "public",
        "name": "download",
        "longname": "res.download",
        "kind": "function",
        "memberof": "res",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                14319,
                14334
            ],
            "filename": "response.js",
            "lineno": 551,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004077",
                "name": "done",
                "type": "Identifier",
                "value": "callback"
            }
        },
        "undocumented": true,
        "name": "done",
        "longname": "res.download~done",
        "kind": "member",
        "memberof": "res.download",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                14342,
                14357
            ],
            "filename": "response.js",
            "lineno": 552,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004081",
                "name": "name",
                "type": "Identifier",
                "value": "filename"
            }
        },
        "undocumented": true,
        "name": "name",
        "longname": "res.download~name",
        "kind": "member",
        "memberof": "res.download",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                14365,
                14387
            ],
            "filename": "response.js",
            "lineno": 553,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004085",
                "name": "opts",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "opts",
        "longname": "res.download~opts",
        "kind": "member",
        "memberof": "res.download",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                14478,
                14493
            ],
            "filename": "response.js",
            "lineno": 557,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004097",
                "name": "done",
                "type": "Identifier",
                "funcscope": "res.download",
                "value": "filename",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "done",
        "longname": "res.download~done",
        "kind": "member",
        "memberof": "res.download",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                14499,
                14510
            ],
            "filename": "response.js",
            "lineno": 558,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004101",
                "name": "name",
                "type": "Literal",
                "funcscope": "res.download",
                "value": null,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "name",
        "longname": "res.download~name",
        "kind": "member",
        "memberof": "res.download",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                14516,
                14527
            ],
            "filename": "response.js",
            "lineno": 559,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004105",
                "name": "opts",
                "type": "Literal",
                "funcscope": "res.download",
                "value": null,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "opts",
        "longname": "res.download~opts",
        "kind": "member",
        "memberof": "res.download",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                14578,
                14592
            ],
            "filename": "response.js",
            "lineno": 561,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004115",
                "name": "done",
                "type": "Identifier",
                "funcscope": "res.download",
                "value": "options",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "done",
        "longname": "res.download~done",
        "kind": "member",
        "memberof": "res.download",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                14597,
                14608
            ],
            "filename": "response.js",
            "lineno": 562,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004119",
                "name": "opts",
                "type": "Literal",
                "funcscope": "res.download",
                "value": null,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "opts",
        "longname": "res.download~opts",
        "kind": "member",
        "memberof": "res.download",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                14787,
                14798
            ],
            "filename": "response.js",
            "lineno": 568,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004138",
                "name": "name",
                "type": "Literal",
                "funcscope": "res.download",
                "value": null,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "name",
        "longname": "res.download~name",
        "kind": "member",
        "memberof": "res.download",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                14803,
                14818
            ],
            "filename": "response.js",
            "lineno": 569,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004142",
                "name": "opts",
                "type": "Identifier",
                "funcscope": "res.download",
                "value": "filename",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "opts",
        "longname": "res.download~opts",
        "kind": "member",
        "memberof": "res.download",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                14877,
                14952
            ],
            "filename": "response.js",
            "lineno": 573,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004146",
                "name": "headers",
                "type": "ObjectExpression",
                "value": "{\"undefined\":\"\"}"
            }
        },
        "undocumented": true,
        "name": "headers",
        "longname": "res.download~headers",
        "kind": "member",
        "memberof": "res.download",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                14893,
                14948
            ],
            "filename": "response.js",
            "lineno": 574,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004149",
                "name": "\"Content-Disposition\"",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "\"Content-Disposition\"",
        "longname": "res.download~headers.\"Content-Disposition\"",
        "kind": "member",
        "memberof": "res.download~headers",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                15026,
                15058
            ],
            "filename": "response.js",
            "lineno": 579,
            "columnno": 8,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004163",
                "name": "keys",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "keys",
        "longname": "res.download~keys",
        "kind": "member",
        "memberof": "res.download",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                15072,
                15077
            ],
            "filename": "response.js",
            "lineno": 580,
            "columnno": 13,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004174",
                "name": "i",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "i",
        "longname": "res.download~i",
        "kind": "member",
        "memberof": "res.download",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                15113,
                15126
            ],
            "filename": "response.js",
            "lineno": 581,
            "columnno": 10,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004186",
                "name": "key",
                "type": "MemberExpression",
                "value": "keys[undefined]"
            }
        },
        "undocumented": true,
        "name": "key",
        "longname": "res.download~key",
        "kind": "member",
        "memberof": "res.download",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                15192,
                15224
            ],
            "filename": "response.js",
            "lineno": 583,
            "columnno": 8,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004200",
                "name": "headers[undefined]",
                "type": "MemberExpression",
                "funcscope": "res.download",
                "value": "opts.headers[undefined]",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "res.download~headers.undefined]",
        "kind": "member",
        "memberof": "res.download~headers",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                15279,
                15305
            ],
            "filename": "response.js",
            "lineno": 589,
            "columnno": 2,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004210",
                "name": "opts",
                "type": "CallExpression",
                "funcscope": "res.download",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "opts",
        "longname": "res.download~opts",
        "kind": "member",
        "memberof": "res.download",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                15308,
                15330
            ],
            "filename": "response.js",
            "lineno": 590,
            "columnno": 2,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004218",
                "name": "opts.headers",
                "type": "Identifier",
                "funcscope": "res.download",
                "value": "headers",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "headers",
        "longname": "res.download~opts.headers",
        "kind": "member",
        "memberof": "res.download~opts",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                15378,
                15430
            ],
            "filename": "response.js",
            "lineno": 593,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004224",
                "name": "fullPath",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "fullPath",
        "longname": "res.download~fullPath",
        "kind": "member",
        "memberof": "res.download",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n * Set _Content-Type_ response header with `type` through `mime.lookup()`\n * when it does not contain \"/\", or set the Content-Type to `type` otherwise.\n *\n * Examples:\n *\n *     res.type('.html');\n *     res.type('html');\n *     res.type('json');\n *     res.type('application/json');\n *     res.type('png');\n *\n * @param {String} type\n * @return {ServerResponse} for chaining\n * @public\n */",
        "meta": {
            "range": [
                15892,
                16063
            ],
            "filename": "response.js",
            "lineno": 618,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004244",
                "name": "res.contentType",
                "type": "AssignmentExpression",
                "value": "res.type",
                "paramnames": []
            }
        },
        "description": "Set _Content-Type_ response header with `type` through `mime.lookup()`\nwhen it does not contain \"/\", or set the Content-Type to `type` otherwise.\n\nExamples:\n\n    res.type('.html');\n    res.type('html');\n    res.type('json');\n    res.type('application/json');\n    res.type('png');",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "name": "type"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ServerResponse"
                    ]
                },
                "description": "for chaining"
            }
        ],
        "access": "public",
        "name": "contentType",
        "longname": "res.contentType",
        "kind": "member",
        "memberof": "res",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                15910,
                16063
            ],
            "filename": "response.js",
            "lineno": 619,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004248",
                "name": "res.type",
                "type": "FunctionExpression",
                "value": "contentType",
                "paramnames": [
                    "type"
                ]
            },
            "vars": {
                "ct": "res.type~ct"
            }
        },
        "undocumented": true,
        "name": "type",
        "longname": "res.type",
        "kind": "function",
        "memberof": "res",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                15956,
                16020
            ],
            "filename": "response.js",
            "lineno": 620,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004257",
                "name": "ct",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "ct",
        "longname": "res.type~ct",
        "kind": "member",
        "memberof": "res.type",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n * Respond to the Acceptable formats using an `obj`\n * of mime-type callbacks.\n *\n * This method uses `req.accepted`, an array of\n * acceptable types ordered by their quality values.\n * When \"Accept\" is not present the _first_ callback\n * is invoked, otherwise the first match is used. When\n * no match is performed the server responds with\n * 406 \"Not Acceptable\".\n *\n * Content-Type is set for you, however if you choose\n * you may alter this within the callback using `res.type()`\n * or `res.set('Content-Type', ...)`.\n *\n *    res.format({\n *      'text/plain': function(){\n *        res.send('hey');\n *      },\n *\n *      'text/html': function(){\n *        res.send('<p>hey</p>');\n *      },\n *\n *      'application/json': function () {\n *        res.send({ message: 'hey' });\n *      }\n *    });\n *\n * In addition to canonicalized MIME types you may\n * also use extnames mapped to these types:\n *\n *    res.format({\n *      text: function(){\n *        res.send('hey');\n *      },\n *\n *      html: function(){\n *        res.send('<p>hey</p>');\n *      },\n *\n *      json: function(){\n *        res.send({ message: 'hey' });\n *      }\n *    });\n *\n * By default Express passes an `Error`\n * with a `.status` of 406 to `next(err)`\n * if a match is not made. If you provide\n * a `.default` callback it will be invoked\n * instead.\n *\n * @param {Object} obj\n * @return {ServerResponse} for chaining\n * @public\n */",
        "meta": {
            "range": [
                17485,
                18033
            ],
            "filename": "response.js",
            "lineno": 684,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004282",
                "name": "res.format",
                "type": "FunctionExpression",
                "paramnames": [
                    "obj"
                ]
            },
            "vars": {
                "req": "res.format~req",
                "next": "res.format~next",
                "keys": "res.format~keys",
                "": null,
                "key": "res.format~key"
            }
        },
        "description": "Respond to the Acceptable formats using an `obj`\nof mime-type callbacks.\n\nThis method uses `req.accepted`, an array of\nacceptable types ordered by their quality values.\nWhen \"Accept\" is not present the _first_ callback\nis invoked, otherwise the first match is used. When\nno match is performed the server responds with\n406 \"Not Acceptable\".\n\nContent-Type is set for you, however if you choose\nyou may alter this within the callback using `res.type()`\nor `res.set('Content-Type', ...)`.\n\n   res.format({\n     'text/plain': function(){\n       res.send('hey');\n     },\n\n     'text/html': function(){\n       res.send('<p>hey</p>');\n     },\n\n     'application/json': function () {\n       res.send({ message: 'hey' });\n     }\n   });\n\nIn addition to canonicalized MIME types you may\nalso use extnames mapped to these types:\n\n   res.format({\n     text: function(){\n       res.send('hey');\n     },\n\n     html: function(){\n       res.send('<p>hey</p>');\n     },\n\n     json: function(){\n       res.send({ message: 'hey' });\n     }\n   });\n\nBy default Express passes an `Error`\nwith a `.status` of 406 to `next(err)`\nif a match is not made. If you provide\na `.default` callback it will be invoked\ninstead.",
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "name": "obj"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ServerResponse"
                    ]
                },
                "description": "for chaining"
            }
        ],
        "access": "public",
        "name": "format",
        "longname": "res.format",
        "kind": "function",
        "memberof": "res",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                17519,
                17533
            ],
            "filename": "response.js",
            "lineno": 685,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004290",
                "name": "req",
                "type": "MemberExpression",
                "value": "this.req"
            }
        },
        "undocumented": true,
        "name": "req",
        "longname": "res.format~req",
        "kind": "member",
        "memberof": "res.format",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                17541,
                17556
            ],
            "filename": "response.js",
            "lineno": 686,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004296",
                "name": "next",
                "type": "MemberExpression",
                "value": "req.next"
            }
        },
        "undocumented": true,
        "name": "next",
        "longname": "res.format~next",
        "kind": "member",
        "memberof": "res.format",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                17565,
                17641
            ],
            "filename": "response.js",
            "lineno": 688,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004302",
                "name": "keys",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "keys",
        "longname": "res.format~keys",
        "kind": "member",
        "memberof": "res.format",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                17649,
                17706
            ],
            "filename": "response.js",
            "lineno": 691,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004320",
                "name": "key",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "key",
        "longname": "res.format~key",
        "kind": "member",
        "memberof": "res.format",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                17939,
                18003
            ],
            "filename": "response.js",
            "lineno": 704,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004383",
                "name": "types",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "types",
        "longname": "types",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "/**\n * Set _Content-Disposition_ header to _attachment_ with optional `filename`.\n *\n * @param {String} filename\n * @return {ServerResponse}\n * @public\n */",
        "meta": {
            "range": [
                18193,
                18381
            ],
            "filename": "response.js",
            "lineno": 719,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004400",
                "name": "res.attachment",
                "type": "FunctionExpression",
                "value": "attachment",
                "paramnames": [
                    "filename"
                ]
            }
        },
        "description": "Set _Content-Disposition_ header to _attachment_ with optional `filename`.",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "name": "filename"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ServerResponse"
                    ]
                }
            }
        ],
        "access": "public",
        "name": "attachment",
        "longname": "res.attachment",
        "kind": "function",
        "memberof": "res",
        "scope": "static"
    },
    {
        "comment": "/**\n * Append additional header `field` with value `val`.\n *\n * Example:\n *\n *    res.append('Link', ['<http://localhost/>', '<http://localhost:3000/>']);\n *    res.append('Set-Cookie', 'foo=bar; Path=/; HttpOnly');\n *    res.append('Warning', '199 Miscellaneous warning');\n *\n * @param {String} field\n * @param {String|Array} val\n * @return {ServerResponse} for chaining\n * @public\n */",
        "meta": {
            "range": [
                18772,
                19075
            ],
            "filename": "response.js",
            "lineno": 744,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004431",
                "name": "res.append",
                "type": "FunctionExpression",
                "value": "append",
                "paramnames": [
                    "field",
                    "val"
                ]
            },
            "vars": {
                "prev": "res.append~prev",
                "value": "res.append~value"
            }
        },
        "description": "Append additional header `field` with value `val`.\n\nExample:\n\n   res.append('Link', ['<http://localhost/>', '<http://localhost:3000/>']);\n   res.append('Set-Cookie', 'foo=bar; Path=/; HttpOnly');\n   res.append('Warning', '199 Miscellaneous warning');",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "name": "field"
            },
            {
                "type": {
                    "names": [
                        "String",
                        "Array"
                    ]
                },
                "name": "val"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ServerResponse"
                    ]
                },
                "description": "for chaining"
            }
        ],
        "access": "public",
        "name": "append",
        "longname": "res.append",
        "kind": "function",
        "memberof": "res",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                18821,
                18843
            ],
            "filename": "response.js",
            "lineno": 745,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004441",
                "name": "prev",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "prev",
        "longname": "res.append~prev",
        "kind": "member",
        "memberof": "res.append",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                18851,
                18862
            ],
            "filename": "response.js",
            "lineno": 746,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004449",
                "name": "value",
                "type": "Identifier",
                "value": "val"
            }
        },
        "undocumented": true,
        "name": "value",
        "longname": "res.append~value",
        "kind": "member",
        "memberof": "res.append",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                18919,
                19035
            ],
            "filename": "response.js",
            "lineno": 750,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004456",
                "name": "value",
                "type": "ConditionalExpression",
                "funcscope": "res.append",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "value",
        "longname": "res.append~value",
        "kind": "member",
        "memberof": "res.append",
        "scope": "inner"
    },
    {
        "comment": "/**\n * Set header `field` to `val`, or pass\n * an object of header fields.\n *\n * Examples:\n *\n *    res.set('Foo', ['bar', 'baz']);\n *    res.set('Accept', 'application/json');\n *    res.set({ Accept: 'text/plain', 'X-API-Key': 'tobi' });\n *\n * Aliased as `res.header()`.\n *\n * @param {String|Object} field\n * @param {String|Array} val\n * @return {ServerResponse} for chaining\n * @public\n */",
        "meta": {
            "range": [
                19471,
                20156
            ],
            "filename": "response.js",
            "lineno": 776,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004492",
                "name": "res.set",
                "type": "AssignmentExpression",
                "value": "res.header",
                "paramnames": []
            }
        },
        "description": "Set header `field` to `val`, or pass\nan object of header fields.\n\nExamples:\n\n   res.set('Foo', ['bar', 'baz']);\n   res.set('Accept', 'application/json');\n   res.set({ Accept: 'text/plain', 'X-API-Key': 'tobi' });\n\nAliased as `res.header()`.",
        "params": [
            {
                "type": {
                    "names": [
                        "String",
                        "Object"
                    ]
                },
                "name": "field"
            },
            {
                "type": {
                    "names": [
                        "String",
                        "Array"
                    ]
                },
                "name": "val"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ServerResponse"
                    ]
                },
                "description": "for chaining"
            }
        ],
        "access": "public",
        "name": "set",
        "longname": "res.set",
        "kind": "member",
        "memberof": "res",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                19481,
                20156
            ],
            "filename": "response.js",
            "lineno": 777,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004496",
                "name": "res.header",
                "type": "FunctionExpression",
                "value": "header",
                "paramnames": [
                    "field",
                    "val"
                ]
            },
            "vars": {
                "value": "res.header~value",
                "charset": "res.header~charset",
                "key": "res.header~key"
            }
        },
        "undocumented": true,
        "name": "header",
        "longname": "res.header",
        "kind": "function",
        "memberof": "res",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                19564,
                19634
            ],
            "filename": "response.js",
            "lineno": 779,
            "columnno": 8,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004513",
                "name": "value",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "value",
        "longname": "res.header~value",
        "kind": "member",
        "memberof": "res.header",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                19887,
                19938
            ],
            "filename": "response.js",
            "lineno": 789,
            "columnno": 12,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004557",
                "name": "charset",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "charset",
        "longname": "res.header~charset",
        "kind": "member",
        "memberof": "res.header",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                19961,
                20006
            ],
            "filename": "response.js",
            "lineno": 790,
            "columnno": 21,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004575",
                "name": "value",
                "type": "BinaryExpression",
                "funcscope": "res.header",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "value",
        "longname": "res.header~value",
        "kind": "member",
        "memberof": "res.header",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                20081,
                20084
            ],
            "filename": "response.js",
            "lineno": 796,
            "columnno": 13,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004593",
                "name": "key"
            }
        },
        "undocumented": true,
        "name": "key",
        "longname": "res.header~key",
        "kind": "member",
        "memberof": "res.header",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n * Get value for header `field`.\n *\n * @param {String} field\n * @return {String}\n * @public\n */",
        "meta": {
            "range": [
                20260,
                20320
            ],
            "filename": "response.js",
            "lineno": 811,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004609",
                "name": "res.get",
                "type": "FunctionExpression",
                "paramnames": [
                    "field"
                ]
            }
        },
        "description": "Get value for header `field`.",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "name": "field"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                }
            }
        ],
        "access": "public",
        "name": "get",
        "longname": "res.get",
        "kind": "function",
        "memberof": "res",
        "scope": "static"
    },
    {
        "comment": "/**\n * Clear cookie `name`.\n *\n * @param {String} name\n * @param {Object} [options]\n * @return {ServerResponse} for chaining\n * @public\n */",
        "meta": {
            "range": [
                20464,
                20626
            ],
            "filename": "response.js",
            "lineno": 824,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004623",
                "name": "res.clearCookie",
                "type": "FunctionExpression",
                "value": "clearCookie",
                "paramnames": [
                    "name",
                    "options"
                ]
            },
            "vars": {
                "opts": "res.clearCookie~opts"
            }
        },
        "description": "Clear cookie `name`.",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "name": "name"
            },
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "optional": true,
                "name": "options"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ServerResponse"
                    ]
                },
                "description": "for chaining"
            }
        ],
        "access": "public",
        "name": "clearCookie",
        "longname": "res.clearCookie",
        "kind": "function",
        "memberof": "res",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                20526,
                20584
            ],
            "filename": "response.js",
            "lineno": 825,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004633",
                "name": "opts",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "opts",
        "longname": "res.clearCookie~opts",
        "kind": "member",
        "memberof": "res.clearCookie",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                20541,
                20561
            ],
            "filename": "response.js",
            "lineno": 825,
            "columnno": 21,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004638",
                "name": "expires",
                "type": "NewExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "expires",
        "longname": "expires",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                20563,
                20572
            ],
            "filename": "response.js",
            "lineno": 825,
            "columnno": 43,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004642",
                "name": "path",
                "type": "Literal",
                "value": "/"
            }
        },
        "undocumented": true,
        "name": "path",
        "longname": "path",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "/**\n * Set cookie `name` to `value`, with the given `options`.\n *\n * Options:\n *\n *    - `maxAge`   max-age in milliseconds, converted to `expires`\n *    - `signed`   sign the cookie\n *    - `path`     defaults to \"/\"\n *\n * Examples:\n *\n *    // \"Remember Me\" for 15 minutes\n *    res.cookie('rememberme', '1', { expires: new Date(Date.now() + 900000), httpOnly: true });\n *\n *    // same as above\n *    res.cookie('rememberme', '1', { maxAge: 900000, httpOnly: true })\n *\n * @param {String} name\n * @param {String|Object} value\n * @param {Object} [options]\n * @return {ServerResponse} for chaining\n * @public\n */",
        "meta": {
            "range": [
                21244,
                21983
            ],
            "filename": "response.js",
            "lineno": 854,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004654",
                "name": "res.cookie",
                "type": "FunctionExpression",
                "paramnames": [
                    "name",
                    "value",
                    "options"
                ]
            },
            "vars": {
                "opts": "res.cookie~opts",
                "secret": "res.cookie~secret",
                "signed": "res.cookie~signed",
                "val": "res.cookie~val",
                "maxAge": "res.cookie~maxAge",
                "opts.expires": "res.cookie~opts.expires",
                "opts.maxAge": "res.cookie~opts.maxAge",
                "opts.path": "res.cookie~opts.path"
            }
        },
        "description": "Set cookie `name` to `value`, with the given `options`.\n\nOptions:\n\n   - `maxAge`   max-age in milliseconds, converted to `expires`\n   - `signed`   sign the cookie\n   - `path`     defaults to \"/\"\n\nExamples:\n\n   // \"Remember Me\" for 15 minutes\n   res.cookie('rememberme', '1', { expires: new Date(Date.now() + 900000), httpOnly: true });\n\n   // same as above\n   res.cookie('rememberme', '1', { maxAge: 900000, httpOnly: true })",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "name": "name"
            },
            {
                "type": {
                    "names": [
                        "String",
                        "Object"
                    ]
                },
                "name": "value"
            },
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "optional": true,
                "name": "options"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ServerResponse"
                    ]
                },
                "description": "for chaining"
            }
        ],
        "access": "public",
        "name": "cookie",
        "longname": "res.cookie",
        "kind": "function",
        "memberof": "res",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                21297,
                21322
            ],
            "filename": "response.js",
            "lineno": 855,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004664",
                "name": "opts",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "opts",
        "longname": "res.cookie~opts",
        "kind": "member",
        "memberof": "res.cookie",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                21330,
                21354
            ],
            "filename": "response.js",
            "lineno": 856,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004671",
                "name": "secret",
                "type": "MemberExpression",
                "value": "this.req.secret"
            }
        },
        "undocumented": true,
        "name": "secret",
        "longname": "res.cookie~secret",
        "kind": "member",
        "memberof": "res.cookie",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                21362,
                21382
            ],
            "filename": "response.js",
            "lineno": 857,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004679",
                "name": "signed",
                "type": "MemberExpression",
                "value": "opts.signed"
            }
        },
        "undocumented": true,
        "name": "signed",
        "longname": "res.cookie~signed",
        "kind": "member",
        "memberof": "res.cookie",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                21498,
                21584
            ],
            "filename": "response.js",
            "lineno": 863,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004695",
                "name": "val",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "val",
        "longname": "res.cookie~val",
        "kind": "member",
        "memberof": "res.cookie",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                21607,
                21637
            ],
            "filename": "response.js",
            "lineno": 868,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004716",
                "name": "val",
                "type": "BinaryExpression",
                "funcscope": "res.cookie",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "val",
        "longname": "res.cookie~val",
        "kind": "member",
        "memberof": "res.cookie",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                21681,
                21705
            ],
            "filename": "response.js",
            "lineno": 872,
            "columnno": 8,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004732",
                "name": "maxAge",
                "type": "BinaryExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "maxAge",
        "longname": "res.cookie~maxAge",
        "kind": "member",
        "memberof": "res.cookie",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                21739,
                21783
            ],
            "filename": "response.js",
            "lineno": 875,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004746",
                "name": "opts.expires",
                "type": "NewExpression",
                "funcscope": "res.cookie",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "expires",
        "longname": "res.cookie~opts.expires",
        "kind": "member",
        "memberof": "res.cookie~opts",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                21790,
                21829
            ],
            "filename": "response.js",
            "lineno": 876,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004759",
                "name": "opts.maxAge",
                "type": "CallExpression",
                "funcscope": "res.cookie",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "maxAge",
        "longname": "res.cookie~opts.maxAge",
        "kind": "member",
        "memberof": "res.cookie~opts",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                21872,
                21887
            ],
            "filename": "response.js",
            "lineno": 881,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004778",
                "name": "opts.path",
                "type": "Literal",
                "funcscope": "res.cookie",
                "value": "/",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "path",
        "longname": "res.cookie~opts.path",
        "kind": "member",
        "memberof": "res.cookie~opts",
        "scope": "static"
    },
    {
        "comment": "/**\n * Set the location header to `url`.\n *\n * The given `url` can also be \"back\", which redirects\n * to the _Referrer_ or _Referer_ headers or \"/\".\n *\n * Examples:\n *\n *    res.location('/foo/bar').;\n *    res.location('http://example.com');\n *    res.location('../login');\n *\n * @param {String} url\n * @return {ServerResponse} for chaining\n * @public\n */",
        "meta": {
            "range": [
                22344,
                22581
            ],
            "filename": "response.js",
            "lineno": 906,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004801",
                "name": "res.location",
                "type": "FunctionExpression",
                "value": "location",
                "paramnames": [
                    "url"
                ]
            },
            "vars": {
                "loc": "res.location~loc"
            }
        },
        "description": "Set the location header to `url`.\n\nThe given `url` can also be \"back\", which redirects\nto the _Referrer_ or _Referer_ headers or \"/\".\n\nExamples:\n\n   res.location('/foo/bar').;\n   res.location('http://example.com');\n   res.location('../login');",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "name": "url"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ServerResponse"
                    ]
                },
                "description": "for chaining"
            }
        ],
        "access": "public",
        "name": "location",
        "longname": "res.location",
        "kind": "function",
        "memberof": "res",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                22390,
                22399
            ],
            "filename": "response.js",
            "lineno": 907,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004810",
                "name": "loc",
                "type": "Identifier",
                "value": "url"
            }
        },
        "undocumented": true,
        "name": "loc",
        "longname": "res.location~loc",
        "kind": "member",
        "memberof": "res.location",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                22471,
                22508
            ],
            "filename": "response.js",
            "lineno": 911,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004819",
                "name": "loc",
                "type": "LogicalExpression",
                "funcscope": "res.location",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "loc",
        "longname": "res.location~loc",
        "kind": "member",
        "memberof": "res.location",
        "scope": "inner"
    },
    {
        "comment": "/**\n * Redirect to the given `url` with optional response `status`\n * defaulting to 302.\n *\n * The resulting `url` is determined by `res.location()`, so\n * it will play nicely with mounted apps, relative paths,\n * `\"back\"` etc.\n *\n * Examples:\n *\n *    res.redirect('/foo/bar');\n *    res.redirect('http://example.com');\n *    res.redirect(301, 'http://example.com');\n *    res.redirect('../login'); // /blog/post/1 -> /blog/login\n *\n * @public\n */",
        "meta": {
            "range": [
                23034,
                24071
            ],
            "filename": "response.js",
            "lineno": 936,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004840",
                "name": "res.redirect",
                "type": "FunctionExpression",
                "value": "redirect",
                "paramnames": [
                    "url"
                ]
            },
            "vars": {
                "address": "res.redirect~address",
                "body": "res.redirect~body",
                "status": "res.redirect~status",
                "": null,
                "this.statusCode": "res.redirect#statusCode"
            }
        },
        "description": "Redirect to the given `url` with optional response `status`\ndefaulting to 302.\n\nThe resulting `url` is determined by `res.location()`, so\nit will play nicely with mounted apps, relative paths,\n`\"back\"` etc.\n\nExamples:\n\n   res.redirect('/foo/bar');\n   res.redirect('http://example.com');\n   res.redirect(301, 'http://example.com');\n   res.redirect('../login'); // /blog/post/1 -> /blog/login",
        "access": "public",
        "name": "redirect",
        "longname": "res.redirect",
        "kind": "function",
        "memberof": "res",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                23080,
                23093
            ],
            "filename": "response.js",
            "lineno": 937,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004849",
                "name": "address",
                "type": "Identifier",
                "value": "url"
            }
        },
        "undocumented": true,
        "name": "address",
        "longname": "res.redirect~address",
        "kind": "member",
        "memberof": "res.redirect",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                23101,
                23105
            ],
            "filename": "response.js",
            "lineno": 938,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004853",
                "name": "body"
            }
        },
        "undocumented": true,
        "name": "body",
        "longname": "res.redirect~body",
        "kind": "member",
        "memberof": "res.redirect",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                23113,
                23125
            ],
            "filename": "response.js",
            "lineno": 939,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004856",
                "name": "status",
                "type": "Literal",
                "value": 302
            }
        },
        "undocumented": true,
        "name": "status",
        "longname": "res.redirect~status",
        "kind": "member",
        "memberof": "res.redirect",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                23234,
                23255
            ],
            "filename": "response.js",
            "lineno": 944,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004875",
                "name": "status",
                "type": "MemberExpression",
                "funcscope": "res.redirect",
                "value": "arguments[0]",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "status",
        "longname": "res.redirect~status",
        "kind": "member",
        "memberof": "res.redirect",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                23263,
                23285
            ],
            "filename": "response.js",
            "lineno": 945,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004881",
                "name": "address",
                "type": "MemberExpression",
                "funcscope": "res.redirect",
                "value": "arguments[1]",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "address",
        "longname": "res.redirect~address",
        "kind": "member",
        "memberof": "res.redirect",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                23391,
                23412
            ],
            "filename": "response.js",
            "lineno": 948,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004892",
                "name": "status",
                "type": "MemberExpression",
                "funcscope": "res.redirect",
                "value": "arguments[1]",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "status",
        "longname": "res.redirect~status",
        "kind": "member",
        "memberof": "res.redirect",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                23452,
                23500
            ],
            "filename": "response.js",
            "lineno": 953,
            "columnno": 2,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004898",
                "name": "address",
                "type": "CallExpression",
                "funcscope": "res.redirect",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "address",
        "longname": "res.redirect~address",
        "kind": "member",
        "memberof": "res.redirect",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                23565,
                23658
            ],
            "filename": "response.js",
            "lineno": 957,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004915",
                "name": "text",
                "type": "FunctionExpression"
            },
            "vars": {
                "body": "text~body"
            }
        },
        "undocumented": true,
        "name": "text",
        "longname": "text",
        "kind": "function",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                23589,
                23652
            ],
            "filename": "response.js",
            "lineno": 958,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004919",
                "name": "body",
                "type": "BinaryExpression",
                "funcscope": "text",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "body",
        "longname": "text~body",
        "kind": "member",
        "memberof": "text",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                23665,
                23828
            ],
            "filename": "response.js",
            "lineno": 961,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004930",
                "name": "html",
                "type": "FunctionExpression"
            },
            "vars": {
                "u": "html~u",
                "body": "html~body"
            }
        },
        "undocumented": true,
        "name": "html",
        "longname": "html",
        "kind": "function",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                23693,
                23716
            ],
            "filename": "response.js",
            "lineno": 962,
            "columnno": 10,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004934",
                "name": "u",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "u",
        "longname": "html~u",
        "kind": "member",
        "memberof": "html",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                23724,
                23822
            ],
            "filename": "response.js",
            "lineno": 963,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004940",
                "name": "body",
                "type": "BinaryExpression",
                "funcscope": "html",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "body",
        "longname": "html~body",
        "kind": "member",
        "memberof": "html",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                23835,
                23878
            ],
            "filename": "response.js",
            "lineno": 966,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004959",
                "name": "default",
                "type": "FunctionExpression"
            },
            "vars": {
                "body": "default~body"
            }
        },
        "undocumented": true,
        "name": "default",
        "longname": "default",
        "kind": "function",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                23862,
                23871
            ],
            "filename": "response.js",
            "lineno": 967,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004963",
                "name": "body",
                "type": "Literal",
                "funcscope": "default",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "body",
        "longname": "default~body",
        "kind": "member",
        "memberof": "default",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                23901,
                23925
            ],
            "filename": "response.js",
            "lineno": 972,
            "columnno": 2,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100004967",
                "name": "this.statusCode",
                "type": "Identifier",
                "value": "status",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "statusCode",
        "longname": "res.redirect#statusCode",
        "kind": "member",
        "memberof": "res.redirect",
        "scope": "instance"
    },
    {
        "comment": "/**\n * Add `field` to Vary. If already present in the Vary set, then\n * this call is simply ignored.\n *\n * @param {Array|String} field\n * @return {ServerResponse} for chaining\n * @public\n */",
        "meta": {
            "range": [
                24266,
                24492
            ],
            "filename": "response.js",
            "lineno": 991,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005005",
                "name": "res.vary",
                "type": "FunctionExpression",
                "paramnames": [
                    "field"
                ]
            }
        },
        "description": "Add `field` to Vary. If already present in the Vary set, then\nthis call is simply ignored.",
        "params": [
            {
                "type": {
                    "names": [
                        "Array",
                        "String"
                    ]
                },
                "name": "field"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "ServerResponse"
                    ]
                },
                "description": "for chaining"
            }
        ],
        "access": "public",
        "name": "vary",
        "longname": "res.vary",
        "kind": "function",
        "memberof": "res",
        "scope": "static"
    },
    {
        "comment": "/**\n * Render `view` with the given `options` and optional callback `fn`.\n * When a callback function is given a response will _not_ be made\n * automatically, otherwise a response of _200_ and _text/html_ is given.\n *\n * Options:\n *\n *  - `cache`     boolean hinting to the engine it should cache\n *  - `filename`  filename of the view being rendered\n *\n * @public\n */",
        "meta": {
            "range": [
                24865,
                25395
            ],
            "filename": "response.js",
            "lineno": 1016,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005041",
                "name": "res.render",
                "type": "FunctionExpression",
                "value": "render",
                "paramnames": [
                    "view",
                    "options",
                    "callback"
                ]
            },
            "vars": {
                "app": "res.render~app",
                "done": "res.render~done",
                "opts": "res.render~opts",
                "req": "res.render~req",
                "self": "res.render~self",
                "opts._locals": "res.render~opts._locals",
                "": null
            }
        },
        "description": "Render `view` with the given `options` and optional callback `fn`.\nWhen a callback function is given a response will _not_ be made\nautomatically, otherwise a response of _200_ and _text/html_ is given.\n\nOptions:\n\n - `cache`     boolean hinting to the engine it should cache\n - `filename`  filename of the view being rendered",
        "access": "public",
        "name": "render",
        "longname": "res.render",
        "kind": "function",
        "memberof": "res",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                24927,
                24945
            ],
            "filename": "response.js",
            "lineno": 1017,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005052",
                "name": "app",
                "type": "MemberExpression",
                "value": "this.req.app"
            }
        },
        "undocumented": true,
        "name": "app",
        "longname": "res.render~app",
        "kind": "member",
        "memberof": "res.render",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                24953,
                24968
            ],
            "filename": "response.js",
            "lineno": 1018,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005060",
                "name": "done",
                "type": "Identifier",
                "value": "callback"
            }
        },
        "undocumented": true,
        "name": "done",
        "longname": "res.render~done",
        "kind": "member",
        "memberof": "res.render",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                24976,
                24996
            ],
            "filename": "response.js",
            "lineno": 1019,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005064",
                "name": "opts",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "opts",
        "longname": "res.render~opts",
        "kind": "member",
        "memberof": "res.render",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                25004,
                25018
            ],
            "filename": "response.js",
            "lineno": 1020,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005070",
                "name": "req",
                "type": "MemberExpression",
                "value": "this.req"
            }
        },
        "undocumented": true,
        "name": "req",
        "longname": "res.render~req",
        "kind": "member",
        "memberof": "res.render",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                25026,
                25037
            ],
            "filename": "response.js",
            "lineno": 1021,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005076",
                "name": "self",
                "type": "ThisExpression",
                "value": "this"
            }
        },
        "undocumented": true,
        "name": "self",
        "longname": "res.render~self",
        "kind": "member",
        "memberof": "res.render",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                25128,
                25142
            ],
            "filename": "response.js",
            "lineno": 1025,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005086",
                "name": "done",
                "type": "Identifier",
                "funcscope": "res.render",
                "value": "options",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "done",
        "longname": "res.render~done",
        "kind": "member",
        "memberof": "res.render",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                25148,
                25157
            ],
            "filename": "response.js",
            "lineno": 1026,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005090",
                "name": "opts",
                "type": "ObjectExpression",
                "funcscope": "res.render",
                "value": "{}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "opts",
        "longname": "res.render~opts",
        "kind": "member",
        "memberof": "res.render",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                25188,
                25214
            ],
            "filename": "response.js",
            "lineno": 1030,
            "columnno": 2,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005094",
                "name": "opts._locals",
                "type": "MemberExpression",
                "funcscope": "res.render",
                "value": "self.locals",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_locals",
        "longname": "res.render~opts._locals",
        "kind": "member",
        "memberof": "res.render~opts",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                25252,
                25347
            ],
            "filename": "response.js",
            "lineno": 1033,
            "columnno": 2,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005102",
                "name": "done",
                "type": "LogicalExpression",
                "funcscope": "res.render",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "done",
        "longname": "res.render~done",
        "kind": "member",
        "memberof": "res.render",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                25427,
                27061
            ],
            "filename": "response.js",
            "lineno": 1043,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005132",
                "name": "sendfile",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "res",
                    "file",
                    "options",
                    "callback"
                ]
            },
            "vars": {
                "done": "sendfile~done",
                "streaming": "sendfile~streaming",
                "onaborted": "sendfile~onaborted",
                "ondirectory": "sendfile~ondirectory",
                "onerror": "sendfile~onerror",
                "onend": "sendfile~onend",
                "onfile": "sendfile~onfile",
                "onfinish": "sendfile~onfinish",
                "onstream": "sendfile~onstream",
                "": null
            }
        },
        "undocumented": true,
        "name": "sendfile",
        "longname": "sendfile",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                25483,
                25495
            ],
            "filename": "response.js",
            "lineno": 1044,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005140",
                "name": "done",
                "type": "Literal",
                "value": false
            }
        },
        "undocumented": true,
        "name": "done",
        "longname": "sendfile~done",
        "kind": "member",
        "memberof": "sendfile",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                25503,
                25512
            ],
            "filename": "response.js",
            "lineno": 1045,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005144",
                "name": "streaming"
            }
        },
        "undocumented": true,
        "name": "streaming",
        "longname": "sendfile~streaming",
        "kind": "member",
        "memberof": "sendfile",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                25538,
                25698
            ],
            "filename": "response.js",
            "lineno": 1048,
            "columnno": 2,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005146",
                "name": "onaborted",
                "type": "FunctionDeclaration",
                "paramnames": []
            },
            "vars": {
                "done": "sendfile~onaborted~done",
                "err": "sendfile~onaborted~err",
                "err.code": "sendfile~onaborted~err.code"
            }
        },
        "undocumented": true,
        "name": "onaborted",
        "longname": "sendfile~onaborted",
        "kind": "function",
        "memberof": "sendfile",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                25587,
                25598
            ],
            "filename": "response.js",
            "lineno": 1050,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005153",
                "name": "done",
                "type": "Literal",
                "funcscope": "sendfile~onaborted",
                "value": true,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "done",
        "longname": "sendfile~onaborted~done",
        "kind": "member",
        "memberof": "sendfile~onaborted",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                25609,
                25643
            ],
            "filename": "response.js",
            "lineno": 1052,
            "columnno": 8,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005157",
                "name": "err",
                "type": "NewExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "err",
        "longname": "sendfile~onaborted~err",
        "kind": "member",
        "memberof": "sendfile~onaborted",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                25649,
                25674
            ],
            "filename": "response.js",
            "lineno": 1053,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005163",
                "name": "err.code",
                "type": "Literal",
                "funcscope": "sendfile~onaborted",
                "value": "ECONNABORTED",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "code",
        "longname": "sendfile~onaborted~err.code",
        "kind": "member",
        "memberof": "sendfile~onaborted~err",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                25717,
                25870
            ],
            "filename": "response.js",
            "lineno": 1058,
            "columnno": 2,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005172",
                "name": "ondirectory",
                "type": "FunctionDeclaration",
                "paramnames": []
            },
            "vars": {
                "done": "sendfile~ondirectory~done",
                "err": "sendfile~ondirectory~err",
                "err.code": "sendfile~ondirectory~err.code"
            }
        },
        "undocumented": true,
        "name": "ondirectory",
        "longname": "sendfile~ondirectory",
        "kind": "function",
        "memberof": "sendfile",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                25768,
                25779
            ],
            "filename": "response.js",
            "lineno": 1060,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005179",
                "name": "done",
                "type": "Literal",
                "funcscope": "sendfile~ondirectory",
                "value": true,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "done",
        "longname": "sendfile~ondirectory~done",
        "kind": "member",
        "memberof": "sendfile~ondirectory",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                25790,
                25821
            ],
            "filename": "response.js",
            "lineno": 1062,
            "columnno": 8,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005183",
                "name": "err",
                "type": "NewExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "err",
        "longname": "sendfile~ondirectory~err",
        "kind": "member",
        "memberof": "sendfile~ondirectory",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                25827,
                25846
            ],
            "filename": "response.js",
            "lineno": 1063,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005189",
                "name": "err.code",
                "type": "Literal",
                "funcscope": "sendfile~ondirectory",
                "value": "EISDIR",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "code",
        "longname": "sendfile~ondirectory~err.code",
        "kind": "member",
        "memberof": "sendfile~ondirectory~err",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                25886,
                25971
            ],
            "filename": "response.js",
            "lineno": 1068,
            "columnno": 2,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005198",
                "name": "onerror",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "err"
                ]
            },
            "vars": {
                "done": "sendfile~onerror~done"
            }
        },
        "undocumented": true,
        "name": "onerror",
        "longname": "sendfile~onerror",
        "kind": "function",
        "memberof": "sendfile",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                25936,
                25947
            ],
            "filename": "response.js",
            "lineno": 1070,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005206",
                "name": "done",
                "type": "Literal",
                "funcscope": "sendfile~onerror",
                "value": true,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "done",
        "longname": "sendfile~onerror~done",
        "kind": "member",
        "memberof": "sendfile~onerror",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                25986,
                26063
            ],
            "filename": "response.js",
            "lineno": 1075,
            "columnno": 2,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005213",
                "name": "onend",
                "type": "FunctionDeclaration",
                "paramnames": []
            },
            "vars": {
                "done": "sendfile~onend~done"
            }
        },
        "undocumented": true,
        "name": "onend",
        "longname": "sendfile~onend",
        "kind": "function",
        "memberof": "sendfile",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                26031,
                26042
            ],
            "filename": "response.js",
            "lineno": 1077,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005220",
                "name": "done",
                "type": "Literal",
                "funcscope": "sendfile~onend",
                "value": true,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "done",
        "longname": "sendfile~onend~done",
        "kind": "member",
        "memberof": "sendfile~onend",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                26077,
                26123
            ],
            "filename": "response.js",
            "lineno": 1082,
            "columnno": 2,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005226",
                "name": "onfile",
                "type": "FunctionDeclaration",
                "paramnames": []
            },
            "vars": {
                "streaming": "sendfile~onfile~streaming"
            }
        },
        "undocumented": true,
        "name": "onfile",
        "longname": "sendfile~onfile",
        "kind": "function",
        "memberof": "sendfile",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                26101,
                26118
            ],
            "filename": "response.js",
            "lineno": 1083,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005230",
                "name": "streaming",
                "type": "Literal",
                "funcscope": "sendfile~onfile",
                "value": false,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "streaming",
        "longname": "sendfile~onfile~streaming",
        "kind": "member",
        "memberof": "sendfile~onfile",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                26141,
                26476
            ],
            "filename": "response.js",
            "lineno": 1087,
            "columnno": 2,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005233",
                "name": "onfinish",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "err"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "onfinish",
        "longname": "sendfile~onfinish",
        "kind": "function",
        "memberof": "sendfile",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                26434,
                26445
            ],
            "filename": "response.js",
            "lineno": 1099,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005278",
                "name": "done",
                "type": "Literal",
                "funcscope": "<anonymous>",
                "value": true,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "done",
        "longname": "<anonymous>~done",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                26495,
                26542
            ],
            "filename": "response.js",
            "lineno": 1105,
            "columnno": 2,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005284",
                "name": "onstream",
                "type": "FunctionDeclaration",
                "paramnames": []
            },
            "vars": {
                "streaming": "sendfile~onstream~streaming"
            }
        },
        "undocumented": true,
        "name": "onstream",
        "longname": "sendfile~onstream",
        "kind": "function",
        "memberof": "sendfile",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                26521,
                26537
            ],
            "filename": "response.js",
            "lineno": 1106,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005288",
                "name": "streaming",
                "type": "Literal",
                "funcscope": "sendfile~onstream",
                "value": true,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "streaming",
        "longname": "sendfile~onstream~streaming",
        "kind": "member",
        "memberof": "sendfile~onstream",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                26847,
                26868
            ],
            "filename": "response.js",
            "lineno": 1119,
            "columnno": 10,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005347",
                "name": "obj",
                "type": "MemberExpression",
                "value": "options.headers"
            }
        },
        "undocumented": true,
        "name": "obj",
        "longname": "<anonymous>~obj",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                26880,
                26903
            ],
            "filename": "response.js",
            "lineno": 1120,
            "columnno": 10,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005353",
                "name": "keys",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "keys",
        "longname": "<anonymous>~keys",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                26921,
                26926
            ],
            "filename": "response.js",
            "lineno": 1122,
            "columnno": 15,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005362",
                "name": "i",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "i",
        "longname": "<anonymous>~i",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                26964,
                26975
            ],
            "filename": "response.js",
            "lineno": 1123,
            "columnno": 12,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005374",
                "name": "k",
                "type": "MemberExpression",
                "value": "keys[undefined]"
            }
        },
        "undocumented": true,
        "name": "k",
        "longname": "<anonymous>~k",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n * Stringify JSON, like JSON.stringify, but v8 optimized, with the\n * ability to escape characters that can trigger HTML sniffing.\n *\n * @param {*} value\n * @param {function} replacer\n * @param {number} spaces\n * @param {boolean} escape\n * @returns {string}\n * @private\n */",
        "meta": {
            "range": [
                27342,
                28013
            ],
            "filename": "response.js",
            "lineno": 1145,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005394",
                "name": "stringify",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "value",
                    "replacer",
                    "spaces",
                    "escape"
                ]
            },
            "vars": {
                "json": "stringify~json",
                "": null
            }
        },
        "description": "Stringify JSON, like JSON.stringify, but v8 optimized, with the\nability to escape characters that can trigger HTML sniffing.",
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "name": "value"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "name": "replacer"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "name": "spaces"
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "name": "escape"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                }
            }
        ],
        "access": "private",
        "name": "stringify",
        "longname": "stringify",
        "kind": "function",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                27520,
                27619
            ],
            "filename": "response.js",
            "lineno": 1148,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005402",
                "name": "json",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "json",
        "longname": "stringify~json",
        "kind": "member",
        "memberof": "stringify",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                27670,
                27992
            ],
            "filename": "response.js",
            "lineno": 1153,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005429",
                "name": "json",
                "type": "CallExpression",
                "funcscope": "stringify",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "json",
        "longname": "stringify~json",
        "kind": "member",
        "memberof": "stringify",
        "scope": "inner"
    },
    {
        "comment": "/**\n * Module dependencies.\n * @api private\n */",
        "meta": {
            "range": [
                198,
                236
            ],
            "filename": "utils.js",
            "lineno": 15,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005467",
                "name": "Buffer",
                "type": "MemberExpression",
                "value": ".Buffer"
            }
        },
        "description": "Module dependencies.",
        "tags": [
            {
                "originalTitle": "api",
                "title": "api",
                "text": "private",
                "value": "private"
            }
        ],
        "name": "Buffer",
        "longname": "Buffer",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                241,
                292
            ],
            "filename": "utils.js",
            "lineno": 16,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005475",
                "name": "contentDisposition",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "contentDisposition",
        "longname": "contentDisposition",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                298,
                335
            ],
            "filename": "utils.js",
            "lineno": 17,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005481",
                "name": "contentType",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "contentType",
        "longname": "contentType",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                341,
                379
            ],
            "filename": "utils.js",
            "lineno": 18,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005487",
                "name": "deprecate",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "deprecate",
        "longname": "deprecate",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                385,
                419
            ],
            "filename": "utils.js",
            "lineno": 19,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005495",
                "name": "flatten",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "flatten",
        "longname": "flatten",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                425,
                452
            ],
            "filename": "utils.js",
            "lineno": 20,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005501",
                "name": "mime",
                "type": "MemberExpression",
                "value": ".mime"
            }
        },
        "undocumented": true,
        "name": "mime",
        "longname": "mime",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                458,
                480
            ],
            "filename": "utils.js",
            "lineno": 21,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005509",
                "name": "etag",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "etag",
        "longname": "etag",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                486,
                519
            ],
            "filename": "utils.js",
            "lineno": 22,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005515",
                "name": "proxyaddr",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "proxyaddr",
        "longname": "proxyaddr",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                525,
                543
            ],
            "filename": "utils.js",
            "lineno": 23,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005521",
                "name": "qs",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "qs",
        "longname": "qs",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                549,
                585
            ],
            "filename": "utils.js",
            "lineno": 24,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005527",
                "name": "querystring",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "querystring",
        "longname": "querystring",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Return strong ETag for `body`.\n *\n * @param {String|Buffer} body\n * @param {String} [encoding]\n * @return {String}\n * @api private\n */",
        "meta": {
            "range": [
                731,
                782
            ],
            "filename": "utils.js",
            "lineno": 35,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005533",
                "name": "exports.etag",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "description": "Return strong ETag for `body`.",
        "params": [
            {
                "type": {
                    "names": [
                        "String",
                        "Buffer"
                    ]
                },
                "name": "body"
            },
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "optional": true,
                "name": "encoding"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                }
            }
        ],
        "tags": [
            {
                "originalTitle": "api",
                "title": "api",
                "text": "private",
                "value": "private"
            }
        ],
        "name": "etag",
        "longname": "etag",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                768,
                779
            ],
            "filename": "utils.js",
            "lineno": 35,
            "columnno": 37,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005540",
                "name": "weak",
                "type": "Literal",
                "value": false
            }
        },
        "undocumented": true,
        "name": "weak",
        "longname": "weak",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "/**\n * Return weak ETag for `body`.\n *\n * @param {String|Buffer} body\n * @param {String} [encoding]\n * @return {String}\n * @api private\n */",
        "meta": {
            "range": [
                925,
                976
            ],
            "filename": "utils.js",
            "lineno": 46,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005543",
                "name": "exports.wetag",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "description": "Return weak ETag for `body`.",
        "params": [
            {
                "type": {
                    "names": [
                        "String",
                        "Buffer"
                    ]
                },
                "name": "body"
            },
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "optional": true,
                "name": "encoding"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                }
            }
        ],
        "tags": [
            {
                "originalTitle": "api",
                "title": "api",
                "text": "private",
                "value": "private"
            }
        ],
        "name": "wetag",
        "longname": "wetag",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                963,
                973
            ],
            "filename": "utils.js",
            "lineno": 46,
            "columnno": 38,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005550",
                "name": "weak",
                "type": "Literal",
                "value": true
            }
        },
        "undocumented": true,
        "name": "weak",
        "longname": "weak",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "/**\n * Check if `path` looks absolute.\n *\n * @param {String} path\n * @return {Boolean}\n * @api private\n */",
        "meta": {
            "range": [
                1086,
                1345
            ],
            "filename": "utils.js",
            "lineno": 56,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005553",
                "name": "exports.isAbsolute",
                "type": "FunctionExpression",
                "paramnames": [
                    "path"
                ]
            }
        },
        "description": "Check if `path` looks absolute.",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "name": "path"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                }
            }
        ],
        "tags": [
            {
                "originalTitle": "api",
                "title": "api",
                "text": "private",
                "value": "private"
            }
        ],
        "name": "isAbsolute",
        "longname": "isAbsolute",
        "kind": "function",
        "scope": "global"
    },
    {
        "comment": "/**\n * Flatten the given `arr`.\n *\n * @param {Array} arr\n * @return {Array}\n * @api private\n */",
        "meta": {
            "range": [
                1445,
                1547
            ],
            "filename": "utils.js",
            "lineno": 70,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005600",
                "name": "exports.flatten",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "description": "Flatten the given `arr`.",
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "name": "arr"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                }
            }
        ],
        "tags": [
            {
                "originalTitle": "api",
                "title": "api",
                "text": "private",
                "value": "private"
            }
        ],
        "name": "flatten",
        "longname": "flatten",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "/**\n * Normalize the given `type`, for example \"html\" becomes \"text/html\".\n *\n * @param {String} type\n * @return {Object}\n * @api private\n */",
        "meta": {
            "range": [
                1693,
                1835
            ],
            "filename": "utils.js",
            "lineno": 81,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005611",
                "name": "exports.normalizeType",
                "type": "FunctionExpression",
                "paramnames": [
                    "type"
                ]
            }
        },
        "description": "Normalize the given `type`, for example \"html\" becomes \"text/html\".",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "name": "type"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                }
            }
        ],
        "tags": [
            {
                "originalTitle": "api",
                "title": "api",
                "text": "private",
                "value": "private"
            }
        ],
        "name": "normalizeType",
        "longname": "normalizeType",
        "kind": "function",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1794,
                1818
            ],
            "filename": "utils.js",
            "lineno": 84,
            "columnno": 8,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005630",
                "name": "value",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "value",
        "longname": "value",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1820,
                1830
            ],
            "filename": "utils.js",
            "lineno": 84,
            "columnno": 34,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005636",
                "name": "params",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "undocumented": true,
        "name": "params",
        "longname": "params",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "/**\n * Normalize `types`, for example \"html\" becomes \"text/html\".\n *\n * @param {Array} types\n * @return {Array}\n * @api private\n */",
        "meta": {
            "range": [
                1971,
                2140
            ],
            "filename": "utils.js",
            "lineno": 95,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005639",
                "name": "exports.normalizeTypes",
                "type": "FunctionExpression",
                "paramnames": [
                    "types"
                ]
            },
            "vars": {
                "ret": "normalizeTypes~ret",
                "i": "normalizeTypes~i"
            }
        },
        "description": "Normalize `types`, for example \"html\" becomes \"text/html\".",
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "name": "types"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                }
            }
        ],
        "tags": [
            {
                "originalTitle": "api",
                "title": "api",
                "text": "private",
                "value": "private"
            }
        ],
        "name": "normalizeTypes",
        "longname": "normalizeTypes",
        "kind": "function",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2019,
                2027
            ],
            "filename": "utils.js",
            "lineno": 96,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005647",
                "name": "ret",
                "type": "ArrayExpression",
                "value": "[]"
            }
        },
        "undocumented": true,
        "name": "ret",
        "longname": "normalizeTypes~ret",
        "kind": "member",
        "memberof": "normalizeTypes",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2041,
                2046
            ],
            "filename": "utils.js",
            "lineno": 98,
            "columnno": 11,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005652",
                "name": "i",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "i",
        "longname": "normalizeTypes~i",
        "kind": "member",
        "memberof": "normalizeTypes",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n * Generate Content-Disposition header appropriate for the filename.\n * non-ascii filenames are urlencoded and a filename* parameter is added\n *\n * @param {String} filename\n * @return {String}\n * @api private\n */",
        "meta": {
            "range": [
                2361,
                2502
            ],
            "filename": "utils.js",
            "lineno": 114,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005678",
                "name": "exports.contentDisposition",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "description": "Generate Content-Disposition header appropriate for the filename.\nnon-ascii filenames are urlencoded and a filename* parameter is added",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "name": "filename"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                }
            }
        ],
        "tags": [
            {
                "originalTitle": "api",
                "title": "api",
                "text": "private",
                "value": "private"
            }
        ],
        "name": "contentDisposition",
        "longname": "contentDisposition",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "/**\n * Parse accept params `str` returning an\n * object with `.value`, `.quality` and `.params`.\n * also includes `.originalIndex` for stable sorting\n *\n * @param {String} str\n * @param {Number} index\n * @return {Object}\n * @api private\n */",
        "meta": {
            "range": [
                2747,
                3119
            ],
            "filename": "utils.js",
            "lineno": 128,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005688",
                "name": "acceptParams",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "str",
                    "index"
                ]
            },
            "vars": {
                "parts": "acceptParams~parts",
                "ret": "acceptParams~ret",
                "i": "acceptParams~i",
                "pms": "acceptParams~pms",
                "ret.quality": "acceptParams~ret.quality",
                "ret.params[undefined]": "acceptParams~ret.params[undefined]"
            }
        },
        "description": "Parse accept params `str` returning an\nobject with `.value`, `.quality` and `.params`.\nalso includes `.originalIndex` for stable sorting",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "name": "str"
            },
            {
                "type": {
                    "names": [
                        "Number"
                    ]
                },
                "name": "index"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                }
            }
        ],
        "tags": [
            {
                "originalTitle": "api",
                "title": "api",
                "text": "private",
                "value": "private"
            }
        ],
        "name": "acceptParams",
        "longname": "acceptParams",
        "kind": "function",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2789,
                2815
            ],
            "filename": "utils.js",
            "lineno": 129,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005694",
                "name": "parts",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "parts",
        "longname": "acceptParams~parts",
        "kind": "member",
        "memberof": "acceptParams",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2823,
                2894
            ],
            "filename": "utils.js",
            "lineno": 130,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005702",
                "name": "ret",
                "type": "ObjectExpression",
                "value": "{\"value\":\"\",\"quality\":1,\"params\":\"\",\"originalIndex\":\"\"}"
            }
        },
        "undocumented": true,
        "name": "ret",
        "longname": "acceptParams~ret",
        "kind": "member",
        "memberof": "acceptParams",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2831,
                2846
            ],
            "filename": "utils.js",
            "lineno": 130,
            "columnno": 14,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005705",
                "name": "value",
                "type": "MemberExpression",
                "value": "parts[0]"
            }
        },
        "undocumented": true,
        "name": "value",
        "longname": "acceptParams~ret.value",
        "kind": "member",
        "memberof": "acceptParams~ret",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2848,
                2858
            ],
            "filename": "utils.js",
            "lineno": 130,
            "columnno": 31,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005709",
                "name": "quality",
                "type": "Literal",
                "value": 1
            }
        },
        "undocumented": true,
        "name": "quality",
        "longname": "acceptParams~ret.quality",
        "kind": "member",
        "memberof": "acceptParams~ret",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2860,
                2870
            ],
            "filename": "utils.js",
            "lineno": 130,
            "columnno": 43,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005711",
                "name": "params",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "undocumented": true,
        "name": "params",
        "longname": "acceptParams~ret.params",
        "kind": "member",
        "memberof": "acceptParams~ret",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2872,
                2892
            ],
            "filename": "utils.js",
            "lineno": 130,
            "columnno": 55,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005713",
                "name": "originalIndex",
                "type": "Identifier",
                "value": "index"
            }
        },
        "undocumented": true,
        "name": "originalIndex",
        "longname": "acceptParams~ret.originalIndex",
        "kind": "member",
        "memberof": "acceptParams~ret",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2908,
                2913
            ],
            "filename": "utils.js",
            "lineno": 132,
            "columnno": 11,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005717",
                "name": "i",
                "type": "Literal",
                "value": 1
            }
        },
        "undocumented": true,
        "name": "i",
        "longname": "acceptParams~i",
        "kind": "member",
        "memberof": "acceptParams",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2948,
                2977
            ],
            "filename": "utils.js",
            "lineno": 133,
            "columnno": 8,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005729",
                "name": "pms",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "pms",
        "longname": "acceptParams~pms",
        "kind": "member",
        "memberof": "acceptParams",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3011,
                3043
            ],
            "filename": "utils.js",
            "lineno": 135,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005746",
                "name": "ret.quality",
                "type": "CallExpression",
                "funcscope": "acceptParams",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "quality",
        "longname": "acceptParams~ret.quality",
        "kind": "member",
        "memberof": "acceptParams~ret",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3064,
                3091
            ],
            "filename": "utils.js",
            "lineno": 137,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005757",
                "name": "ret.params[undefined]",
                "type": "MemberExpression",
                "funcscope": "acceptParams",
                "value": "pms[1]",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "params[undefined]",
        "longname": "acceptParams~ret.params[undefined]",
        "kind": "member",
        "memberof": "acceptParams~ret",
        "scope": "static"
    },
    {
        "comment": "/**\n * Compile \"etag\" value to function.\n *\n * @param  {Boolean|String|Function} val\n * @return {Function}\n * @api private\n */",
        "meta": {
            "range": [
                3249,
                3630
            ],
            "filename": "utils.js",
            "lineno": 152,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005771",
                "name": "exports.compileETag",
                "type": "FunctionExpression",
                "paramnames": [
                    "val"
                ]
            },
            "vars": {
                "fn": "compileETag~fn"
            }
        },
        "description": "Compile \"etag\" value to function.",
        "params": [
            {
                "type": {
                    "names": [
                        "Boolean",
                        "String",
                        "function"
                    ]
                },
                "name": "val"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                }
            }
        ],
        "tags": [
            {
                "originalTitle": "api",
                "title": "api",
                "text": "private",
                "value": "private"
            }
        ],
        "name": "compileETag",
        "longname": "compileETag",
        "kind": "function",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3293,
                3295
            ],
            "filename": "utils.js",
            "lineno": 153,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005779",
                "name": "fn"
            }
        },
        "undocumented": true,
        "name": "fn",
        "longname": "compileETag~fn",
        "kind": "member",
        "memberof": "compileETag",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3409,
                3427
            ],
            "filename": "utils.js",
            "lineno": 162,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005796",
                "name": "fn",
                "type": "MemberExpression",
                "funcscope": "compileETag",
                "value": "exports.wetag",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "fn",
        "longname": "compileETag~fn",
        "kind": "member",
        "memberof": "compileETag",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3496,
                3513
            ],
            "filename": "utils.js",
            "lineno": 167,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005808",
                "name": "fn",
                "type": "MemberExpression",
                "funcscope": "compileETag",
                "value": "exports.etag",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "fn",
        "longname": "compileETag~fn",
        "kind": "member",
        "memberof": "compileETag",
        "scope": "inner"
    },
    {
        "comment": "/**\n * Compile \"query parser\" value to function.\n *\n * @param  {String|Function} val\n * @return {Function}\n * @api private\n */",
        "meta": {
            "range": [
                3760,
                4217
            ],
            "filename": "utils.js",
            "lineno": 184,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005824",
                "name": "exports.compileQueryParser",
                "type": "FunctionExpression",
                "value": "compileQueryParser",
                "paramnames": [
                    "val"
                ]
            },
            "vars": {
                "fn": "compileQueryParser~fn"
            }
        },
        "description": "Compile \"query parser\" value to function.",
        "params": [
            {
                "type": {
                    "names": [
                        "String",
                        "function"
                    ]
                },
                "name": "val"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                }
            }
        ],
        "tags": [
            {
                "originalTitle": "api",
                "title": "api",
                "text": "private",
                "value": "private"
            }
        ],
        "name": "compileQueryParser",
        "longname": "compileQueryParser",
        "kind": "function",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3830,
                3832
            ],
            "filename": "utils.js",
            "lineno": 185,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005833",
                "name": "fn"
            }
        },
        "undocumented": true,
        "name": "fn",
        "longname": "compileQueryParser~fn",
        "kind": "member",
        "memberof": "compileQueryParser",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3948,
                3970
            ],
            "filename": "utils.js",
            "lineno": 194,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005850",
                "name": "fn",
                "type": "MemberExpression",
                "funcscope": "compileQueryParser",
                "value": "querystring.parse",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "fn",
        "longname": "compileQueryParser~fn",
        "kind": "member",
        "memberof": "compileQueryParser",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4007,
                4021
            ],
            "filename": "utils.js",
            "lineno": 197,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005859",
                "name": "fn",
                "type": "Identifier",
                "funcscope": "compileQueryParser",
                "value": "newObject",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "fn",
        "longname": "compileQueryParser~fn",
        "kind": "member",
        "memberof": "compileQueryParser",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4063,
                4092
            ],
            "filename": "utils.js",
            "lineno": 200,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005866",
                "name": "fn",
                "type": "Identifier",
                "funcscope": "compileQueryParser",
                "value": "parseExtendedQueryString",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "fn",
        "longname": "compileQueryParser~fn",
        "kind": "member",
        "memberof": "compileQueryParser",
        "scope": "inner"
    },
    {
        "comment": "/**\n * Compile \"proxy trust\" value to function.\n *\n * @param  {Boolean|String|Number|Array|Function} val\n * @return {Function}\n * @api private\n */",
        "meta": {
            "range": [
                4367,
                4852
            ],
            "filename": "utils.js",
            "lineno": 217,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005880",
                "name": "exports.compileTrust",
                "type": "FunctionExpression",
                "paramnames": [
                    "val"
                ]
            },
            "vars": {
                "": null,
                "val": "compileTrust~val"
            }
        },
        "description": "Compile \"proxy trust\" value to function.",
        "params": [
            {
                "type": {
                    "names": [
                        "Boolean",
                        "String",
                        "Number",
                        "Array",
                        "function"
                    ]
                },
                "name": "val"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                }
            }
        ],
        "tags": [
            {
                "originalTitle": "api",
                "title": "api",
                "text": "private",
                "value": "private"
            }
        ],
        "name": "compileTrust",
        "longname": "compileTrust",
        "kind": "function",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4741,
                4806
            ],
            "filename": "utils.js",
            "lineno": 232,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005926",
                "name": "val",
                "type": "CallExpression",
                "funcscope": "compileTrust",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "val",
        "longname": "compileTrust~val",
        "kind": "member",
        "memberof": "compileTrust",
        "scope": "inner"
    },
    {
        "comment": "/**\n * Set the charset in a given Content-Type string.\n *\n * @param {String} type\n * @param {String} charset\n * @return {String}\n * @api private\n */",
        "meta": {
            "range": [
                5004,
                5280
            ],
            "filename": "utils.js",
            "lineno": 248,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005953",
                "name": "exports.setCharset",
                "type": "FunctionExpression",
                "value": "setCharset",
                "paramnames": [
                    "type",
                    "charset"
                ]
            },
            "vars": {
                "parsed": "setCharset~parsed",
                "parsed.parameters.charset": "setCharset~parsed.parameters.charset"
            }
        },
        "description": "Set the charset in a given Content-Type string.",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "name": "type"
            },
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "name": "charset"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                }
            }
        ],
        "tags": [
            {
                "originalTitle": "api",
                "title": "api",
                "text": "private",
                "value": "private"
            }
        ],
        "name": "setCharset",
        "longname": "setCharset",
        "kind": "function",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5133,
                5165
            ],
            "filename": "utils.js",
            "lineno": 254,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005972",
                "name": "parsed",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "parsed",
        "longname": "setCharset~parsed",
        "kind": "member",
        "memberof": "setCharset",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5187,
                5222
            ],
            "filename": "utils.js",
            "lineno": 257,
            "columnno": 2,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005980",
                "name": "parsed.parameters.charset",
                "type": "Identifier",
                "funcscope": "setCharset",
                "value": "charset",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "parameters.charset",
        "longname": "setCharset~parsed.parameters.charset",
        "kind": "member",
        "memberof": "setCharset~parsed",
        "scope": "static"
    },
    {
        "comment": "/**\n * Create an ETag generator function, generating ETags with\n * the given options.\n *\n * @param {object} options\n * @return {function}\n * @private\n */",
        "meta": {
            "range": [
                5438,
                5651
            ],
            "filename": "utils.js",
            "lineno": 272,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100005993",
                "name": "createETagGenerator",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "options"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Create an ETag generator function, generating ETags with\nthe given options.",
        "params": [
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "name": "options"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                }
            }
        ],
        "access": "private",
        "name": "createETagGenerator",
        "longname": "createETagGenerator",
        "kind": "function",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5537,
                5614
            ],
            "filename": "utils.js",
            "lineno": 274,
            "columnno": 8,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100006004",
                "name": "buf",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "buf",
        "longname": "<anonymous>~buf",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n * Parse an extended query string with qs.\n *\n * @return {Object}\n * @private\n */",
        "meta": {
            "range": [
                5740,
                5839
            ],
            "filename": "utils.js",
            "lineno": 289,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100006025",
                "name": "parseExtendedQueryString",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "str"
                ]
            }
        },
        "description": "Parse an extended query string with qs.",
        "returns": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                }
            }
        ],
        "access": "private",
        "name": "parseExtendedQueryString",
        "longname": "parseExtendedQueryString",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5810,
                5831
            ],
            "filename": "utils.js",
            "lineno": 291,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100006036",
                "name": "allowPrototypes",
                "type": "Literal",
                "value": true
            }
        },
        "undocumented": true,
        "name": "allowPrototypes",
        "longname": "allowPrototypes",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "/**\n * Return new empty object.\n *\n * @return {Object}\n * @api private\n */",
        "meta": {
            "range": [
                5917,
                5954
            ],
            "filename": "utils.js",
            "lineno": 302,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100006038",
                "name": "newObject",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "description": "Return new empty object.",
        "returns": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                }
            }
        ],
        "tags": [
            {
                "originalTitle": "api",
                "title": "api",
                "text": "private",
                "value": "private"
            }
        ],
        "name": "newObject",
        "longname": "newObject",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Module dependencies.\n * @private\n */",
        "meta": {
            "range": [
                230,
                270
            ],
            "filename": "view.js",
            "lineno": 16,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100006048",
                "name": "debug",
                "type": "CallExpression",
                "value": ""
            }
        },
        "description": "Module dependencies.",
        "access": "private",
        "name": "debug",
        "longname": "debug",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                276,
                298
            ],
            "filename": "view.js",
            "lineno": 17,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100006056",
                "name": "path",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "path",
        "longname": "path",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                304,
                322
            ],
            "filename": "view.js",
            "lineno": 18,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100006062",
                "name": "fs",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "fs",
        "longname": "fs",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Module variables.\n * @private\n */",
        "meta": {
            "range": [
                371,
                393
            ],
            "filename": "view.js",
            "lineno": 25,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100006068",
                "name": "dirname",
                "type": "MemberExpression",
                "value": "path.dirname"
            }
        },
        "description": "Module variables.",
        "access": "private",
        "name": "dirname",
        "longname": "dirname",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                399,
                423
            ],
            "filename": "view.js",
            "lineno": 26,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100006074",
                "name": "basename",
                "type": "MemberExpression",
                "value": "path.basename"
            }
        },
        "undocumented": true,
        "name": "basename",
        "longname": "basename",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                429,
                451
            ],
            "filename": "view.js",
            "lineno": 27,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100006080",
                "name": "extname",
                "type": "MemberExpression",
                "value": "path.extname"
            }
        },
        "undocumented": true,
        "name": "extname",
        "longname": "extname",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                457,
                473
            ],
            "filename": "view.js",
            "lineno": 28,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100006086",
                "name": "join",
                "type": "MemberExpression",
                "value": "path.join"
            }
        },
        "undocumented": true,
        "name": "join",
        "longname": "join",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                479,
                501
            ],
            "filename": "view.js",
            "lineno": 29,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100006092",
                "name": "resolve",
                "type": "MemberExpression",
                "value": "path.resolve"
            }
        },
        "undocumented": true,
        "name": "resolve",
        "longname": "resolve",
        "kind": "member",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Module exports.\n * @public\n */",
        "meta": {
            "range": [
                543,
                564
            ],
            "filename": "view.js",
            "lineno": 36,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100006098",
                "name": "module.exports",
                "type": "Identifier",
                "value": "View",
                "paramnames": []
            }
        },
        "description": "Module exports.",
        "access": "public",
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * Initialize a new `View` with the given `name`.\n *\n * Options:\n *\n *   - `defaultEngine` the default template engine name\n *   - `engines` template engine require() cache\n *   - `root` root path for view lookup\n *\n * @param {string} name\n * @param {object} options\n * @public\n */",
        "meta": {
            "range": [
                854,
                1853
            ],
            "filename": "view.js",
            "lineno": 52,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100006103",
                "name": "View",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "name",
                    "options"
                ]
            },
            "vars": {
                "opts": "View~opts",
                "this.defaultEngine": null,
                "this.ext": null,
                "this.name": null,
                "this.root": null,
                "fileName": "View~fileName",
                "mod": "View~mod",
                "fn": "View~fn",
                "opts.engines[undefined]": "View~opts.engines[undefined]",
                "this.engine": null,
                "this.path": null
            }
        },
        "description": "Initialize a new `View` with the given `name`.\n\nOptions:\n\n  - `defaultEngine` the default template engine name\n  - `engines` template engine require() cache\n  - `root` root path for view lookup",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "name": "name"
            },
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "name": "options"
            }
        ],
        "access": "public",
        "name": "View",
        "longname": "View",
        "kind": "function",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                891,
                911
            ],
            "filename": "view.js",
            "lineno": 53,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100006109",
                "name": "opts",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "opts",
        "longname": "View~opts",
        "kind": "member",
        "memberof": "View",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                916,
                955
            ],
            "filename": "view.js",
            "lineno": 55,
            "columnno": 2,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100006115",
                "name": "this.defaultEngine",
                "type": "MemberExpression",
                "value": "opts.defaultEngine",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "defaultEngine",
        "longname": "defaultEngine",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                959,
                983
            ],
            "filename": "view.js",
            "lineno": 56,
            "columnno": 2,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100006123",
                "name": "this.ext",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "ext",
        "longname": "ext",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                987,
                1003
            ],
            "filename": "view.js",
            "lineno": 57,
            "columnno": 2,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100006131",
                "name": "this.name",
                "type": "Identifier",
                "value": "name",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "name",
        "longname": "name",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1007,
                1028
            ],
            "filename": "view.js",
            "lineno": 58,
            "columnno": 2,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100006137",
                "name": "this.root",
                "type": "MemberExpression",
                "value": "opts.root",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "root",
        "longname": "root",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1171,
                1186
            ],
            "filename": "view.js",
            "lineno": 64,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100006160",
                "name": "fileName",
                "type": "Identifier",
                "value": "name"
            }
        },
        "undocumented": true,
        "name": "fileName",
        "longname": "View~fileName",
        "kind": "member",
        "memberof": "View",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1258,
                1358
            ],
            "filename": "view.js",
            "lineno": 68,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100006170",
                "name": "this.ext",
                "type": "ConditionalExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "ext",
        "longname": "ext",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1365,
                1385
            ],
            "filename": "view.js",
            "lineno": 72,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100006191",
                "name": "fileName",
                "type": "MemberExpression",
                "funcscope": "View",
                "value": "this.ext",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "fileName",
        "longname": "View~fileName",
        "kind": "member",
        "memberof": "View",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1452,
                1475
            ],
            "filename": "view.js",
            "lineno": 77,
            "columnno": 8,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100006207",
                "name": "mod",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "mod",
        "longname": "View~mod",
        "kind": "member",
        "memberof": "View",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1545,
                1572
            ],
            "filename": "view.js",
            "lineno": 81,
            "columnno": 8,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100006222",
                "name": "fn",
                "type": "MemberExpression",
                "value": ".__express"
            }
        },
        "undocumented": true,
        "name": "fn",
        "longname": "View~fn",
        "kind": "member",
        "memberof": "View",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1699,
                1726
            ],
            "filename": "view.js",
            "lineno": 87,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100006244",
                "name": "opts.engines[undefined]",
                "type": "Identifier",
                "funcscope": "View",
                "value": "fn",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "engines[undefined]",
        "longname": "View~opts.engines[undefined]",
        "kind": "member",
        "memberof": "View~opts",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1759,
                1795
            ],
            "filename": "view.js",
            "lineno": 91,
            "columnno": 2,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100006254",
                "name": "this.engine",
                "type": "MemberExpression",
                "value": "opts.engines[undefined]",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "engine",
        "longname": "engine",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1817,
                1850
            ],
            "filename": "view.js",
            "lineno": 94,
            "columnno": 2,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100006266",
                "name": "this.path",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "path",
        "longname": "path",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "/**\n * Lookup view by the given `name`\n *\n * @param {string} name\n * @private\n */",
        "meta": {
            "range": [
                1938,
                2343
            ],
            "filename": "view.js",
            "lineno": 104,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100006276",
                "name": "View.prototype.lookup",
                "type": "FunctionExpression",
                "value": "lookup",
                "paramnames": [
                    "name"
                ]
            },
            "vars": {
                "path": "View#lookup~path",
                "roots": "View#lookup~roots",
                "i": "View#lookup~i",
                "root": "View#lookup~root",
                "loc": "View#lookup~loc",
                "dir": "View#lookup~dir",
                "file": "View#lookup~file"
            }
        },
        "description": "Lookup view by the given `name`",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "name": "name"
            }
        ],
        "access": "private",
        "name": "lookup",
        "longname": "View#lookup",
        "kind": "function",
        "memberof": "View",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1992,
                1996
            ],
            "filename": "view.js",
            "lineno": 105,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100006287",
                "name": "path"
            }
        },
        "undocumented": true,
        "name": "path",
        "longname": "View#lookup~path",
        "kind": "member",
        "memberof": "View#lookup",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2004,
                2032
            ],
            "filename": "view.js",
            "lineno": 106,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100006290",
                "name": "roots",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "roots",
        "longname": "View#lookup~roots",
        "kind": "member",
        "memberof": "View#lookup",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2077,
                2082
            ],
            "filename": "view.js",
            "lineno": 110,
            "columnno": 11,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100006306",
                "name": "i",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "i",
        "longname": "View#lookup~i",
        "kind": "member",
        "memberof": "View#lookup",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2126,
                2141
            ],
            "filename": "view.js",
            "lineno": 111,
            "columnno": 8,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100006321",
                "name": "root",
                "type": "MemberExpression",
                "value": "roots[undefined]"
            }
        },
        "undocumented": true,
        "name": "root",
        "longname": "View#lookup~root",
        "kind": "member",
        "memberof": "View#lookup",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2176,
                2201
            ],
            "filename": "view.js",
            "lineno": 114,
            "columnno": 8,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100006327",
                "name": "loc",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "loc",
        "longname": "View#lookup~loc",
        "kind": "member",
        "memberof": "View#lookup",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2211,
                2229
            ],
            "filename": "view.js",
            "lineno": 115,
            "columnno": 8,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100006334",
                "name": "dir",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "dir",
        "longname": "View#lookup~dir",
        "kind": "member",
        "memberof": "View#lookup",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2239,
                2259
            ],
            "filename": "view.js",
            "lineno": 116,
            "columnno": 8,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100006340",
                "name": "file",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "file",
        "longname": "View#lookup~file",
        "kind": "member",
        "memberof": "View#lookup",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2290,
                2320
            ],
            "filename": "view.js",
            "lineno": 119,
            "columnno": 4,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100006346",
                "name": "path",
                "type": "CallExpression",
                "funcscope": "View#lookup",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "path",
        "longname": "View#lookup~path",
        "kind": "member",
        "memberof": "View#lookup",
        "scope": "inner"
    },
    {
        "comment": "/**\n * Render with the given options.\n *\n * @param {object} options\n * @param {function} callback\n * @private\n */",
        "meta": {
            "range": [
                2461,
                2603
            ],
            "filename": "view.js",
            "lineno": 133,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100006357",
                "name": "View.prototype.render",
                "type": "FunctionExpression",
                "value": "render",
                "paramnames": [
                    "options",
                    "callback"
                ]
            }
        },
        "description": "Render with the given options.",
        "params": [
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "name": "options"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "name": "callback"
            }
        ],
        "access": "private",
        "name": "render",
        "longname": "View#render",
        "kind": "function",
        "memberof": "View",
        "scope": "instance"
    },
    {
        "comment": "/**\n * Resolve the file within the given directory.\n *\n * @param {string} dir\n * @param {string} file\n * @private\n */",
        "meta": {
            "range": [
                2725,
                3091
            ],
            "filename": "view.js",
            "lineno": 146,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100006386",
                "name": "View.prototype.resolve",
                "type": "FunctionExpression",
                "value": "resolve",
                "paramnames": [
                    "dir",
                    "file"
                ]
            },
            "vars": {
                "ext": "View#resolve~ext",
                "path": "View#resolve~path",
                "stat": "View#resolve~stat"
            }
        },
        "description": "Resolve the file within the given directory.",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "name": "dir"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "name": "file"
            }
        ],
        "access": "private",
        "name": "resolve",
        "longname": "View#resolve",
        "kind": "function",
        "memberof": "View",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2786,
                2800
            ],
            "filename": "view.js",
            "lineno": 147,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100006398",
                "name": "ext",
                "type": "MemberExpression",
                "value": "this.ext"
            }
        },
        "undocumented": true,
        "name": "ext",
        "longname": "View#resolve~ext",
        "kind": "member",
        "memberof": "View#resolve",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2827,
                2849
            ],
            "filename": "view.js",
            "lineno": 150,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100006404",
                "name": "path",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "path",
        "longname": "View#resolve~path",
        "kind": "member",
        "memberof": "View#resolve",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2857,
                2877
            ],
            "filename": "view.js",
            "lineno": 151,
            "columnno": 6,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100006411",
                "name": "stat",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "stat",
        "longname": "View#resolve~stat",
        "kind": "member",
        "memberof": "View#resolve",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2959,
                3011
            ],
            "filename": "view.js",
            "lineno": 158,
            "columnno": 2,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100006427",
                "name": "path",
                "type": "CallExpression",
                "funcscope": "View#resolve",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "path",
        "longname": "View#resolve~path",
        "kind": "member",
        "memberof": "View#resolve",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3015,
                3035
            ],
            "filename": "view.js",
            "lineno": 159,
            "columnno": 2,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100006440",
                "name": "stat",
                "type": "CallExpression",
                "funcscope": "View#resolve",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "stat",
        "longname": "View#resolve~stat",
        "kind": "member",
        "memberof": "View#resolve",
        "scope": "inner"
    },
    {
        "comment": "/**\n * Return a stat, maybe.\n *\n * @param {string} path\n * @return {fs.Stats}\n * @private\n */",
        "meta": {
            "range": [
                3189,
                3324
            ],
            "filename": "view.js",
            "lineno": 174,
            "columnno": 0,
            "path": "/home/tuomas/projects/media-arc/server/node_modules/express/lib",
            "code": {
                "id": "astnode100006455",
                "name": "tryStat",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "path"
                ]
            }
        },
        "description": "Return a stat, maybe.",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "name": "path"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "fs.Stats"
                    ]
                }
            }
        ],
        "access": "private",
        "name": "tryStat",
        "longname": "tryStat",
        "kind": "function",
        "scope": "global"
    },
    {
        "kind": "package",
        "longname": "package:undefined",
        "files": [
            "/home/tuomas/projects/media-arc/server/node_modules/express/lib/application.js",
            "/home/tuomas/projects/media-arc/server/node_modules/express/lib/express.js",
            "/home/tuomas/projects/media-arc/server/node_modules/express/lib/request.js",
            "/home/tuomas/projects/media-arc/server/node_modules/express/lib/response.js",
            "/home/tuomas/projects/media-arc/server/node_modules/express/lib/utils.js",
            "/home/tuomas/projects/media-arc/server/node_modules/express/lib/view.js"
        ]
    }
]
