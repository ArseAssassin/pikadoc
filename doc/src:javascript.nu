# Parses json generated by jsdoc to generate a new doctable.
#
# `in`: should be a `jsdoc` generated JSON document
#
# Example: `doc use (npx jsdoc -X <path to source directory>|doc src:javascript parse-from-jsdoc)`
export def parse-from-jsdoc [] {
  from json
  |where undocumented? != true
  |each {
    |row| {
      name: ($row.longname?),
      summary: ($row.description?|default ""|split row "\n\n"|get 0?),
      returns: $row.returns?.0?.description?
      type: ($row.params?|default []|each {|param| $param.type.names|str join '|'}|append $row.returns?.0.type.names.0|str join ' -> ')
      kind: $row.kind
      source: $row.comment?
      examples: $row.examples?
      namespace: $row.memberof?
    }
  }
}

# Uses `jsdoc` to generate a doctable from `filepath` and selects is the current doctable
#
# Make sure that `jsdoc` is installed in your `PATH` to use this command.
#
# `filepath` is a path to the source directory to generate docs from
#
# Example: doc src:javascript use "./node_modules/express/lib/"
export def --env use [filepath] {
  if ((which jsdoc) == []) {
    print ("`jsdoc` was not found in $PATH - you can install jsdoc by doing `npm install -g jsdoc`. If you'd prefer not to install it globally, see `doc src:javascript parse-from-jsdoc`"|mdcat)
    return
  }

  $env.PKD_CURRENT = (jsdoc -X $filepath|parse-from-jsdoc)
  $env.PKD_ABOUT = {
    name: $filepath
    text_format: 'plain'
    generator: 'src:javascript'
  }
}