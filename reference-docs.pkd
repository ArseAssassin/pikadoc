about:
  name: doc
  text_format: plain
  generator: src:man
doctable:
- name: doc all
  summary: Returns the currently selected doctable without applying any formatting.
  description: |
    Returns the currently selected doctable without applying any formatting.
  parameters: []
  kind: command
- name: doc doc
  summary: Returns a summarized table of all available symbols in the currently selected docfile.
  description: |
    Returns a summarized table of all available symbols in the currently selected docfile.

    If (name) is passed as an argument, results will be filtered by their name. If (index) is passed as an argument, only the selected result will be returned.

    When a single result is found, it'll be presented using `doc present`. If more than one result is found, returned symbols will be summarized using `doc summarize`.
  parameters:
  - type: <any>
    name: name
    defaultValue: null
    optional: false
  - type: <any>
    name: index
    defaultValue: null
    optional: false
  kind: command
- name: doc save
  summary: Saves doctable in the local filesystem.
  description: |
    Saves doctable in the local filesystem.

    `in` is a valid doctable
    `filepath` is a path to use for saving the file
  parameters:
  - type: <string>
    name: filepath
    defaultValue: null
    optional: false
  - type: <record>
    name: about
    defaultValue: null
    optional: false
  - type: <table>
    name: doctable
    defaultValue: null
    optional: false
  kind: command
- name: doc search
  summary: Summarizes current doctable and returns all symbols matching `$query`
  description: |
    Summarizes current doctable and returns all symbols matching `$query`

    `$query` is the search term to be matched
  parameters:
  - type: <any>
    name: query
    defaultValue: null
    optional: false
  kind: command
- name: doc summarize
  summary: Creates a readable summary of a single symbol.
  description: |
    Creates a readable summary of a single symbol.

    `$in` should be a pikadoc symbol.
  parameters: []
  kind: command
- name: doc summarize-all
  summary: Creates a readable summary of all symbols.
  description: |
    Creates a readable summary of all symbols.

    `$in` should be a table of pikadoc symbols.
  parameters: []
  kind: command
- name: doc use
  summary: Sets the current doctable.
  description: |
    Sets the current doctable.

    `docs` is either a file in the local filesystem or a doctable.

    Examples
    # Use a docfile from local filesystem
      doc use my-doc-file.pkd

    # Download and use pikadoc CLI reference docs
      doc use (http get 'https://raw.githubusercontent.com/ArseAssassin/pikadoc/master/reference-docs.pkd'|from yaml)
  parameters:
  - type: <any>
    name: docs
    defaultValue: null
    optional: false
  kind: command
- name: doc src:devdocs index
  summary: Retrieves a list of available documentation files from devdocs.io and returns them as a table
  description: |
    Retrieves a list of available documentation files from devdocs.io and returns them as a table
  parameters: []
  kind: command
- name: doc src:devdocs use
  summary: Downloads and parses documentation from devdocs.io and selects it as the current doctable
  description: |
    Downloads and parses documentation from devdocs.io and selects it as the current doctable

    `slug` is the url slug of the documentation file. Use src:devdocs index for a complete list of available files

    Example: doc src:devdocs use nushell

    See also: doc src:devdocs index
  parameters:
  - type: <any>
    name: slug
    defaultValue: null
    optional: false
  kind: command
- name: doc src:javascript parse-from-jsdoc
  summary: Parses json generated by jsdoc to generate a new doctable.
  description: |
    Parses json generated by jsdoc to generate a new doctable.

    `in`: should be a `jsdoc` generated JSON document

    Example: `jsdoc -X <path to source directory>|doc src:javascript parse-from-jsdoc`
  parameters: []
  kind: command
- name: doc src:javascript use
  summary: null
  description: ''
  parameters:
  - type: <any>
    name: path
    defaultValue: null
    optional: false
  kind: command
- name: doc src:man parse
  summary: Parses a roff input into a doctable
  description: |
    Parses a roff input into a doctable

    `$in` is a valid string in roff format

    Example: man -Rutf8 man|doc src:man parse
  parameters: []
  kind: command
- name: doc src:man use
  summary: Parses a man page and selects it as the current doctable
  description: |
    Parses a man page and selects it as the current doctable

    Takes the name of the manual entry as an argument and parses the command line options for that entry. The generated doctable is selected as the current doctable.

    `$it` is the name of the man page

    Example: doc src:man use "cat"
  parameters:
  - type: <any>
    name: it
    defaultValue: null
    optional: false
  kind: command
- name: doc src:nushell document-module
  summary: Returns doctable documenting the named module.
  description: |
    Returns doctable documenting the named module.

    `name` is the name of the module to document
    `path` is the path to the submodule. If module is a top-level module, path should be `[]`
  parameters:
  - type: <any>
    name: name
    defaultValue: null
    optional: false
  - type: <list<any>>
    name: path
    defaultValue: '[]'
    optional: true
  kind: command
- name: doc src:nushell use
  summary: null
  description: ''
  parameters:
  - type: <any>
    name: name
    defaultValue: null
    optional: false
  kind: command
- name: doc src:openapi parse-from-swagger
  summary: Returns documentation for a REST endpoint defined in a .json/.yaml file.
  description: |
    Returns documentation for a REST endpoint defined in a .json/.yaml file.

    `$in` is a record parsed from a valid Swagger .json/.yaml file

    Example: http get 'https://petstore.swagger.io/v2/swagger.json'|doc src:openapi parse-from-swagger
  parameters: []
  kind: command
- name: doc src:openapi use
  summary: null
  description: ''
  parameters:
  - type: <any>
    name: url
    defaultValue: null
    optional: false
  kind: command
- name: doc src:python parse-from-sphinx-html
  summary: Parses a doctable from a HTML documentation page generated using sphinx.
  description: |
    Parses a doctable from a HTML documentation page generated using sphinx.

    `in` should be a valid sphinx HTML document

    Example: http get 'https://flask.palletsprojects.com/en/3.0.x/api/'|doc src:python parse-from-sphinx-html

    NOTE: This command parses only a single HTML page. Sphinx documentation typically consists of multiple documents and a single page might not contain all the references you're looking for. To index all symbols, make sure to parse all relevant pages, or use the `singlehtml` builder in Sphinx to produce a single page documentation.
  parameters: []
  kind: command
- name: doc src:python use
  summary: null
  description: ''
  parameters:
  - type: <any>
    name: url
    defaultValue: null
    optional: false
  kind: command
- name: doc src:sqlite parse-from-db
  summary: Returns documentation for all tables, columns and indexes in a sqlite database.
  description: |
    Returns documentation for all tables, columns and indexes in a sqlite database.

    `in` is a valid sqlite database.

    Example: open my-database.db|doc src:sqlite parse-from-db
  parameters: []
  kind: command
- name: doc src:sqlite use
  summary: null
  description: ''
  parameters:
  - type: <any>
    name: db
    defaultValue: null
    optional: false
  kind: command
